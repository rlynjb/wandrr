<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>wandrr</title>
    <description>This is a blog about travel and tech.
</description>
    <link>http://www.wandrr.io/</link>
    <atom:link href="http://www.wandrr.io/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Tue, 03 May 2016 09:13:02 -0700</pubDate>
    <lastBuildDate>Tue, 03 May 2016 09:13:02 -0700</lastBuildDate>
    <generator>Jekyll v2.5.3</generator>
    
      <item>
        <title>A Parallax Encounter</title>
        <description>&lt;p&gt;I’ve always wanted to create a one-page website with an awesome Parallax Scrolling. Most of my recent blog posts are about JavaScript, App Development, CMS and rarely touched the topic of graphics and parallax. So for this post, I’ll be blogging my thought-process on exploring Parallax Scrolling.&lt;/p&gt;

&lt;p&gt;My initial thoughts when I looked at examples of websites with Parallax Scrolling is &lt;em&gt;‘its not just CSS and JS coding, its also about Graphics as well’&lt;/em&gt; and honestly, that first step is what hinders me from building Parallax Scrolling website, not unless I have a Graphic Designer to provide me assets and instructions.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;Before approaching a project, I usually read a couple of articles first or another approach would be, I start building a project and if I’d get stuck, I then start researching more about it. Since I’ve had experience with website layouts, for this project, the latter approach is what I used.&lt;/p&gt;

&lt;p&gt;I then started doing research on Parallax Scrolling and found this article:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.vandelaydesign.com/parallax-scrolling-best-practices-examples-and-tutorials/&quot;&gt;The Ultimate Guide to Parallax Scrolling: Best Practices and Tutorials&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;From the article above, I will only note applicable concepts that fits to my Parallax website project.&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;best-practices&quot;&gt;Best Practices&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;fallback&lt;/strong&gt;: I would suggest developing a fallback method which can work in all browsers even without animation effects. At the very least make sure visitors can still browse the static website.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;simplify&lt;/strong&gt;: Parallax scrolling can go from cute and fun to overly-complicated with just a few additions. Make the parallax animation(s) work for your content and not the other way around.&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;good-examples-of-parallax-design&quot;&gt;Good Examples of Parallax Design&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Generally speaking a great parallax layout should tell a story.&lt;/strong&gt;&lt;br /&gt;
I really like the example on Movement of Data which behaves like a parallax infographic. The site animates both up/down and left/right as you scroll through the content. It’s all very informative and the graphics help to tell the story rather than distract from it. While the effects are not extraordinary they do provide an efficacious storytelling method.&lt;/p&gt;

&lt;p&gt;Another great parallax design can be found on BAKE Agency. The homepage animates in a circular fashion rotating through different sections of content. It’s not an exact parallax effect but it does incorporate the illusion of depth as the user moves through a line of sight. The reason I’d mark this as a great example is because it’s usable yet still creative and unique with a stylish implementation.&lt;/p&gt;

&lt;p&gt;The goal of a parallax website design is to impress visitors while still maintaining all the customary statues of unofficial UX design law. Great parallax websites convey their message in an easily-consumed format while contributing to the digital art form. Motion is a big part of the design process so it’s important to think about how the page should animate, and if possible have a reason for that choice.&lt;/p&gt;

&lt;p&gt;The greatest parallax websites make me feel like I’m interacting with the work of a professional designer. Look through the many examples I’ve provided in this guide and find the sites that make you feel comfortable. These websites can offer the best prototypical solutions for whatever parallax effect you’re trying to create.&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;bad-examples-of-parallax-design&quot;&gt;Bad Examples of Parallax Design&lt;/h3&gt;

&lt;p&gt;My first frustrating example is on Make Your Money Matter which is an informational page about Credit Unions. Let me state that I love their message and graphic design. The page itself is actually very well crafted. However in regards to user experience the page is quite limiting and uncomfortable. You can only scroll with the mousewheel or by clicking &amp;amp; dragging the browser’s scrollbar.&lt;/p&gt;

&lt;p&gt;This means the arrow keys don’t work and the page up/down keys also don’t work. To make things more confusing there aren’t any clickable links to slide around the different page sections. The only way to navigate is by tediously scrolling with the scrollbar and perniciously feeding that arthritis. The whole experience feels imprisoning and while the design is fantastic it simply cannot subdue such an annoying UX problem.&lt;/p&gt;

&lt;p&gt;A polish website for the children network presents a side-scrolling parallax design with one glaring problem: the whole page is made up of images. Naturally you’ll ask “even the text?”. Yes the text itself, which could have been easily typed into HTML, was instead created with images. I was so terrified at this realization that evening I had to sleep with a nightlight.&lt;/p&gt;

&lt;p&gt;The website animation is actually quite nice and even though I’m not able to read anything because Google can’t translate images, I have a feeling this site would be in my great examples list if it weren’t so textually-impaired. When creating parallax designs stay away from Flash animation and be sure to use images only for images. Actually that advice carries over into every type of website, parallax or not. You’ll spare your visitors quite a few sleepless nights questioning their own design ethics and sanity.&lt;/p&gt;

&lt;p&gt;To finish up this section let’s go over just one more sample of difficult UX design. The website for South Australian Roadtrips has a quaint parallax slider with a few different pieces of content. While the text isn’t created using images you’ll still have a difficult time selecting or interacting with the text because it appears as part of the slideshow. This means you can’t easily copy/paste locations to search for them in Google.&lt;/p&gt;

&lt;p&gt;But really my problem with this layout is that it’s too confusing. There is a top navigation with some buttons that animate between slides but they don’t feel smooth. The animation is slow and it seems like the content would be presented better without animated effects. I’m sure not everyone will agree with me but it brings us back to the concept of simplicity. Make the parallax animation(s) work for your content and not the other way around.&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;techniques-for-parallax-design&quot;&gt;Techniques for Parallax Design&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Nice Single Page Parallax Design&lt;/li&gt;
  &lt;li&gt;Background Parallax Sliding&lt;/li&gt;
  &lt;li&gt;Horizontal Parallax Scrolling&lt;/li&gt;
  &lt;li&gt;Graphic Animation&lt;/li&gt;
  &lt;li&gt;Motion-Sensitive Animation&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;tools&quot;&gt;Tools&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;JS Parallax Plugins&lt;/li&gt;
  &lt;li&gt;Free Code Snippets&lt;/li&gt;
  &lt;li&gt;Parallax Scrolling Design Inspiration&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;implementing-parallax-scrolling&quot;&gt;Implementing Parallax Scrolling&lt;/h3&gt;

&lt;p&gt;The solution I came up with was to use &lt;a href=&quot;http://prinzhorn.github.io/skrollr/&quot;&gt;skrollr&lt;/a&gt;. This JS Parallax plugin seem to have alot of Stars on github.com&lt;/p&gt;
</description>
        <pubDate>Thu, 07 Apr 2016 08:52:13 -0700</pubDate>
        <link>http://www.wandrr.io/A-Parallax-Encounter</link>
        <guid isPermaLink="true">http://www.wandrr.io/A-Parallax-Encounter</guid>
        
        <category>parallax scrolling</category>
        
        
      </item>
    
      <item>
        <title>Simple instructions for Drupal Minor Updates</title>
        <description>&lt;p&gt;This blog post tackles implementing &lt;strong&gt;Minor Updates&lt;/strong&gt; on Drupal websites. Its a short, simple, and pretty straight-forward instructions.&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;references-and-tools&quot;&gt;References and Tools&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.drupal.org/node/1223018&quot;&gt;Update procedure (minor version change)&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://tylerfrankenstein.com/code/use-drush-export-import-drupal-mysql-database-dump-file&quot;&gt;Use Drush to Export/Import a Drupal MySQL Database Dump File&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://drushcommands.com&quot;&gt;Drush Commands&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;two-ways-to-check-for-drupal-update-status&quot;&gt;Two ways to check for Drupal Update Status&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;via Website GUI
    &lt;ul&gt;
      &lt;li&gt;&lt;code&gt;http://www.website-name.com/admin/reports/updates&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;&lt;code&gt;Reports &amp;gt; Available Updates&lt;/code&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;via CLI
    &lt;ul&gt;
      &lt;li&gt;&lt;code&gt;drush pm-updatestatus&lt;/code&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;preparation-before-updating-a-drupal-website&quot;&gt;Preparation before Updating a Drupal website&lt;/h3&gt;

&lt;ol&gt;
  &lt;li&gt;Backup database via Drush
    &lt;ul&gt;
      &lt;li&gt;&lt;code&gt;drush sql-dump &amp;gt; name_of_site-date.sql&lt;/code&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Backup core files by compressing directory containing drupal core files
    &lt;ul&gt;
      &lt;li&gt;&lt;code&gt;tar -czf site_name_date.tar.gz /path_to_site_directory/&lt;/code&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Show a report of available minor updates to Drupal core and contrib projects.
    &lt;ul&gt;
      &lt;li&gt;&lt;code&gt;drush pm-updatestatus&lt;/code&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Backup &lt;code&gt;.htaccess&lt;/code&gt; by making a copy and dumping outside of drupal website directory
    &lt;ul&gt;
      &lt;li&gt;&lt;code&gt;cp .htaccess ../&lt;/code&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;implementing-minor-updates-on-drupal-sites&quot;&gt;Implementing Minor Updates on Drupal sites&lt;/h3&gt;

&lt;p&gt;Only &lt;em&gt;Security Updates&lt;/em&gt; of core and modules will be performed. Updating Modules with &lt;code&gt;Update available&lt;/code&gt; message may conflict with other module or drupal core version.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;cd to drupal website directory and run &lt;code&gt;drush up drupal&lt;/code&gt; to update drupal core&lt;/li&gt;
  &lt;li&gt;run &lt;code&gt;drush pm-updatestatus&lt;/code&gt; again to check for other module updates&lt;/li&gt;
  &lt;li&gt;run &lt;code&gt;drush up &amp;lt;name of module&amp;gt;&lt;/code&gt; to update a module&lt;/li&gt;
&lt;/ol&gt;
</description>
        <pubDate>Fri, 01 Apr 2016 05:26:55 -0700</pubDate>
        <link>http://www.wandrr.io/Simple-Instructions-for-Drupal-Minor-Updates</link>
        <guid isPermaLink="true">http://www.wandrr.io/Simple-Instructions-for-Drupal-Minor-Updates</guid>
        
        <category>drupal</category>
        
        
      </item>
    
      <item>
        <title>Developing a Simple Pebble Time app</title>
        <description>&lt;p&gt;&lt;a href=&quot;https://developer.pebble.com/&quot;&gt;Pebble Developers&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Thu, 31 Mar 2016 04:19:44 -0700</pubDate>
        <link>http://www.wandrr.io/Developing-a-simple-Pebble-Time-app</link>
        <guid isPermaLink="true">http://www.wandrr.io/Developing-a-simple-Pebble-Time-app</guid>
        
        <category>pebble time</category>
        
        
      </item>
    
      <item>
        <title>Notes on Prototyping with Wordpress</title>
        <description>&lt;p&gt;This is a continuation of my &lt;a href=&quot;/Front-End-workflow-with-Wordpress&quot;&gt;Front-End workflow with Wordpress&lt;/a&gt; blog post, containing notes and personal opinion on tools/frameworks used for prototyping, getting more indepth with top 2 of my chosen Wordpress Foundation Themes.&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;why-use-a-css-preprocessors&quot;&gt;Why use a CSS Preprocessors&lt;/h3&gt;

&lt;p&gt;Reason why I included this segment, working with different developers, each has their own preference and opinion towards modern development tools. Not all agree with Node.js and modern front-end development tools. As a Front-End Developer though, I’ve experience the learning curve and benefits of using such tools. Below are articles regarding CSS Processor - SASS.&lt;/p&gt;

&lt;p&gt;Here is an interesting article about the &lt;a href=&quot;http://1stwebdesigner.com/power-sass-why-use-css-preprocessors/&quot;&gt;Power of SASS and its advantages for Front-End Engineers&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Here are listed &lt;a href=&quot;http://blog.blakesimpson.co.uk/read/37-less-sass-the-advantages-of-css-preprocessing-explained&quot;&gt;features of CSS Preprocessors&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://developer.chrome.com/devtools/docs/css-preprocessors&quot;&gt;Debugging CSS Preprocessor on Chrome Dev Tool&lt;/a&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;choosing-a-wp-theme-with-foundation-to-work-with&quot;&gt;Choosing a WP theme with Foundation to work with&lt;/h3&gt;

&lt;p&gt;So remember my previous blogpost ‘Front-End Workflow with Wordpress’ and mentioned using ‘FoundationPress’. After playing around with the theme further, I decided to go with ‘JointsWP’.&lt;/p&gt;

&lt;p&gt;with foundationpress, setting it up was easy and creating templates, but when I got to the header menu template. I was trying to understand what was going on with FoundationPress. It got really confusing on how the menu was set up and the theme itself doens’t have much documentation.&lt;/p&gt;

&lt;p&gt;So i looked further and played around with JointsWP.&lt;/p&gt;

&lt;p&gt;My first impression was understanding with how they layout their menu was easy. and right off the install, they are using Foundation’s Off-canvas menu. Though I am still wondering why most theme would breakdown its menu html markups to pieces of template.&lt;/p&gt;

&lt;p&gt;JointsWP also provides documentation for its theme. So besides Zurb Foundation documentation, there is also JointsWP documentation.&lt;/p&gt;

&lt;p&gt;although, FoundationPress provides documentation but it seems like its still underdevelope.&lt;/p&gt;

&lt;p&gt;As with other themes, JointsWP did just that but not as confusing as FoundationPress.&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;starting-workflow&quot;&gt;Starting workflow…&lt;/h3&gt;

&lt;p&gt;Create main pages on wordpress dashboard.&lt;/p&gt;

&lt;p&gt;work with header first.. set initial logo and menu items&lt;/p&gt;

&lt;p&gt;set up Orbitz (carousel), go to zurb foundation documentation for instructions to implement carousel or any other js component.&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;converting-pieces-of-data-to-wp-custom-fields&quot;&gt;Converting pieces of data to WP Custom Fields&lt;/h3&gt;

&lt;p&gt;For this task, I will be using this plugin called &lt;a href=&quot;http://www.advancedcustomfields.com/&quot;&gt;AdvanceCustomFields&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;It is easier to implement custom fields to posts, custom post type, pages and customize how form will be displayed on wp admin dashboard.&lt;/p&gt;

&lt;p&gt;It is also developer friendly, providing proper documentation and API.&lt;/p&gt;
</description>
        <pubDate>Wed, 30 Mar 2016 04:00:51 -0700</pubDate>
        <link>http://www.wandrr.io/Notes-on-prototyping-with-Wordpress</link>
        <guid isPermaLink="true">http://www.wandrr.io/Notes-on-prototyping-with-Wordpress</guid>
        
        <category>wordpress</category>
        
        
      </item>
    
      <item>
        <title>Fiddling with PhoneGap Plugins and HTML5 Speech Recognition</title>
        <description>&lt;p&gt;Hello! Again this is a continuation of my previous blog posts. I am attempting to develop a simple app while blogging my experience and issues I’ve come across. Below are my previous blog post in order.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;/Beginning-mobile-app-development-journey&quot;&gt;Beginning Mobile App Developmet Journey&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;/Beginning-Small-Web-App-Development-with-AngularJS&quot;&gt;Beginning Small Web App Development with AngularJS&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Just a recap, from my recent blog post &lt;a href=&quot;/Beginning-Small-Web-App-Development-with-AngularJS&quot;&gt;Beginning Small Web App Development with AngularJS&lt;/a&gt;, I was able to:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Setup Zurb Foundation for Apps by creating a directory &lt;code&gt;www-dev&lt;/code&gt; inside of my phonegap project instance.&lt;/li&gt;
  &lt;li&gt;Use Zurb Foundation for Apps project directory for development.&lt;/li&gt;
  &lt;li&gt;Modify &lt;code&gt;gulpfile.js&lt;/code&gt; to dump &lt;code&gt;build&lt;/code&gt; files on &lt;code&gt;www&lt;/code&gt; directory.&lt;/li&gt;
  &lt;li&gt;Renamed original &lt;code&gt;www&lt;/code&gt; directory to &lt;code&gt;www-default&lt;/code&gt; for a copy of original app files.&lt;/li&gt;
  &lt;li&gt;Designed a simple mobile layout and navigation using Zurb Foundation for Apps.&lt;/li&gt;
  &lt;li&gt;Learn and leverage Zurb Foundation for Apps AngularJS integration.&lt;/li&gt;
  &lt;li&gt;Use AJAX to request data stored in a &lt;code&gt;.json&lt;/code&gt; file locally.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;My next goal is to extend my app by using Speech Recognition. A typical user scenario would be:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;App has option to use Voice Recognition or Simple Reload Button&lt;/li&gt;
  &lt;li&gt;If User chose Voice Recogntion, app will enable phone’s voice command sensor&lt;/li&gt;
  &lt;li&gt;When User says &lt;em&gt;‘shuffle’&lt;/em&gt;, app will reload new data&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;webviews-browsers-and-hybrid-app&quot;&gt;WebViews, Browsers, and Hybrid App&lt;/h3&gt;

&lt;p&gt;While learning how to install and use PhoneGap plugins, I’ve come across terms which I think are essential to understanding how native device sensors works in Hybrid Apps and how we can levarage HTML5 technology.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://developer.telerik.com/featured/what-is-a-hybrid-mobile-app/&quot;&gt;What is a Hybrid Mobile App&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://developer.telerik.com/featured/what-is-a-webview/&quot;&gt;What is a WebView&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;discovering-html5-speech-recognition-and-speech-synthesis&quot;&gt;Discovering HTML5 Speech Recognition and Speech Synthesis&lt;/h3&gt;

&lt;p&gt;Cordova provides a documentation for registered plugins &lt;a href=&quot;http://cordova.apache.org/plugins/&quot;&gt;Cordova Official Documentation Plugins&lt;/a&gt;, but since I’m using PhoneGap Build to build my app, its best to refer to its phonegap plugin page and find the plugin you wish to to use. I’ve also found the plugin’s original Github repo and a Youtube video demonstrating Speech Recognition:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/macdonst/SpeechRecognitionPlugin&quot;&gt;Github.com: macdonst - Speech Recognition Plugin&lt;/a&gt;&lt;/p&gt;
&lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;https://www.youtube.com/embed/oXiel-iZOos&quot; frameborder=&quot;0&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;

&lt;p&gt;Video pretty much explains how speech recognition works and discusses various speech recognition APIs available and its brief history. He also showcased sample code and its use cases. His examples are based of off &lt;a href=&quot;https://dvcs.w3.org/hg/speech-api/raw-file/tip/speechapi.html&quot;&gt;W3C Community Group Final Report on HTML5 Speech Recognition API&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;It took me awhile to have Speech Recognition plugin worked on my app and device. It was a trial and error process, from installing a PhoneGap plugin, configuring the plugin, testing and debugging on actual device via PhoneGap Build.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Process of getting Speech Recognition to work on actual device&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Understanding what happens to PhoneGap project config files when a PhoneGap plugin has been added.
    &lt;ul&gt;
      &lt;li&gt;This is crucial, there are various &lt;code&gt;config.xml&lt;/code&gt; files located in &lt;code&gt;/platform&lt;/code&gt; and &lt;code&gt;/plugins&lt;/code&gt; directories.&lt;/li&gt;
      &lt;li&gt;When &lt;code&gt;phonegap plugin add &amp;lt;source&amp;gt;&lt;/code&gt; is ran, PhoneGap automatically adds references to these &lt;code&gt;config.xml&lt;/code&gt; files except for the &lt;code&gt;config.xml&lt;/code&gt; file located on project’s root directory.&lt;/li&gt;
      &lt;li&gt;In my case, I needed to add &lt;code&gt;&amp;lt;plugin name=&quot;com.aserputko.speech.speechrecognition&quot; spec=&quot;0.1.0&quot; source=&quot;pgb&quot; /&amp;gt;&lt;/code&gt; to my &lt;code&gt;config.xml&lt;/code&gt; file located in my root directory.&lt;/li&gt;
      &lt;li&gt;Also, important to note that some plugins require additional steps.&lt;/li&gt;
      &lt;li&gt;A good updated book I’ve come across is &lt;strong&gt;Packt Publishing - PhoneGap 4 Mobile Application Development Cookbook&lt;/strong&gt;.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Added a plugin I’ve found on &lt;a href=&quot;https://build.phonegap.com/plugins&quot;&gt;https://build.phonegap.com/plugins&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;/Beginning-mobile-app-development-journey/#manage-projects-plugins&quot;&gt;Beginning Mobile App Development Journey: Manage Projects Plugins&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Added a sample Speech Recognition code from &lt;a href=&quot;https://dvcs.w3.org/hg/speech-api/raw-file/tip/speechapi.html&quot;&gt;W3C Community Group Final Report on HTML5 Speech Recognition API&lt;/a&gt; unto my &lt;code&gt;app.js&lt;/code&gt; and &lt;code&gt;index.html&lt;/code&gt; file.&lt;/li&gt;
  &lt;li&gt;Build my app via PhoneGap Build by running &lt;code&gt;phonegap remote build &amp;lt;platform&amp;gt;&lt;/code&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;/Beginning-mobile-app-development-journey/#building-our-project&quot;&gt;Beginning Mobile App Development Journey: Building Our Project&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Once built, installed my app by scanning QR Code on my &lt;a href=&quot;https://build.phonegap.com/apps&quot;&gt;https://build.phonegap.com/apps&lt;/a&gt; dashboard page.&lt;/li&gt;
  &lt;li&gt;Once installed, debugged my app by using &lt;a href=&quot;http://docs.build.phonegap.com/en_US/debugging_remote_debugging_tools.md.html&quot;&gt;PhoneGap Build’s Remote Debugging Tools&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;This is an awesome tool! hehe&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;blockquote&gt;
  &lt;p&gt;Steps 4 through 6 was an iterative trial and error process.&lt;br /&gt;
Debugging JavaScript objects inside of PhoneGap’s Debug Console doesn’t seem to display contents inside of that object. A workaround I’ve come across was to use my Chrome console to check &lt;code&gt;SpeechRecognition&lt;/code&gt; object since HTML5 and the plugin uses the same API. A good article that delved inside HTML5 Speech Recognition object is &lt;a href=&quot;http://shapeshed.com/html5-speech-recognition-api/&quot;&gt;HTML5 Speech Recognition API&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;writing-speech-recognition-code-to-fit-my-apps-functionality-needs&quot;&gt;Writing Speech Recognition code to fit my App’s functionality needs&lt;/h3&gt;

&lt;p&gt;After going through the process and successfully ran Speech Recognition on my phone, below are articles I find useful for exploring HTML5 Web Speech and Speech Synthesis API further.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://developers.google.com/web/updates/2013/01/Voice-Driven-Web-Apps-Introduction-to-the-Web-Speech-API&quot;&gt;Introduction to the Web Speech API&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://developers.google.com/web/updates/2014/01/Web-apps-that-talk-Introduction-to-the-Speech-Synthesis-API&quot;&gt;Introduction to the Speech Synthesis API&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://blog.teamtreehouse.com/accepting-speech-input-html5-forms&quot;&gt;TeamTreeHouse - Accepting Speech Input in HTML5 Forms&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;My goals for this functionality are:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;On initial app load, Speech Recognition is disabled&lt;/li&gt;
  &lt;li&gt;When user clicks on &lt;em&gt;“Speak”&lt;/em&gt; button, Speech Recognition is enabled throughout session&lt;/li&gt;
  &lt;li&gt;When user says &lt;em&gt;“Shuffle”&lt;/em&gt;, Speech Recognition detects keyword and reloads data&lt;/li&gt;
  &lt;li&gt;Speech Recognition is enabled unless user clicks &lt;em&gt;“Speak”&lt;/em&gt; button again&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Tue, 29 Mar 2016 02:42:14 -0700</pubDate>
        <link>http://www.wandrr.io/Fiddling-with-phonegap-plugins-and-html5-speech-recognition</link>
        <guid isPermaLink="true">http://www.wandrr.io/Fiddling-with-phonegap-plugins-and-html5-speech-recognition</guid>
        
        <category>app development</category>
        
        
      </item>
    
      <item>
        <title>Beginning Small Web App Development with AngularJS</title>
        <description>&lt;p&gt;This is a continuation of my previous blog post &lt;a href=&quot;/Beginning-mobile-app-development-journey/&quot;&gt;Beginning Mobile App Development Journey&lt;/a&gt; as I further explore Hybrid (Mobile and Web) App Development. On my previous blog post, I have successfully installed PhoneGap and was able to run the default PhoneGap app on my Android phone.&lt;/p&gt;

&lt;p&gt;For this blog post, I’m using AngularJS as my go-to JS Framework for prototyping, developing small apps, and testing with a Front-end framework: &lt;a href=&quot;http://foundation.zurb.com/apps.html&quot;&gt;Zurb Foundation for Apps&lt;/a&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;why-use-zurb-foundation-for-apps-why-not-build-an-app-from-scratch&quot;&gt;Why use Zurb Foundation for Apps? Why not build an app from scratch?&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;To avoid spending time on developing the front-end architectural structure of directories and files.&lt;/li&gt;
  &lt;li&gt;To avoid planning and coding front-end workflow and built process&lt;/li&gt;
  &lt;li&gt;To avoid re-coding common JS components, such as Carousel, Modal, etc.&lt;/li&gt;
  &lt;li&gt;To avoid re-coding CSS components, such as Grid system, consistent style of typography, buttons, utilities, etc.&lt;/li&gt;
  &lt;li&gt;To produce a quick prototype to showcase to a prospect client.&lt;/li&gt;
  &lt;li&gt;To further develop the prototype into a production app.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Above are reasons base on my personal opinion. There are different scenarios and situations why we use certain techonology and practice certain methodology. Each company comprise of their own development workflow that fits their business process and be able to produce product base on business requirements.&lt;/p&gt;

&lt;p&gt;Following link is a solid and comprehensive response to a Quora question regarding which JavaScript Framework should we spend time learning which, I think also applies to how we approach a project: &lt;a href=&quot;https://www.quora.com/Im-a-bit-lost-in-JavaScript-framework-hell-Should-I-spend-time-learning-backbone-js-or-ember-js-or-can-js-or-angular-js/answer/Michael-Mullany-1?srid=Mz0n&quot;&gt;I’m a bit lost in JavaScript framework hell. Should I spend time learning backbone.js or ember.js or can.js or angular.js?&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;But if you are someone who is learning Front-End workflow, built process, and such concepts, I wouldn’t recommend Zurb Foundation as it is an &lt;strong&gt;automagic&lt;/strong&gt; framework, thus, preventing you from actual coding and structuring files. If given the time and resources, I honestly would still code in Vanilla JavaScript or choose a framework with less ‘automagic’ nature.&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;details-of-angularjs-on-zurb-foundation-for-apps&quot;&gt;Details of AngularJS on Zurb Foundation for Apps&lt;/h3&gt;

&lt;p&gt;This blog post will only cover the AngularJS part of the framework. If you want to know how to setup and know more about the framework. Visit: &lt;a href=&quot;http://foundation.zurb.com/apps.html&quot;&gt;Zurb - Foundation for Apps&lt;/a&gt;. Below are main AngularJS functionalities that Foundation as integrated unto their framework that comprise the basis of Web Application:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;#dynamic-routing&quot;&gt;Dynamic Routing&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#settings-inside-a-template-file&quot;&gt;name, url, animationIn, animationOut, parent, controller, abstract&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#angular-includes&quot;&gt;Angular Includes&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#enabling-html5-mode-and-working-with-angular-on-a-server&quot;&gt;Enabling HTML5 Mode and working with Angular on a server&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#angular-and-ui-router-helpers&quot;&gt;Angular and UI Router Helpers&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#angular-and-ui-router-helpers&quot;&gt;ui-sref, ui-sref-active&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;dynamic-routing&quot;&gt;Dynamic Routing&lt;/h2&gt;

&lt;p&gt;These are the Views and State of a single-page apps. When approaching a project, initial step is we usually defined the url and template of an application. In Foundation for Apps - AngularJS, we approached this as follows:&lt;/p&gt;

&lt;p&gt;Inside &lt;code&gt;clients &amp;gt; templates&lt;/code&gt; directory is where we create our templates and define our routes and settings in YAML front-matter block format.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;c&quot;&gt;# Foundation App directory structure&lt;/span&gt;

app
&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;-- bower_components
&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;-- build
&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;-- client
&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;   &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;-- assets
&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;   &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;-- templates &lt;span class=&quot;c&quot;&gt;# where we create our templates&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;   &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;   &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;-- home.html
&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;   &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;-- index.html
&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;-- etc
&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;-- node_modules
&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;-- .bowerrc
&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;-- .gitignore
&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;-- bower.json
&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;-- gulpfile.js
&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;-- package.json
&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;-- readme.md&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3 id=&quot;settings-inside-a-template-file&quot;&gt;Settings inside a Template file&lt;/h3&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;c&quot;&gt;# YAML Front-matter block inside templates&lt;/span&gt;

---
name: parent.child
  &lt;span class=&quot;c&quot;&gt;# *required&lt;/span&gt;
  &lt;span class=&quot;c&quot;&gt;# The name of the view.&lt;/span&gt;
  &lt;span class=&quot;c&quot;&gt;# Refer to this when using ui-sref to link between views.&lt;/span&gt;
  &lt;span class=&quot;c&quot;&gt;# It can also use ui-router&amp;#39;s dot notation to indicate a child view.&lt;/span&gt;
url: /child/:id
  &lt;span class=&quot;c&quot;&gt;# *required&lt;/span&gt;
  &lt;span class=&quot;c&quot;&gt;# Defines the URL at which a page can be directly accessed.&lt;/span&gt;
  &lt;span class=&quot;c&quot;&gt;# When setting up a child view, the segment of the URL for the parent view will be inserted automatically.&lt;/span&gt;
  &lt;span class=&quot;c&quot;&gt;# In the above example, the final URL is /parent/child.&lt;/span&gt;
  &lt;span class=&quot;c&quot;&gt;# A URL can also contain parameters - `/:id`, which will be passed to the view&amp;#39;s controller when it loads.&lt;/span&gt;
  &lt;span class=&quot;c&quot;&gt;# Learn more about URL parameters on ui-router&amp;#39;s documentation.&lt;/span&gt;
  &lt;span class=&quot;c&quot;&gt;# https://github.com/angular-ui/ui-router/wiki/URL-Routing#url-parameters&lt;/span&gt;
animationIn: fadeIn
animationOut: fadeOut
  &lt;span class=&quot;c&quot;&gt;# Sets a transition to play when the view animates in or out.&lt;/span&gt;
  &lt;span class=&quot;c&quot;&gt;# Refer to the Motion UI documentation for the list of built-in transitions.&lt;/span&gt;
  &lt;span class=&quot;c&quot;&gt;# http://foundation.zurb.com/apps/docs/#!/motion-ui&lt;/span&gt;
parent: name_of_parent_view
  &lt;span class=&quot;c&quot;&gt;# You can use this as an alternative to the parent.child syntax.&lt;/span&gt;
controller: NameOfController
  &lt;span class=&quot;c&quot;&gt;# Description below&lt;/span&gt;
abstract: true_or_false
  &lt;span class=&quot;c&quot;&gt;# Defines a state as abstract. Abstract states can have child states, but can&amp;#39;t be navigated to directly.&lt;/span&gt;
  &lt;span class=&quot;c&quot;&gt;# Check out the ui-router documentation to learn more.&lt;/span&gt;
  &lt;span class=&quot;c&quot;&gt;# https://github.com/angular-ui/ui-router/wiki/Nested-States-%26-Nested-Views#abstract-states&lt;/span&gt;
---&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;controller&lt;/strong&gt;&lt;br /&gt;
Once a View is defined, it uses a controller called &lt;code&gt;DefaultController&lt;/code&gt;, but this can be overriden by defining your own controller on the template front-matter settings, though, 
overriding disables front-matter settings (except dynamic routing). If you want to use your own controller AND keep this feature, you can extend the &lt;code&gt;DefaultController&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;The &lt;code&gt;DefaultController&lt;/code&gt; passes a bunch of data through. For instance, all of your front-matter settings will be accessible via &lt;code&gt;vars&lt;/code&gt; in your template. &lt;code&gt;angular&lt;/code&gt; will return the name of your route while &lt;code&gt;templates/angular.html&lt;/code&gt; will return the relative path to the template.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;nx&quot;&gt;angular&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;module&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;application&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;controller&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;MyController&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;MyController&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;MyController&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;$inject&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;$scope&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;$stateParams&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;$state&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;$controller&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;MyController&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;$scope&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;$stateParams&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;$state&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;$controller&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;angular&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;extend&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;$controller&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;DefaultController&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;$scope&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;$scope&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;$stateParams&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;$stateParams&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;$state&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;$state&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}));&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// Your code...&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;angular-includes&quot;&gt;Angular Includes&lt;/h2&gt;

&lt;p&gt;If a template becomes complex, we can break it further into &lt;strong&gt;partial&lt;/strong&gt; templates and use &lt;strong&gt;Angular Includes&lt;/strong&gt; - &lt;code&gt;ng-includes&lt;/code&gt; to inject into its parent template.
The use of single quotes inside the double quotes is &lt;strong&gt;required&lt;/strong&gt;. The HTML inside the partial will be placed inside the element with &lt;code&gt;ng-include&lt;/code&gt;.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;ng-include=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;&amp;#39;path/to/partial.html&amp;#39;&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;enabling-html5-mode-and-working-with-angular-on-a-server&quot;&gt;Enabling HTML5 Mode and working with Angular on a server&lt;/h2&gt;

&lt;p&gt;In single-page application, web pages do not reload rather they use hashtags to navigate throughout the application. Usually, sub urls are prefixed by &lt;code&gt;#/&lt;/code&gt; by default in any JavaScript framework or Vanilla JavaScript. AngularJS has a feature &lt;code&gt;$locationProvider&lt;/code&gt; that we can configure to display clean url. But to enable HTML5 Mode feature, the server that the app resides needs to support url rewrite.&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;angular-and-ui-router-helpers&quot;&gt;Angular and UI Router Helpers&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;ui-sref&lt;/code&gt;&lt;br /&gt;
Foundation for Apps uses UI Router for its routing which allows for named route references.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;ui-sref-active&lt;/code&gt;, &lt;code&gt;ui-sref-active-eq&lt;/code&gt;&lt;br /&gt;
If we have a list of menu links, Foundation for Apps also provides two subtle distinct directives that determines which link is active.&lt;/p&gt;

&lt;p&gt;For example:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;c&quot;&gt;&amp;lt;!--&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;  we created a template and defined front-matter settings&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;--&amp;gt;&lt;/span&gt;
---
name: mypage
url: my/sub/page
---

&lt;span class=&quot;c&quot;&gt;&amp;lt;!--&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;  We can easily linked this template from another page by using `name`&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;--&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;ul&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;ui-sref-active=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;my-active-class&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;a&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;ui-sref=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;mypage&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;my page&lt;span class=&quot;nt&quot;&gt;&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;ui-sref-active=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;my-active-class&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;a&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;ui-sref=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;my2ndpage&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;my 2nd page&lt;span class=&quot;nt&quot;&gt;&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/ul&amp;gt;&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;&amp;lt;!--&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;  ui-sref can also take in parameters for pages that accept parameters&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;--&amp;gt;&lt;/span&gt;
---
name: inbox.message
url: inbox/:id
---

&lt;span class=&quot;c&quot;&gt;&amp;lt;!--&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;  and can be accessed by JSON&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;--&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;ul&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;ui-sref-active-eq=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;my-active-class&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;a&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;ui-sref=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;inbox.message({ id: 4 })&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;5th message&lt;span class=&quot;nt&quot;&gt;&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;ui-sref-active-eq=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;my-active-class&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;a&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;ui-sref=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;inbox.message({ id: 5 })&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;5th message&lt;span class=&quot;nt&quot;&gt;&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/ul&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;hr /&gt;

&lt;h5 id=&quot;further-reading&quot;&gt;&lt;strong&gt;Further reading&lt;/strong&gt;&lt;/h5&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.fromdev.com/2015/06/best-books-for-angularjs.html&quot;&gt;Best books for AngularJS&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://shop.oreilly.com/product/0636920040156.do&quot;&gt;Frontend Architecture for Design Systems By Micah Godbolt&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Fri, 04 Mar 2016 02:43:10 -0800</pubDate>
        <link>http://www.wandrr.io/Beginning-Small-Web-App-Development-with-AngularJS</link>
        <guid isPermaLink="true">http://www.wandrr.io/Beginning-Small-Web-App-Development-with-AngularJS</guid>
        
        <category>javascript</category>
        
        <category>app development</category>
        
        
      </item>
    
      <item>
        <title>Vanilla JavaScript Router and Templating</title>
        <description>&lt;p&gt;I’m working on a simple app that requires a vanilla JavaScript routing system. Did some readings and it turns out there are various ways we can implement a vanilla JS routing system, but I will only mention 3 common methods:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Using &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Window.onhashchange&quot;&gt;onhashchange event&lt;/a&gt; and &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Window.onload&quot;&gt;onload event&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;I believe is the simplest method so far.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Using &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/History_API&quot;&gt;HTML5 History API&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;Still buggy for cross-browser compatibility&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Using small JS plugin called &lt;a href=&quot;https://github.com/browserstate/history.js&quot;&gt;History.js&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;This extends HTML5 History API and fixes cross-browser compatibility issues.&lt;/li&gt;
      &lt;li&gt;More info on their &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Window.onload&quot;&gt;Github Gist - Intelligent State Handling&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;For this app project, I will use the first method. Thanks to:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://joakim.beng.se/blog/posts/a-javascript-router-in-20-lines.html&quot;&gt;Joakim Carlstein’s - A JavaScript router in 20 lines&lt;/a&gt; and&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://ejohn.org/blog/javascript-micro-templating/&quot;&gt;John Resig’s - JavaScript Micro-Templating&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;why-go-this-route&quot;&gt;Why go this Route?&lt;/h3&gt;

&lt;p&gt;Both each scripts only contains 20 lines of code, overall, its about 40 lines of code compare to using a 3rd-party JS plugin. I wanted to keep my code simple and understanding these scripts source code is easy. Its also a good way to learn Routing and Templating system as well. At the moment, I am not concern about cross-browser compatibility and other issues that may arise.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;For complete example:&lt;/strong&gt;&lt;/p&gt;

&lt;p data-height=&quot;268&quot; data-theme-id=&quot;20698&quot; data-slug-hash=&quot;RaNGvZ&quot; data-default-tab=&quot;result&quot; data-user=&quot;rlynjb&quot; class=&quot;codepen&quot;&gt;See the Pen &lt;a href=&quot;http://codepen.io/rlynjb/pen/RaNGvZ/&quot;&gt;vanilla javascript routing&lt;/a&gt; by rlynjb (&lt;a href=&quot;http://codepen.io/rlynjb&quot;&gt;@rlynjb&lt;/a&gt;) on &lt;a href=&quot;http://codepen.io&quot;&gt;CodePen&lt;/a&gt;.&lt;/p&gt;
&lt;script async=&quot;&quot; src=&quot;//assets.codepen.io/assets/embed/ei.js&quot;&gt;&lt;/script&gt;

&lt;hr /&gt;

&lt;h5 id=&quot;update-03-04-2016&quot;&gt;&lt;strong&gt;Update: 03-04-2016&lt;/strong&gt;&lt;/h5&gt;

&lt;h3 id=&quot;delegated-events---click-event-doesnt-work-on-dynamically-generated-elements&quot;&gt;Delegated Events - Click event doesn’t work on dynamically generated elements&lt;/h3&gt;

&lt;p&gt;This was an issue I’ve come across while using this script. When binding a &lt;code&gt;click&lt;/code&gt; event unto a dynamically generated element, we need to delegate that certain element to its parent element that holds the dynamically generated chiild elements.&lt;/p&gt;

&lt;p&gt;Code would look as follows, using jQuery &lt;code&gt;on&lt;/code&gt; event:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;#view&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;on&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;click&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;button#shuffle&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;#view&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;html&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getData&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;bind&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h5 id=&quot;references&quot;&gt;&lt;strong&gt;References:&lt;/strong&gt;&lt;/h5&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://stackoverflow.com/questions/6658752/click-event-doesnt-work-on-dynamically-generated-elements&quot;&gt;Click event doesn’t work on dynamically generated elements&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://stackoverflow.com/questions/8827430/event-delegation-vs-direct-binding-when-adding-complex-elements-to-a-page&quot;&gt;event delegation vs direct binding when adding complex elements to a page&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Mon, 29 Feb 2016 04:42:24 -0800</pubDate>
        <link>http://www.wandrr.io/Vanilla-Javascript-Router-and-Templating</link>
        <guid isPermaLink="true">http://www.wandrr.io/Vanilla-Javascript-Router-and-Templating</guid>
        
        <category>javascript</category>
        
        
      </item>
    
      <item>
        <title>Beginning Mobile App Development Journey</title>
        <description>&lt;p&gt;Consider this blog post as my notes on learning how to setup PhoneGap/Cordova locally, build and debug via PhoneGap Build.
If you want to know more about its history and detailed instructions, refer to this book: &lt;a href=&quot;https://www.packtpub.com/application-development/phonegap-3x-mobile-application-development-hotshot&quot;&gt;Packtpub: PhoneGap Mobile Application Development Hotshot&lt;/a&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;I’ve been searching for a Mobile App Framework on which I can use languages I’m comfortable with (HTML, CSS, JavaScript) and also will be able to deploy on various devices utilizing native device sensors and functionalities.
I know performance will be an issue when using Mobile App Framework, but considering our usual project scope, given the timeframe and number of developers, using Mobile App Framework sounds proper.&lt;/p&gt;

&lt;h3 id=&quot;why-choose-phonegap&quot;&gt;Why choose PhoneGap?&lt;/h3&gt;

&lt;p&gt;It’s opensouce MIT license! and since Cordova powers PhoneGap, I might as well take advantage of the additional features that PhoneGap offers: PhoneGap Build! (this is to avoid installing and configuring any platform SDKs locally)&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;installation&quot;&gt;Installation&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Install node.js
    &lt;ul&gt;
      &lt;li&gt;From experience, node.js versions and path can get complicated, I recommended installing node.js via &lt;code&gt;nvm&lt;/code&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;install PhoneGap (includes PhoneGap CLI)
    &lt;ul&gt;
      &lt;li&gt;Adding the PhoneGap CLI enables the use of Adobe’s remote building capabilities, which means you don’t need to have the platform SDKs installed in order to build your app. (There are caveats here; it is best to refer to the PhoneGap Build website at http://build.phonegap.com for more information.) Installing PhoneGap CLI will also install Cordova CLI, since PhoneGap is powered by Cordova engine.&lt;/li&gt;
      &lt;li&gt;Install via npm: &lt;code&gt;sudo npm install -g phonegap&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;Check if installed: &lt;code&gt;phonegap --version&lt;/code&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;starting-a-project-and-workflow&quot;&gt;Starting a project and Workflow&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;#create-first-project&quot;&gt;Create first project&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#manage-projects-platforms&quot;&gt;Manage project’s platforms&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#manage-projects-plugins&quot;&gt;Manage project’s plugins&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#building-our-project&quot;&gt;Build my project&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#deploy-project-to-a-simulatordevice&quot;&gt;Deploy project to the simulator/device&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;two-environments&quot;&gt;Two Environments&lt;/h3&gt;

&lt;p&gt;The PhoneGap command consists of two environments. The first is the local command environment. The local commands execute the command on your local machine. In this case, you must have the target device SDKs configured on your machine. For example, if you want to develop an Android application, you must acquire and configure the Android SDK on your machine.&lt;/p&gt;

&lt;p&gt;The second environment is remote. Command-line commands execute the build process remotely using the cloud-based PhoneGap Build service. In this case, you don’t need to configure any SDK on your local machine.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;I will only focus on remote commands, so I don’t need to setup various platform SDKs locally&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;Remote Commands via PhoneGap Build&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Sign up an account: &lt;a href=&quot;http://build.phonegap.com&quot;&gt;http://build.phonegap.com&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Login via CLI: &lt;code&gt;phonegap remote login&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;create-first-project&quot;&gt;Create first project&lt;/h3&gt;

&lt;p&gt;To create a project with PhoneGap CLI, &lt;code&gt;cd&lt;/code&gt; to your projects directory (ex. &lt;code&gt;/www&lt;/code&gt; or &lt;code&gt;/home&lt;/code&gt;)&lt;/p&gt;

&lt;p&gt;Run: &lt;code&gt;phonegap create hello com.myapp.hello HelloWorld&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;First argument &lt;code&gt;hello&lt;/code&gt; specifies a directory for our project.&lt;br /&gt;
Second argument &lt;code&gt;com.myapp.hello&lt;/code&gt; is our application ID. Its in reverse domain style. We can create something like &lt;code&gt;com.yourdomain.applicationname&lt;/code&gt;&lt;br /&gt;
Third argument &lt;code&gt;HelloWorld&lt;/code&gt; is our application name. This will be use as the application’s display title. Its optional. If you are not setting the application name, it will use the name from the first argument. If you want to change the name, you can open config.xml and edit the name element.&lt;/p&gt;

&lt;p&gt;Contains: Our code, Other platform-specific code, Other assets required to generate an app ready for you to run on a simulator or device&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;manage-projects-platforms&quot;&gt;Manage project’s platforms&lt;/h3&gt;

&lt;p&gt;PhoneGap Build, remote-based build automatically creates an iOs, Android, and Windows build for you.&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;manage-projects-plugins&quot;&gt;Manage project’s plugins&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;For list of available plugins via PhoneGap Build:&lt;/strong&gt; &lt;a href=&quot;https://build.phonegap.com/plugins&quot;&gt;https://build.phonegap.com/plugins&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;To install plugins:&lt;/strong&gt; &lt;code&gt;phonegap plugin add &amp;lt;source&amp;gt;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Once a plugin has been successfully added to a project, the plugin APIs can be executed using JavaScript. Each plugin has its own way of accessing native APIs, so read the documentation for each plugin.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Listing plugins:&lt;/strong&gt; &lt;code&gt;phonegap plugin list&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Removing plugins:&lt;/strong&gt; &lt;code&gt;phonegap plugin remove &amp;lt;id&amp;gt;&lt;/code&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;building-our-project&quot;&gt;Building our project&lt;/h3&gt;

&lt;p&gt;PhoneGap Build compiles our application code and plugins only available in PhoneGap Build and builds our application in iOs, Android, and Windows.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;To build project remotely via PhoneGap Build:&lt;/strong&gt;&lt;br /&gt;
&lt;code&gt;phonegap remote build &amp;lt;platform&amp;gt;&lt;/code&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;deploy-project-to-a-simulatordevice&quot;&gt;Deploy project to a simulator/device&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Running and Debugging Remote:&lt;/strong&gt;&lt;br /&gt;
&lt;code&gt;phonegap remote run &amp;lt;platform&amp;gt;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Refer to &lt;a href=&quot;http://docs.build.phonegap.com/en_US/index.html&quot;&gt;PhoneGap Build Documentation for instructions&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Simulating with Ripple Emulator (locally):&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Install &lt;a href=&quot;https://chrome.google.com/webstore/detail/ripple-emulator-beta/geelfhphabnejjhdalkjhgipohgpdnoc?hl=en&quot;&gt;Ripple Emulator&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Enable it&lt;/li&gt;
  &lt;li&gt;Run &lt;code&gt;phonegap serve&lt;/code&gt; to retrieve address&lt;/li&gt;
  &lt;li&gt;Enter local address to Ripple Emulator&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;Notes on Submitting to app stores&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;A Mac is required to generate the certificates necessary for iOS app signing (even with PhoneGap Build) and is definitely required for deployment to the App Store. The same is true for Windows; you need to deploy to the App Store from Windows only.&lt;/p&gt;

</description>
        <pubDate>Fri, 26 Feb 2016 05:14:59 -0800</pubDate>
        <link>http://www.wandrr.io/Beginning-mobile-app-development-journey</link>
        <guid isPermaLink="true">http://www.wandrr.io/Beginning-mobile-app-development-journey</guid>
        
        <category>app development</category>
        
        
      </item>
    
      <item>
        <title>What is the difference between == and ===?</title>
        <description>&lt;p&gt;JavaScript has two sets of &lt;strong&gt;&lt;em&gt;Equality operators&lt;/em&gt;&lt;/strong&gt; archived under &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Comparison_Operators&quot;&gt;Comparison operators&lt;/a&gt;:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;equality &lt;code&gt;==&lt;/code&gt; &amp;amp; inequality &lt;code&gt;!=&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;strict equality &lt;code&gt;===&lt;/code&gt; &amp;amp; strict inequality &lt;code&gt;!==&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;We use these operators when comparing 2 operands. They differ on what type of operands are being compared to against.&lt;/p&gt;

&lt;hr /&gt;

&lt;h5 id=&quot;references&quot;&gt;&lt;strong&gt;References:&lt;/strong&gt;&lt;/h5&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://stackoverflow.com/questions/359494/does-it-matter-which-equals-operator-vs-i-use-in-javascript-comparisons&quot;&gt;Does it matter which equals operator (== vs ===) I use in JavaScript comparisons?&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Comparison_Operators&quot;&gt;Comparison operators&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Tue, 23 Feb 2016 07:15:38 -0800</pubDate>
        <link>http://www.wandrr.io/Difference-between-double-and-triple-equals</link>
        <guid isPermaLink="true">http://www.wandrr.io/Difference-between-double-and-triple-equals</guid>
        
        <category>javascript interview questions</category>
        
        
      </item>
    
      <item>
        <title>Difference between document load event and document ready event?</title>
        <description>&lt;p&gt;&lt;code&gt;window.onload&lt;/code&gt; event fires only when contents (images, css, scripts, other 3rd party sources), including the DOM has finished loading.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;$(document).ready()&lt;/code&gt; event fires when the HTML DOM has finished loading. It also fires earlier than &lt;code&gt;window.onload&lt;/code&gt;. It will not wait for contents to load.&lt;/p&gt;

&lt;hr /&gt;

&lt;h5 id=&quot;references&quot;&gt;&lt;strong&gt;References:&lt;/strong&gt;&lt;/h5&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://stackoverflow.com/questions/3698200/window-onload-vs-document-ready&quot;&gt;window.onload vs $(document).ready()&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Tue, 23 Feb 2016 07:08:26 -0800</pubDate>
        <link>http://www.wandrr.io/JS-Interview-Question-Difference-between-document-load-event-and-document-ready-event</link>
        <guid isPermaLink="true">http://www.wandrr.io/JS-Interview-Question-Difference-between-document-load-event-and-document-ready-event</guid>
        
        <category>javascript interview questions</category>
        
        
      </item>
    
  </channel>
</rss>
