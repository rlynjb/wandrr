<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>wandrr</title>
    <description>This is a blog about travel and tech.
</description>
    <link>http://rlynjb.github.io/wandrr/</link>
    <atom:link href="http://rlynjb.github.io/wandrr/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Wed, 22 Feb 2017 09:02:24 -0800</pubDate>
    <lastBuildDate>Wed, 22 Feb 2017 09:02:24 -0800</lastBuildDate>
    <generator>Jekyll v3.1.6</generator>
    
      <item>
        <title>New stuff to learn</title>
        <description>&lt;ul&gt;
  &lt;li&gt;Admin (CRUD) with Laravel&lt;/li&gt;
  &lt;li&gt;3d model product viewer&lt;/li&gt;
  &lt;li&gt;SVG&lt;/li&gt;
  &lt;li&gt;viewport scroll to snap then animation/transition starts&lt;/li&gt;
  &lt;li&gt;testing, interaction of application and inputting sample information&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h5 id=&quot;references&quot;&gt;&lt;strong&gt;References:&lt;/strong&gt;&lt;/h5&gt;

&lt;ul&gt;
  &lt;li&gt;https://code.tutsplus.com/courses/3d-in-the-browser-with-threejs/&lt;/li&gt;
  &lt;li&gt;https://manu.ninja/webgl-3d-model-viewer-using-three-js&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Tue, 21 Feb 2017 09:18:45 -0800</pubDate>
        <link>http://rlynjb.github.io/wandrr/New-set-of-web-things-to-learn</link>
        <guid isPermaLink="true">http://rlynjb.github.io/wandrr/New-set-of-web-things-to-learn</guid>
        
        <category>3d</category>
        
        <category>webgl</category>
        
        <category>javascript</category>
        
        <category>crud</category>
        
        <category>laravel</category>
        
        <category>parallax</category>
        
        
      </item>
    
      <item>
        <title>Venturing into a Fullstack Framework with Laravel</title>
        <description>&lt;p&gt;Date Published: Nov 11, 2016&lt;/p&gt;

&lt;p&gt;Indeed, I feel like its time to venture out of Front-End Web Development and look into a Fullstack Framework. One of my favorite framework is Keystone.js. It is a Node.js Database-driven framework. But learning a framework based off of PHP is mandatory, and so I came across Laravel. I’m not going to necessarily drift away from Keystone.js. As a Front-End Web Developer, I love Javascript and I don’t think I am going to give the language up easily.&lt;/p&gt;

&lt;p&gt;My goal is to master atleast 1 or 2 Fullstack framework that is based off of 2 different language, Keystone.js and Laravel, but this blog post will focus on Laravel with a bit of comparison with Keystone.js and discusses about some of the features of what comprises a small-large scale web applications.&lt;/p&gt;

&lt;p&gt;Since I’m going back and forth with this blog post, writing my experience from choosing to mastering a framework, I’ve included a table of contents below.&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;table-of-contents&quot;&gt;Table of Contents&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;#comparison-chart&quot;&gt;Comparison chart: Keystone.JS and Laravel&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#learning-resources&quot;&gt;Learning Resources&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#getting-started-with-laravel&quot;&gt;Getting started with Laravel&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#understanding-laravels-front-end-workflow&quot;&gt;Understanding Laravel’s Front-End Workflow&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#coding-templates-to-populating-static-data-from-json-file&quot;&gt;Coding templates to populating static data from JSON file&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#from-static-data-to-implementing-a-database&quot;&gt;From Static data to implementing a Database&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#simple-contact-form-sending-emails&quot;&gt;Simple Contact form, Sending Emails&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#intro-to-create-in-crud&quot;&gt;Intro to Create in CRUD&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#method-for-developing-a-project-from-scratch&quot;&gt;Method for developing a project from scratch&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#defining-my-specs-for-a-custom-admin-panel&quot;&gt;Defining my specs for a custom Admin Panel&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#building-a-cms-from-scratch&quot;&gt;Building a CMS from scratch&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h1 id=&quot;comparison-chart&quot;&gt;Comparison chart&lt;/h1&gt;

&lt;p&gt;I’ve also took the time to do research and write a comparison chart. Below is my researched with a high-level view of what features I look for in a framework.&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt; &lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;&lt;strong&gt;Keystone.js&lt;/strong&gt;&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;&lt;strong&gt;Laravel&lt;/strong&gt;&lt;/th&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt; &lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;http://keystonejs.com&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;https://laravel.com/docs/4.2/introduction&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;Language&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Node.js&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;PHP&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Templating, Routing&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Swig, Jade, handlebars. Yes&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Blade. Yes&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;RESTful&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Yes&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Yes&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;CRUD, Database&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Yes, MongoDB&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Yes, MySQL&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;ACL&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Yes&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Yes&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Authentication and Session Management&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Yes&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Yes&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;CMS&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Yes, Automatically generated Admin UI&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;No&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Code Readability&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Simple and Clean&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Simple and Clean&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Programming Style&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;MVC&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;MVC&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Server Maintenance&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;NVM, easy switching of Nodejs versions in server, not too much dependencies&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Application Maintenance&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;NPM, manages versions of modules in application&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Security&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;no credentials or keys are stored in code, they are stored in a separate&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Documentation&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;apidoc.js&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Community Support&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Active github repo, future releases, books, tutorials, opensource community&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt; &lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;hr /&gt;

&lt;h1 id=&quot;learning-resources&quot;&gt;Learning Resources&lt;/h1&gt;

&lt;p&gt;Since I’m discovering Laravel and the whole PHP realm, I’ve discovered a site called &lt;a href=&quot;https://tutsplus.com/&quot;&gt;envatotuts+&lt;/a&gt; which carries Laravel tutorials from beginner to advance level.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://code.tutsplus.com/courses/get-started-with-laravel-5&quot;&gt;Get Started with Laravel 5&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://code.tutsplus.com/courses/build-a-cms-with-laravel&quot;&gt;Build a CMS with Laravel&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;and more, there are various tutorials that covers what we can do with Laravel&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h1 id=&quot;getting-started-with-laravel&quot;&gt;Getting started with Laravel&lt;/h1&gt;

&lt;p&gt;I first created a github repo and followed the instructions for &lt;a href=&quot;https://laravel.com/docs/5.3/installation&quot;&gt;installing Laravel&lt;/a&gt; via Laravel Installer on my Mac.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;On my local, I just ran &lt;code class=&quot;highlighter-rouge&quot;&gt;php artisan serve&lt;/code&gt; to start a development environment&lt;/li&gt;
  &lt;li&gt;Also take into consideration of Configuration. We also need to check for Directory permissions and Application Key.&lt;/li&gt;
  &lt;li&gt;All of these information are available at &lt;a href=&quot;https://laravel.com/docs/5.3/installation&quot;&gt;https://laravel.com/docs/5.3/installation&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Tranferring your Laravel local code to an Ubuntu stage server was a bit of a challenge.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;There were missing php dependencies, I had to collaborate with other developers to solve this issue.&lt;/li&gt;
  &lt;li&gt;Set its Web Document Root to its &lt;code class=&quot;highlighter-rouge&quot;&gt;/public&lt;/code&gt; directory.&lt;/li&gt;
  &lt;li&gt;Copy &lt;code class=&quot;highlighter-rouge&quot;&gt;.env.example&lt;/code&gt; file as &lt;code class=&quot;highlighter-rouge&quot;&gt;.env&lt;/code&gt; file and run &lt;code class=&quot;highlighter-rouge&quot;&gt;php artisan key:generate&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;There were no problem with transferring our Application code, it was more of setting its environment.&lt;/p&gt;

&lt;hr /&gt;

&lt;h1 id=&quot;understanding-laravels-front-end-workflow&quot;&gt;Understanding Laravels’ Front-End Workflow&lt;/h1&gt;

&lt;p&gt;Laravel comes with a default install of Bootstrap, Vue, SASS, Webpack, and uses Gulp.js to compile its assets, although, Laravel developed its own compiling tool which is built on top of Gulp.js called &lt;strong&gt;Laravel Elixir&lt;/strong&gt;. It is an NPM module and is defined in &lt;code class=&quot;highlighter-rouge&quot;&gt;package.json&lt;/code&gt;. Laravel also uses NPM to install the default Front-end packages.&lt;/p&gt;

&lt;p&gt;Upon readings its &lt;a href=&quot;https://laravel.com/docs/5.3/elixir&quot;&gt;documentation on Laravel Elixir&lt;/a&gt;, it seems like this tool makes it easy for developers to use Gulp.js. Though, the only drawback I forsee using Laravel Elixir is we can’t further customize our build process and we will depend on Laravel Elixir’s features.&lt;/p&gt;

&lt;p&gt;Since I have a background with Front-End Development and I’ve growned accustomed to some front-end packages, I will be using my own &lt;a href=&quot;https://github.com/rlynjb/frontendflow&quot;&gt;Front-End Workflow starterkit theme&lt;/a&gt;, instead re-installing NPM and Bower packages and redefining paths and build process in my Gulp.js file.&lt;/p&gt;

&lt;hr /&gt;

&lt;h1 id=&quot;coding-templates-to-populating-static-data-from-json-file&quot;&gt;Coding templates to populating static data from JSON file&lt;/h1&gt;

&lt;p&gt;Below is a link to an a quick and simple overview of an MVC Application structure:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://selftaughtcoders.com/from-idea-to-launch/lesson-17/laravel-5-mvc-application-in-10-minutes/&quot;&gt;Creating a Basic Laravel 5 MVC Application in 10 Minutes&lt;/a&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;My method usually starts off with defining a route and creating a template file for that particular route.&lt;/li&gt;
  &lt;li&gt;Next is store sample data inside of JSON file and load file in a Controller
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;http://vegibit.com/creating-static-and-dynamic-web-pages-in-laravel/&quot;&gt;Creating Static And Dynamic Web Pages In Laravel&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;http://vegibit.com/json-in-laravel/&quot;&gt;http://vegibit.com/json-in-laravel/&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;blockquote&gt;
  &lt;p&gt;My rule is, if a website contains less than 15 or 20 items, keep it data static
But, if items grow to 20 or more AND will contain a CRUD method, then proceed with Database.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;hr /&gt;

&lt;h1 id=&quot;from-static-data-to-implementing-a-database&quot;&gt;From Static data to implementing a Database&lt;/h1&gt;

&lt;p&gt;Coming from a front-end web development and a bit of MVC background, Database concepts was new to me. Although I did dabbled a bit into sql queries, its still different from having the knowledge of Database tools available we can use in a Fullstack framework.&lt;/p&gt;

&lt;p&gt;With Laravel, there are tools available that helps us manage our database. Features that came with Laravel are listed below with a bit of methodology when implementing a Database.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;When we run &lt;code class=&quot;highlighter-rouge&quot;&gt;php artisan make:model User --migration&lt;/code&gt; to create a Database, Laravel assumes you configured your database settings on &lt;code class=&quot;highlighter-rouge&quot;&gt;config/database.php&lt;/code&gt; file. The generated Model and Migration script files are not aware of its configuration settings.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;To create a Database, run &lt;code class=&quot;highlighter-rouge&quot;&gt;php artisan make:model User --migration&lt;/code&gt; command. This will generate a &lt;strong&gt;Eloquent ORM Model&lt;/strong&gt; and a &lt;strong&gt;Migration&lt;/strong&gt; script.
    &lt;ul&gt;
      &lt;li&gt;&lt;strong&gt;Eloquent ORM&lt;/strong&gt; - Model allows us to easily query and insert data in our tables.&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;Migration&lt;/strong&gt; - Creates a Table; Builds our Database Schema; Preserves Database Schema, revision control&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Seeding
    &lt;ul&gt;
      &lt;li&gt;is a way to create data fast. It populates data into a Database Table.&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://sheepy85.wordpress.com/2014/09/19/database-seed-migration-in-laravel-5-0/&quot;&gt;https://sheepy85.wordpress.com/2014/09/19/database-seed-migration-in-laravel-5-0/&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;http://www.fullstack4u.com/laravel/laravel-5-load-seed-data-from-json/&quot;&gt;http://www.fullstack4u.com/laravel/laravel-5-load-seed-data-from-json/&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=y0y3-m05Emc&quot;&gt;Understanding Database with Laravel&lt;/a&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h1 id=&quot;simple-contact-form-sending-emails&quot;&gt;Simple Contact form, Sending emails&lt;/h1&gt;

&lt;p&gt;There are tons fo tutorials on the web about creating a conact form with Laravel but it doesn’t seem to explain the basics. The link below though,&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://code.tutsplus.com/courses/get-started-with-laravel-5/lessons/sending-emails&quot;&gt;Sending Emails&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;seem to explain the simplest and plainest method of how we can implement a Contact form in Laravel using Route &lt;code class=&quot;highlighter-rouge&quot;&gt;Route::get...&lt;/code&gt; and Mail Facade &lt;code class=&quot;highlighter-rouge&quot;&gt;Mail::send...&lt;/code&gt;.
From this tutorial, we can further build our Contact form to use Controller for code separation and gather User input from Views. We will be able to store Contact form data in database.&lt;/p&gt;

&lt;p&gt;There are 2 ways to compose an email.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Raw text&lt;/li&gt;
  &lt;li&gt;From a View&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;raw-text&quot;&gt;Raw Text&lt;/h3&gt;

&lt;ol&gt;
  &lt;li&gt;Create a Route where we can send emails from.&lt;/li&gt;
  &lt;li&gt;Define a Mail Facade and inside, define an instance of Illuminate Message to build mail properties.&lt;/li&gt;
  &lt;li&gt;Sign up for Mailtrap.io and configure &lt;code class=&quot;highlighter-rouge&quot;&gt;.env&lt;/code&gt; file&lt;/li&gt;
  &lt;li&gt;Now, when we visit &lt;code class=&quot;highlighter-rouge&quot;&gt;/contact&lt;/code&gt;, it should send test email defined inside of Mail facade.&lt;/li&gt;
  &lt;li&gt;Mail should be sent in Raw format located under Raw tab.&lt;/li&gt;
&lt;/ol&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Route::get(&#39;/contact&#39;, function() {
  // define a Mail facade
  Mail::raw(&#39;kirby this is a test&#39;, function($message) {
    /*
      inside we will have an instance of
      Illuminate\Mail\Message

      inside of this closure, we can set other prooerties of email
    */
    $message-&amp;gt;subject(&#39;testing&#39;)
            -&amp;gt;to(&#39;bill@mail.com&#39;)
            -&amp;gt;from(&#39;non@mail.com&#39;);
  });

  return &#39;email has been sent&#39;;
});
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;from-views-template&quot;&gt;From Views template&lt;/h3&gt;

&lt;ol&gt;
  &lt;li&gt;Define a Route again.&lt;/li&gt;
  &lt;li&gt;Instead of Mail Facade Raw &lt;code class=&quot;highlighter-rouge&quot;&gt;Mail::raw...&lt;/code&gt;, we will use Mail Facade Send &lt;code class=&quot;highlighter-rouge&quot;&gt;Mail:send...&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;Once URL is visited, it will send email to Mailtrap.io for test.&lt;/li&gt;
  &lt;li&gt;Mail should be sent in HTML format under HTML tab.&lt;/li&gt;
&lt;/ol&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;// this will get data from view or user input
Route::get(&#39;/contact/view&#39;, function() {

  //  param1 = path to view template
  //  param2 = array of data
  //  param3 = closure to setup message that we will be sending
  Mail::send(&#39;conact-view&#39;, [&#39;name&#39;=&amp;gt;&#39;Bob&#39;], function($message) {
    $message-&amp;gt;subject(&#39;testing&#39;)
            -&amp;gt;to(&#39;bill@mail.com&#39;)
            -&amp;gt;from(&#39;non@mail.com&#39;);
  });
});
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;hr /&gt;

&lt;h1 id=&quot;intro-to-create-in-crud&quot;&gt;Intro to Create in CRUD&lt;/h1&gt;

&lt;p&gt;Below are the resources I used in learning basic CRUD, form handling in Laravel, and AJAX form post.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://code.tutsplus.com/courses/get-started-with-laravel-5/lessons/handle-form-input&quot;&gt;Forms and Data Validation&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://laracasts.com/discuss/channels/requests/laravel-5-cant-use-ajax-post-request&quot;&gt;Laravel 5 can’t use ajax post request&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://stackoverflow.com/questions/32718870/how-to-get-all-input-of-post-in-laravel-5&quot;&gt;How to get All input of POST in Laravel 5&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://laravel.com/docs/5.4/database&quot;&gt;Database: Getting Started&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;dealing-with-global-variables&quot;&gt;Dealing with Global variables&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://stackoverflow.com/questions/32942379/global-variable-in-laravel-controller&quot;&gt;Global variable in laravel controller&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://stackoverflow.com/questions/29715813/laravel-5-global-blade-view-variable-available-in-all-templates&quot;&gt;Laravel 5 - global Blade view variable available in all templates&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h1 id=&quot;defining-my-specs-for-a-custom-admin-panel&quot;&gt;Defining my specs for a custom Admin Panel&lt;/h1&gt;

&lt;p&gt;My admin panel specs are:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;simple navigation (straightforward, simpler than wordpress)&lt;/li&gt;
  &lt;li&gt;able to do CRUD unto json files&lt;/li&gt;
  &lt;li&gt;contains just fields or forms (simple)&lt;/li&gt;
  &lt;li&gt;display contact form data from contact form fields&lt;/li&gt;
  &lt;li&gt;uses miminal text editor features with instructions
    &lt;ul&gt;
      &lt;li&gt;user will be using HTML tags&lt;/li&gt;
      &lt;li&gt;bold text&lt;/li&gt;
      &lt;li&gt;links&lt;/li&gt;
      &lt;li&gt;breakline/ new line&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;image or assets uploader and manager
    &lt;ul&gt;
      &lt;li&gt;contains fields for seo input (img alt, title)&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h1 id=&quot;building-a-cms-from-scratch&quot;&gt;Building a CMS from scratch&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.kodecrash.com/javascript/read-write-json-file-using-php/&quot;&gt;Read-Write JSON file using PHP&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.sitepoint.com/creating-a-scrud-system-using-jquery-json-and-datatables/&quot;&gt;Creating a SCRUD System Using jQuery, JSON and DataTables&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h1 id=&quot;method-for-developing-a-project-from-scratch&quot;&gt;Method for developing a project from scratch&lt;/h1&gt;

&lt;h3 id=&quot;setting-up-a-project&quot;&gt;Setting up a project&lt;/h3&gt;

&lt;ol&gt;
  &lt;li&gt;Setup Laravel, server, github repo, and configure FEF theme.&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;coding-a-theme-with-fef-theme&quot;&gt;Coding a theme with FEF Theme&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/rlynjb/frontendflow&quot;&gt;FEF Theme&lt;/a&gt; is my baby project. It includes my front end workflow with css framework and javascript plugins I often used. It also includes a collection of solutions to common interaction and browser compatibility issues.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Code layout per page including UX.
    &lt;ul&gt;
      &lt;li&gt;place image placeholders and text.&lt;/li&gt;
      &lt;li&gt;determine responsiveness&lt;/li&gt;
      &lt;li&gt;determine user interaction of different components to be use&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Code overall style, brand, typography&lt;/li&gt;
  &lt;li&gt;Add in basic CSS3 transitions&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;structuring-content-with-json&quot;&gt;Structuring Content with JSON&lt;/h3&gt;

&lt;ol&gt;
  &lt;li&gt;Per page, define fields and determine if its content type, regular page, form, etc.&lt;/li&gt;
  &lt;li&gt;Code fields into json file&lt;/li&gt;
  &lt;li&gt;Convert json files to be editable
    &lt;ul&gt;
      &lt;li&gt;modify Routing and Controllers&lt;/li&gt;
      &lt;li&gt;modify Views to use data passed from json to Controllers&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;
</description>
        <pubDate>Wed, 08 Feb 2017 02:58:47 -0800</pubDate>
        <link>http://rlynjb.github.io/wandrr/Venturing-into-a-fullstack-framework-with-Laravel</link>
        <guid isPermaLink="true">http://rlynjb.github.io/wandrr/Venturing-into-a-fullstack-framework-with-Laravel</guid>
        
        <category>php</category>
        
        <category>fullstack</category>
        
        
      </item>
    
      <item>
        <title>Using ES6 Modules in client-side</title>
        <description>&lt;p&gt;I came into a halt where I need to split my JavaScript code. Prototyping an application, code can be done in one file but as it grows and add-on features are requested, lines of code will eventually increase. I’ve heard a few names of javascript module loaders, both for client and server. But what I really wanted to take advantage of is JavaScript’s new module feature, ‘ES6 Module’ &lt;code class=&quot;highlighter-rouge&quot;&gt;import&lt;/code&gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;export&lt;/code&gt; (commonly used in Nodejs, server-side).&lt;/p&gt;

&lt;p&gt;Projects I’ve been handling are focused on Front-End, so I need a module compiler for client-side. Most browsers still does not support ES6 Module feature, that’s why there are Client side JS module loaders available such as Browserify, Webpack, Rollup &lt;a href=&quot;http://stackoverflow.com/questions/19059580/client-on-node-uncaught-referenceerror-require-is-not-defined&quot;&gt;ref&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I am still learning JavaScript modules but for simplicity, I’m going to use Browserify, Babel, and Gulp.&lt;/p&gt;

&lt;p&gt;Below is a step-by-step scenario of how these tools are connected and how it transforms our ES6 code.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;We write code using ES6 capabilities inclduing (but not limited to) ES6 module loading.&lt;/li&gt;
  &lt;li&gt;Babelify translates this code to ES5-compatibility code with &lt;code class=&quot;highlighter-rouge&quot;&gt;require&lt;/code&gt; statements included.
    &lt;ul&gt;
      &lt;li&gt;Babelify is a Babel transformer for Browserify&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;ES5 code with &lt;code class=&quot;highlighter-rouge&quot;&gt;require&lt;/code&gt; statements is transformed to the version that is fully understandable by browsers by Browserify&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;a href=&quot;http://egorsmirnov.me/2015/05/25/browserify-babelify-and-es6.html&quot;&gt;ref&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Additional method….&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Gulp.js then compiles all dependencies and scripts and outputs the final (minified and compressed) javascript file.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;A sample &lt;strong&gt;Gulp.js&lt;/strong&gt; task should look like this:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;var gulp = require(&#39;gulp&#39;);
var browserify = require(&#39;browserify&#39;);
var babelify = require(&#39;babelify&#39;);
var source = require(&#39;vinyl-source-stream&#39;);

gulp.task(&#39;build&#39;, function () {
  return browserify({entries: &#39;./app.jsx&#39;, extensions: [&#39;.jsx&#39;], debug: true})
  .transform(babelify)
  .bundle()
  .pipe(source(&#39;bundle.js&#39;))
  .pipe(gulp.dest(&#39;dist&#39;));
});
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;Side note&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;I’m looking forward on taking advantage of what Babel plugins has to offer to replace Browserify and Babelify.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://babeljs.io/&quot;&gt;Babeljs.io&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://exploringjs.com/es6/ch_modules.html&quot;&gt;Exploringjs.com&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;References:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://stackoverflow.com/questions/19059580/client-on-node-uncaught-referenceerror-require-is-not-defined&quot;&gt;Client on node: Uncaught ReferenceError: require is not defined&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://egorsmirnov.me/2015/05/25/browserify-babelify-and-es6.html&quot;&gt;Browserify, Babelify and ES6&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://babeljs.io/&quot;&gt;Babeljs.io&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://exploringjs.com/es6/ch_modules.html&quot;&gt;Exploringjs.com&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://stackoverflow.com/questions/32793404/es6-export-overwriting-function&quot;&gt;ES6 Export Overwriting Function&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Wed, 28 Dec 2016 03:08:39 -0800</pubDate>
        <link>http://rlynjb.github.io/wandrr/Using-ES6-Modules-in-clientside</link>
        <guid isPermaLink="true">http://rlynjb.github.io/wandrr/Using-ES6-Modules-in-clientside</guid>
        
        <category>javascript</category>
        
        
      </item>
    
      <item>
        <title>Getting Started with Magento Theming</title>
        <description>&lt;h3 id=&quot;before-starting-to-build-a-theme-in-magento2&quot;&gt;Before starting to build a theme in Magento2&lt;/h3&gt;

&lt;p&gt;So before starting to build a theme, we need to know Magento 2’s architecture and status.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Magento 2 is extremely modularize (reminds me of Drupal)&lt;/li&gt;
  &lt;li&gt;it is based off of Zend Framework&lt;/li&gt;
  &lt;li&gt;Alot of Major and Minor updates/changes in each version&lt;/li&gt;
  &lt;li&gt;and foremost, it is Not practical to theme from scratch (trust me, I tried, unless you are a certified Magento 2 developer or someone willing to put in alot of time)&lt;/li&gt;
  &lt;li&gt;it comes with its own Front-End workflow (I think it uses Grunt, Less)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Although, from all the learning curves listed above, Magento 2 is:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;a really secure Ecommerce system&lt;/li&gt;
  &lt;li&gt;It has everything you need to immediately setup an online store&lt;/li&gt;
  &lt;li&gt;theming maybe tough, alot of overriding of templates (but we will try to keep CSS and JS minimal and will use our own &lt;a href=&quot;https://github.com/rlynjb/frontendflow&quot;&gt;Front-end workflow&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h4 id=&quot;setting-up-a-child-theme&quot;&gt;&lt;strong&gt;Setting up a Child Theme&lt;/strong&gt;&lt;/h4&gt;

&lt;p&gt;Once Magento 2 is installed&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Create a directory in &lt;code class=&quot;highlighter-rouge&quot;&gt;/app/design/frontend/&amp;lt;company name&amp;gt;/&amp;lt;theme name&amp;gt;&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;Copy Magento 2 blank theme &lt;code class=&quot;highlighter-rouge&quot;&gt;/vendor/magento/theme-frontend-blank/&lt;/code&gt; to &lt;code class=&quot;highlighter-rouge&quot;&gt;/app/design/frontend/&amp;lt;company name&amp;gt;/&amp;lt;theme name&amp;gt;&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;Rename all theme titles and names in &lt;code class=&quot;highlighter-rouge&quot;&gt;composer.json&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;registration.php&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;theme.xml&lt;/code&gt;
    &lt;ul&gt;
      &lt;li&gt;in &lt;code class=&quot;highlighter-rouge&quot;&gt;theme.xml&lt;/code&gt; add &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;parent&amp;gt;Magento/blank&amp;lt;/parent&amp;gt;&lt;/code&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Login to admin to change theme and clear-cache
    &lt;ul&gt;
      &lt;li&gt;locate admin URL in &lt;code class=&quot;highlighter-rouge&quot;&gt;/etc/config.php&lt;/code&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;create-a-template-for-a-page&quot;&gt;&lt;strong&gt;Create a template for a page&lt;/strong&gt;&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;Define a new page layout in &lt;code class=&quot;highlighter-rouge&quot;&gt;layouts.xml&lt;/code&gt; by copy &amp;amp; pasting a column tag&lt;/li&gt;
  &lt;li&gt;Copy &lt;code class=&quot;highlighter-rouge&quot;&gt;1column.xml&lt;/code&gt; and rename to the name of page, ex. &lt;code class=&quot;highlighter-rouge&quot;&gt;homepage.xml&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;Go to admin and set a page to use new page layout defined&lt;/li&gt;
  &lt;li&gt;Clear cache in admin configuration page or cli &lt;code class=&quot;highlighter-rouge&quot;&gt;php bin/magento cache:flush&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;Create a template &lt;code class=&quot;highlighter-rouge&quot;&gt;*.phtml&lt;/code&gt; inside of &lt;code class=&quot;highlighter-rouge&quot;&gt;/templates&lt;/code&gt; directory and use &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;block&amp;gt;&lt;/code&gt; tag inside of &lt;code class=&quot;highlighter-rouge&quot;&gt;homepage.xml&lt;/code&gt; file to point to the template file&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;override-magento-2-core-templates&quot;&gt;&lt;strong&gt;Override Magento 2 core templates&lt;/strong&gt;&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;Follow Magento 2 front end developer guide&lt;/li&gt;
  &lt;li&gt;Copy &amp;amp; paste codebase from Magento 2 github repo&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Tips:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Analyze layout first&lt;/li&gt;
  &lt;li&gt;Look at default modules under &lt;code class=&quot;highlighter-rouge&quot;&gt;app/code/Magento&lt;/code&gt; files and reference in &lt;code class=&quot;highlighter-rouge&quot;&gt;Magento_Theme&lt;/code&gt; base templates&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;loading-front-end-flow-assets&quot;&gt;&lt;strong&gt;Loading Front-End flow assets&lt;/strong&gt;&lt;/h4&gt;

&lt;p&gt;After loading Front-End flow assets files, we will comment out unnecessary Blank theme styles. This is a matter of inspecting unnecessary styles and commenting it out from its default &lt;code class=&quot;highlighter-rouge&quot;&gt;.less&lt;/code&gt; files&lt;/p&gt;

&lt;p&gt;Comment out Magento 2’s &lt;code class=&quot;highlighter-rouge&quot;&gt;imports&lt;/code&gt; in its root &lt;code class=&quot;highlighter-rouge&quot;&gt;/web/css/*.less&lt;/code&gt; file&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;web/css/styles-m.less&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;web/css/_styles.less&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;web/css/source/_sources.less&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Initially, we will keep Magento 2 Blank theme’s Grid system and remove its theme styles. Go back and forth to files above to remove styles.&lt;/p&gt;

&lt;h4 id=&quot;recompile-default-blank-theme-styles-and-new-front-end-flow-styles&quot;&gt;&lt;strong&gt;Recompile default Blank theme styles and new Front-End flow styles&lt;/strong&gt;&lt;/h4&gt;

&lt;ol&gt;
  &lt;li&gt;Delete static files
    &lt;ul&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;rm -rf pub/static/frontend/&amp;lt;company name&amp;gt;/&amp;lt;theme name&amp;gt;/*&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;rm -rf var/cache/*&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;rm -rf var/page_cache/*&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;rm -rf var/view_preprocessed/*&lt;/code&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Redeploy static files
    &lt;ul&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;php bin/magento setup:static-content:deploy&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;php bin/magento cache:clean&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;php bin/magento cache:flush&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;sudo chown -R 777 /var&lt;/code&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h4 id=&quot;credential-requirements&quot;&gt;&lt;strong&gt;Credential Requirements&lt;/strong&gt;&lt;/h4&gt;

&lt;p&gt;As stated in its document, Secure keys do not use the normal Magento2 Marketplace username and password, rather&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Once logged in, generate public and private keys
    &lt;ul&gt;
      &lt;li&gt;username is Public key&lt;/li&gt;
      &lt;li&gt;password is Private key&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Need to sign up a Magento Marketplace account to take advantage of their features or add-ons that can be install via composer&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;the-docker-way&quot;&gt;The Docker way&lt;/h3&gt;

&lt;p&gt;Installing manually was tedious so I’ve decided to use install Magento 2 via Docker and Docker Compose.&lt;/p&gt;

&lt;p&gt;To get a glimpse of how Docker and Docker Compose works, I’ved jotted down notes here: &lt;a href=&quot;Notes-on-creating-a-convenient-local-development-workflow-with-Docker&quot;&gt;Notes on creating a convenient Local Development Workflow with Docker&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Here is a sample &lt;code class=&quot;highlighter-rouge&quot;&gt;docker-compose.yml&lt;/code&gt; file that installs Magento 2 &lt;a href=&quot;https://github.com/mageinferno/magento2-docker-compose&quot;&gt;maginferno - magento2-docker-compose&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Grab a copy of Magento 2 files as well &lt;a href=&quot;https://github.com/magento/magento2.git&quot;&gt;Github - Magento&lt;/a&gt; and place it on your &lt;strong&gt;host&lt;/strong&gt; and mount the necessary directories and files unto your &lt;strong&gt;docker container&lt;/strong&gt;.&lt;/p&gt;

&lt;hr /&gt;

</description>
        <pubDate>Tue, 27 Dec 2016 03:14:55 -0800</pubDate>
        <link>http://rlynjb.github.io/wandrr/Getting-started-with-Magento-Theming</link>
        <guid isPermaLink="true">http://rlynjb.github.io/wandrr/Getting-started-with-Magento-Theming</guid>
        
        <category>cms</category>
        
        <category>ecommerce</category>
        
        <category>magento2</category>
        
        
      </item>
    
      <item>
        <title>Simple Backend task with PHP and MySQL</title>
        <description>&lt;p&gt;front end form:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.w3schools.com/php/php_mysql_insert.asp&quot;&gt;php mysql insert&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://datatables.net/&quot;&gt;datatables display&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Tue, 27 Dec 2016 03:12:26 -0800</pubDate>
        <link>http://rlynjb.github.io/wandrr/Simple-backend-tasks-with-PHP-Mysql</link>
        <guid isPermaLink="true">http://rlynjb.github.io/wandrr/Simple-backend-tasks-with-PHP-Mysql</guid>
        
        <category>php mysql</category>
        
        
      </item>
    
      <item>
        <title>Learning ecommerce with Woocommerce and Wordpress</title>
        <description>&lt;p&gt;Lately, I’ve been delving into ecommerce sites. So I thought, it would be important to research more on different Ecommerce platforms. I’ve been told as well that it is important to learn how ecommerce system works and what platforms to use in terms of security, how the system is built, and support from the community. A platform I started learning is Magento 2, but tools I would prefer are listed below.&lt;/p&gt;

&lt;p&gt;Tools I used to build an Ecommerce site:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Wordpress&lt;/li&gt;
  &lt;li&gt;Divi&lt;/li&gt;
  &lt;li&gt;Woocommerce&lt;/li&gt;
  &lt;li&gt;Standard paypal&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Coming from a Front-End Development background and with amount of code I’ve written this past years, it was kinda tough for me to grasp concepts on how Magento 2 system works. But this post isn’t about Magento 2 but rather digging further into the whole Ecommerce realm.&lt;/p&gt;
</description>
        <pubDate>Tue, 27 Dec 2016 01:43:54 -0800</pubDate>
        <link>http://rlynjb.github.io/wandrr/Learning-ecommerce-with-Woocommerce-and-Wordpress</link>
        <guid isPermaLink="true">http://rlynjb.github.io/wandrr/Learning-ecommerce-with-Woocommerce-and-Wordpress</guid>
        
        <category>javascript</category>
        
        
      </item>
    
      <item>
        <title>Learning Keystonejs</title>
        <description>&lt;p&gt;created a docker compose setup for Nodejs + MongoDB with Keystonejs install.&lt;/p&gt;

&lt;p&gt;my experience with starting with keystone.js was somewhat a love and hate thing.&lt;/p&gt;

&lt;p&gt;coming from a front-end development, i dont know much about database concepts.&lt;/p&gt;

&lt;p&gt;keystone.js is a good framework to dabble and start a journey with fullstack development.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;it is also use for large-scale websites.&lt;/li&gt;
  &lt;li&gt;it is flexible enough to create custom fields and post type.&lt;/li&gt;
  &lt;li&gt;it is still on going development with some aspect of defining fields.&lt;/li&gt;
  &lt;li&gt;it is well supported by the community and rarely read negative feedbacks&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;useful reading references for beginners:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://leanpub.com/keystonejs/read&quot;&gt;Practical Keystone.js&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://keystonejs.com/docs/&quot;&gt;Keystone.js Documentation&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Sat, 20 Aug 2016 04:12:26 -0700</pubDate>
        <link>http://rlynjb.github.io/wandrr/Learning-Keystonejs</link>
        <guid isPermaLink="true">http://rlynjb.github.io/wandrr/Learning-Keystonejs</guid>
        
        <category>javascript</category>
        
        
      </item>
    
      <item>
        <title>Notes on creating a convenient Local Development Workflow with Docker</title>
        <description>&lt;p&gt;While working on a project that requires a new install of PHP and MySql, I came into a halt. It took me a day to re-configure my local development environment.&lt;/p&gt;

&lt;p&gt;I then came across Docker. With this research and learning a new technology. My goal is to establish an efficient local development workflow with Docker as I did with creating &lt;a href=&quot;https://github.com/rlynjb/frontendflow&quot;&gt;Front-End Workflow Theme&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;This article &lt;a href=&quot;https://www.airpair.com/docker/posts/efficiant-development-workfow-using-git-submodules-and-docker-compose&quot;&gt;Efficient development workflow using Git submodules and Docker Compose&lt;/a&gt; gave me a brief overview of what Docker and Git is capable of when architecturing your preferred local development, though, I did have to do further reading on my own to grasp Docker Engine, Docker Compose, and Git submodule (I will not be tackling this topic as I’m focus on Dockerfile and Docker Compose).&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;so-far-what-i-know-about-docker-in-regards-of-hands-on-experience-is&quot;&gt;So far, what I know about Docker in regards of hands-on experience is&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;we edit or create our source code in a directory from our local machine.
    &lt;ul&gt;
      &lt;li&gt;to run the app
        &lt;ul&gt;
          &lt;li&gt;we use Docker to start images we define in &lt;strong&gt;Dockerfile&lt;/strong&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;docker-compose.yml&lt;/code&gt; file&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Docker automatically creates a &lt;code class=&quot;highlighter-rouge&quot;&gt;http://localhost&lt;/code&gt; or &lt;code class=&quot;highlighter-rouge&quot;&gt;http://0.0.0.0&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;Docker uses Port for each contained apps or websites&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;collections-of-tutorials&quot;&gt;Collections of tutorials&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;install &lt;strong&gt;Docker&lt;/strong&gt; via its official site &lt;a href=&quot;https://docs.docker.com/docker-for-mac/&quot;&gt;Getting Started with Docker for Mac&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;useful-commands-and-info&quot;&gt;Useful commands and info&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Look into &lt;strong&gt;Dockerfile&lt;/strong&gt; file references&lt;/li&gt;
  &lt;li&gt;Look into &lt;code class=&quot;highlighter-rouge&quot;&gt;docker-compose.yml&lt;/code&gt; file references and commandline references&lt;/li&gt;
  &lt;li&gt;To access a container via terminal:
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;http://askubuntu.com/questions/505506/how-to-get-bash-or-ssh-into-a-running-container-in-background-mode&quot;&gt;How to get bash or ssh into a running container in background mode?&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;sudo docker exec -i -t 665b4a1e17b6 /bin/bash #by ID&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;sudo docker exec -i -t loving_heisenberg /bin/bash #by Name&lt;/code&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;to start a containter &lt;code class=&quot;highlighter-rouge&quot;&gt;docker-compose up&lt;/code&gt; or &lt;code class=&quot;highlighter-rouge&quot;&gt;docker-compose up -d&lt;/code&gt; to detach from status&lt;/li&gt;
  &lt;li&gt;to see processes: &lt;code class=&quot;highlighter-rouge&quot;&gt;docker ps&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;run a command inside container from host
    &lt;ul&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;docker exec &amp;lt;container_id&amp;gt; &amp;lt;command&amp;gt;&lt;/code&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;for-app-sample-workflow&quot;&gt;For App sample workflow&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.docker.com/compose/gettingstarted&quot;&gt;Practice Workflow with Docker compose&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;for-cms-sample-workflow&quot;&gt;For CMS sample workflow&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://visible.vc/engineering/docker-environment-for-wordpress/&quot;&gt;Practice Workflow with CMS using Docker compose&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Tip:&lt;/strong&gt; you have to be familiar with CMS directory&lt;/li&gt;
  &lt;li&gt;We mount local directories from our machine to its Docker container/server with the use of &lt;strong&gt;volume&lt;/strong&gt; in its &lt;code class=&quot;highlighter-rouge&quot;&gt;docker-compose.yml&lt;/code&gt; file&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Tip:&lt;/strong&gt; we can have a copy of CMS install locally on out directory and mount it on Docker container/server&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Mon, 08 Aug 2016 06:31:20 -0700</pubDate>
        <link>http://rlynjb.github.io/wandrr/Notes-on-creating-a-convenient-local-development-workflow-with-Docker</link>
        <guid isPermaLink="true">http://rlynjb.github.io/wandrr/Notes-on-creating-a-convenient-local-development-workflow-with-Docker</guid>
        
        <category>workflow</category>
        
        
      </item>
    
      <item>
        <title>Breaking down Cross-Browser Testing</title>
        <description>&lt;p&gt;Below is my note on an article on smashing magazine. Article is mostly theory but I tried to take in the important info.&lt;/p&gt;

&lt;h1 id=&quot;two-main-objectives&quot;&gt;Two Main Objectives&lt;/h1&gt;

&lt;ol&gt;
  &lt;li&gt;Discovering bugs
    &lt;ul&gt;
      &lt;li&gt;Entails trying to break your app to find bugs to fix.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Sanity-checking
    &lt;ul&gt;
      &lt;li&gt;Involves verifying that majority of your audience receives the expected experience.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;hr /&gt;

&lt;h1 id=&quot;know-your-statistics&quot;&gt;Know your Statistics&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;Audience statistics&lt;/li&gt;
  &lt;li&gt;Browser usage statistics&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;simplify-your-browser-usage-statistics&quot;&gt;Simplify your browser usage statistics&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Desktop Browsers&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;we don’t care about:
    &lt;ul&gt;
      &lt;li&gt;versions except IE&lt;/li&gt;
      &lt;li&gt;OS&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;same argument applies with Portable Browsers&lt;/li&gt;
  &lt;li&gt;new wave of browsers called: In-App browsers - browsers in social media platforms&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Portable Browsers&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;whats important:
    &lt;ul&gt;
      &lt;li&gt;version of the native Android browser used&lt;/li&gt;
      &lt;li&gt;version of iOS a device is running
        &lt;ul&gt;
          &lt;li&gt;very relevant as Safari versions are intrinsically linked to iOS&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h1 id=&quot;three-phase-attack&quot;&gt;Three-Phase Attack&lt;/h1&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;strong&gt;Reconnaissance: Find Browser-Agnostic Bugs&lt;/strong&gt;
    &lt;ul&gt;
      &lt;li&gt;Try resizing to view responsiveness. Was there a funky breakpoint anywhere?&lt;/li&gt;
      &lt;li&gt;Zoom in and out. Have the background-positions of your image sprite been knocked askew?&lt;/li&gt;
      &lt;li&gt;See how the application behaves with Javascript turned off. Do you still get the core content?&lt;/li&gt;
      &lt;li&gt;See how the application looks with CSS turned off. Do the semantics of the markup still make sense?&lt;/li&gt;
      &lt;li&gt;Try turning both Javascript and CSS off. Are you getting an acceptable experience?&lt;/li&gt;
      &lt;li&gt;Try interacting with the application using only your keyboard. Is it possible to navigate and see all the content?&lt;/li&gt;
      &lt;li&gt;Try throttling your connection and see how quickly the application loads. How heavy is the page load?&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Raid: Test in High-Risk Browsers First&lt;/strong&gt;
    &lt;ul&gt;
      &lt;li&gt;Statistical Analysis of Bug Distribution&lt;/li&gt;
      &lt;li&gt;High-Risk are IE browsers&lt;/li&gt;
      &lt;li&gt;Medium-Rish are Safari, Opera&lt;/li&gt;
      &lt;li&gt;Low-Rish are Chrome, Firefox&lt;/li&gt;
      &lt;li&gt;Fixing bugs in bad browsers makes your code more resilient in good browsers&lt;/li&gt;
      &lt;li&gt;Identifying problematic browsers&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;http://caniuse.com&quot;&gt;CanIUse&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;VirtualBox&lt;/li&gt;
      &lt;li&gt;Check on actual device or browser&lt;/li&gt;
      &lt;li&gt;Tools to rectify major compatibility issues:&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;http://modernizr.com&quot;&gt;Modernizr&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Clearance: sanity checking&lt;/strong&gt;
    &lt;ul&gt;
      &lt;li&gt;By this stage, we should be 80:20&lt;/li&gt;
      &lt;li&gt;Figuratively, we’ve fixed 80% of the bugs after testing 20% of the browsers&lt;/li&gt;
      &lt;li&gt;Now, we verify the experience of 80% of audience through testing a different 20% of browsers&lt;/li&gt;
      &lt;li&gt;Prioritize the browsers&lt;/li&gt;
      &lt;li&gt;Use a 3rd-party service that checks on multiple browsers and device&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;hr /&gt;

&lt;h5 id=&quot;references&quot;&gt;&lt;strong&gt;References:&lt;/strong&gt;&lt;/h5&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.smashingmagazine.com/2016/02/high-impact-minimal-effort-cross-browser-testing/&quot;&gt;High Impact, Minimal-Effort Cross-Browser Testing&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Wed, 03 Aug 2016 05:57:02 -0700</pubDate>
        <link>http://rlynjb.github.io/wandrr/Breaking-down-cross-browser-testing</link>
        <guid isPermaLink="true">http://rlynjb.github.io/wandrr/Breaking-down-cross-browser-testing</guid>
        
        <category>testing</category>
        
        
      </item>
    
      <item>
        <title>Learning React</title>
        <description>&lt;p&gt;implementing react.js on gulp
- do a gulp task of react.js build&lt;/p&gt;

&lt;p&gt;*JSX makes us write HTML syntax in Javascript files&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;this does not run in browsers thats why we need a transpiler&lt;/li&gt;
  &lt;li&gt;since i am usin gulp, we are going to search for a gulp plugin that transpiles JSX files to plain js files&lt;/li&gt;
  &lt;li&gt;JSX to JS using babel&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;configuring gulp plugin babel was a bit tricky due to NPM dependency issues.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;learning react is quite overwhelming. I think with any new front-end is overwhelming due to the amount of dependencies or tools options that are available. Front-end development has indeed bloom.&lt;/p&gt;

&lt;p&gt;before digging further into random articles that suggests to use this or that tool. I’ve decided to learn plain React.js. Stripping other unknown tools and focusing on the foundation, then once comfortable with plain React.js, move on to another tool and implement. Learning indeed can also be a step-by-step process.&lt;/p&gt;

&lt;hr /&gt;

&lt;h5 id=&quot;references&quot;&gt;&lt;strong&gt;References:&lt;/strong&gt;&lt;/h5&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://jamesknelson.com/learn-raw-react-no-jsx-flux-es6-webpack/&quot;&gt;Learn Raw React — no JSX, no Flux, no ES6, no Webpack&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://blog.risingstack.com/the-react-way-getting-started-tutorial/&quot;&gt;The React.js Way: Getting Started Tutorial&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://buildwithreact.com/&quot;&gt;Build with React&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Thu, 28 Jul 2016 03:58:40 -0700</pubDate>
        <link>http://rlynjb.github.io/wandrr/Learning-React</link>
        <guid isPermaLink="true">http://rlynjb.github.io/wandrr/Learning-React</guid>
        
        <category>javascript</category>
        
        
      </item>
    
  </channel>
</rss>
