<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>wandrr.io</title>
    <description>This is a blog about travel and tech.
</description>
    <link>http://www.wandrr.io/</link>
    <atom:link href="http://www.wandrr.io/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Tue, 26 Jan 2016 13:58:58 -0800</pubDate>
    <lastBuildDate>Tue, 26 Jan 2016 13:58:58 -0800</lastBuildDate>
    <generator>Jekyll v2.5.3</generator>
    
      <item>
        <title>Explain how JSONP works (and how it's not really AJAX)</title>
        <description>&lt;h3 id=&quot;explain-how-jsonp-works-and-how-its-not-really-ajax&quot;&gt;Explain how JSONP works (and how it’s not really AJAX).&lt;/h3&gt;

&lt;p&gt;JSONP (acronym for JavaScript Object Notation with Padding) is a common method to retrieve data from another domain and bypass CORS (Cross Origin Resource Sharing) rules.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;An overview of JSONP base on personal experience&lt;/strong&gt;&lt;br /&gt;
I have used JSONP as a work around to get data by wrapping the response data in JSON format with a function callback set in query string as parameter and setting the callback as an object property of ajax object.&lt;/p&gt;

&lt;p&gt;** &lt;em&gt;Note, I was using jQuery library when implementing AJAX with JSONP&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;I’ve also heard of CORS as a set of rules regarding retrieving and transferring data or assets from 3rd parties or different domains from a client. This strictly applies to XMLHttpRequest for security reasons. Making HTTP Requests with XMLHTTPRequest object will only let us make request to our own domain and restricts us from different domain, thus, JSONP was created as a way to bypass this rule.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTTP/Access_control_CORS&quot;&gt;More about CORS: HTTP access control (CORS)&lt;/a&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;How does JSONP work?&lt;/strong&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;After reading further, implementation of JSONP differ from JavaScript libraries to the actual native JavaScript.
In native JavaScript, JSONP requests aren’t dispatched with XMLHttpRequest object, rather, a &lt;code&gt;script&lt;/code&gt; tag is added to the DOM, targeting its &lt;code&gt;src&lt;/code&gt; attribute with the url. Reason is &lt;code&gt;script&lt;/code&gt; tag does not have limitation to which domains it can retrieve its scripts from.
Also, since JavaScript has a global scope, we can reference a function to handle incoming JSON data from a 3rd party api url and link that to our application.
While, in JavaScript libraries such as jQuery, it automatically generate callback and clean up any inserted &lt;code&gt;script&lt;/code&gt; tags unto the DOM.&lt;/p&gt;

&lt;p&gt;In order for JSON data to be wrapped in a function, the 3rd party API service needs to support JSONP feature. Usually, they will specify on their documentation how to implement JSONP. &lt;a href=&quot;http://forismatic.com/en/api/&quot;&gt;Here is an example: http://forismatic.com/en/api/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If you copy &amp;amp; paste the url below, this will return a simple quote formatted in JSON&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;http://api.forismatic.com/api/1.0/?method=getQuote&amp;amp;lang=en&amp;amp;format=json&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;While this url will return the same result except JSON data will be wrapped with a function since we explicitly specify format as jsonp and gave it a callback function&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;http://api.forismatic.com/api/1.0/?method=getQuote&amp;amp;lang=en&amp;amp;format=jsonp&amp;amp;jsonp=processQuote&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;When this loads unto our application from &lt;code&gt;script&lt;/code&gt; tag, the given callback name (function name) will get registered unto the global scope and will be available for us to use throughout our application.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;JSONP limits us with just retrieving &lt;code&gt;GET&lt;/code&gt; data. It does not let us create, update, or delete &lt;code&gt;CRUD&lt;/code&gt; data. That’s why its just a work around but it does have its advantages. For example, retrieving simple data from a weather api, etc. If you want to take advantage of these other HTTP methods, then its best to build your own simple API Server.&lt;/p&gt;

&lt;hr /&gt;

&lt;h4 id=&quot;references&quot;&gt;&lt;strong&gt;References:&lt;/strong&gt;&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://johnnywey.wordpress.com/2012/05/20/jsonp-how-does-it-work/&quot;&gt;JSONP How does it work&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Tue, 26 Jan 2016 02:47:13 -0800</pubDate>
        <link>http://www.wandrr.io/JS-Interview-Question-Explain-how-JSONP-works</link>
        <guid isPermaLink="true">http://www.wandrr.io/JS-Interview-Question-Explain-how-JSONP-works</guid>
        
        <category>javascript</category>
        
        <category>interview question</category>
        
        
      </item>
    
      <item>
        <title>Explain AJAX in as much detail as possible</title>
        <description>&lt;h3 id=&quot;explain-ajax-in-as-much-detail-as-possible&quot;&gt;Explain AJAX in as much detail as possible&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Overview&lt;/strong&gt; &lt;br /&gt;
AJAX is a way to communicate to the server without reloading the page. Once we receive the data from the server, we can then manipulate those data and display unto certain parts of the page, this is why we don’t need to reload the page.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Technically..&lt;/strong&gt; &lt;br /&gt;
AJAX is acronym for Asynchronous JavaScript and XML. It uses a host object called XMLHttpRequest to communicate to a server-side script to retrieve data formatted in either JSON, XML, HTML, or plain text.
AJAX, as in its acronym states, is Asynchronous in nature. This means, it can receive data through user interaction or automation event without the need to refresh the page, thus, updating and reloading certain portion of the page.&lt;/p&gt;

&lt;p&gt;There are many ways we can implement AJAX, via jQuery or native JavaScript. Since this is for learning purposes, I am going to use native JavaScript, outline the method, and explain how each objects work.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;A bit of History&lt;/strong&gt; &lt;br /&gt;
To make an HTTP Request to the server, we need to instantiate a class called XMLHttpRequest. Microsoft developed this object called XMLHttp, and then Mozilla developed their own version and called it XMLHttpRequest. Other browsers, Safari, including Microsoft, followed and implemented XMLHttpRequest object as well. If you want to know its history. 
&lt;a href=&quot;https://en.wikipedia.org/wiki/XMLHttpRequest&quot;&gt;Ref: Wikipedia - XMLHttpRequest&lt;/a&gt;&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;c&quot;&gt;&amp;lt;!--&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;  This is just a simple AJAX example.&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;  credits to developer.mozilla.org for sample code.&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;  comments are explained by me. :-p&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;--&amp;gt;&lt;/span&gt;

&lt;span class=&quot;nt&quot;&gt;&amp;lt;span&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;ajaxButton&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;style=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;cursor: pointer; text-decoration: underline&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
  Make a request
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/span&amp;gt;&lt;/span&gt;

&lt;span class=&quot;nt&quot;&gt;&amp;lt;script &lt;/span&gt;&lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;text/javascript&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;cm&quot;&gt;/*&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt;    here, we are using an IIFE to wrap our code so our&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt;    variables and closures doesn&amp;#39;t pollute the global namespace&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt;  */&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;httpRequest&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;cm&quot;&gt;/*&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt;      this is an event handler,&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt;      once user clicked on ajaxButton html element,&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt;      it will execute the onclick function and call the&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt;      makeRequest function with a given &amp;#39;test.html&amp;#39; value on its parameter.&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt;      the &amp;#39;test.html&amp;#39; url is just a sample api url which we&amp;#39;ll be&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt;      making a request from a server and expect a server response.&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt;    */&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getElementById&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;ajaxButton&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;onclick&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;makeRequest&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;test.html&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;

    &lt;span class=&quot;cm&quot;&gt;/*&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt;      MAKING AN HTTP REQUEST&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt;    */&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;makeRequest&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;cm&quot;&gt;/*&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt;        as mentioned above, we need to instantiate a new class &lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt;        of XMLHttpRequest so we can make a HTTP request to the server.&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt;        we are assigning this class to a variable defined on our&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt;        outer scope so its accessible throughout our IIFE scope.&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt;      */&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;httpRequest&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;XMLHttpRequest&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;

      &lt;span class=&quot;cm&quot;&gt;/*&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt;        were doing a Feature Detection here.&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt;        as the name implies, we are just checking if&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt;        XMLHttpRequest host object is NOT available and&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt;        setting an alert action to notify user if&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt;        XMLHttpRequest is not available on their browser/environment.&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt;      */&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;httpRequest&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;alert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;Giving up :( Cannot create an XMLHTTP instance&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

      &lt;span class=&quot;cm&quot;&gt;/*&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt;        before sending our HTTP server request,&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt;        we need to set a handler for our server response.&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt;        We can do this by assigning a function to our&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt;        XMLHttpRequest object property &amp;#39;onreadystatechange&amp;#39;.&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt;        Or&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt;        We can also assign an anonymous function, so &amp;#39;onreadystatechange&amp;#39;&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt;        doesn&amp;#39;t need to carry a reference to a function.&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt;        But for organization, we will just use the former method.&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt;      */&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;httpRequest&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;onreadystatechange&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;alertContents&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

      &lt;span class=&quot;cm&quot;&gt;/*&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt;        Now that we have set our request server response handler,&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt;        we&amp;#39;ll need to make the request.&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt;        - 1st parameter, is the HTTP request method (GET, POST, DELETE, etc).&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt;          There are other request methods, whichever our server supports.&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt;          It&amp;#39;s also good practice to define these request methods&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt;          in capital letters as per the HTTP standard or there are browsers&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt;          (Firefox) that may not be able to process the request.&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt;        - 2nd parameter, is the url for the data we are requesting.&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt;          Make sure to use the exact domain name or it will throw a &amp;#39;Permission Denied&amp;#39; error.&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt;          For security purpose, we cannot make a 3rd party request, if needed,&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt;          this is a CORS issue,&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt;          ref: https://developer.mozilla.org/en-US/docs/Web/HTTP/Access_control_CORS&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt;        - 3rd parameter, just sets whether the request is asynchronous. This is&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt;          optional and default is set to true.&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt;      */&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;httpRequest&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;open&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;GET&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

      &lt;span class=&quot;cm&quot;&gt;/*&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt;        As the method name implies, this HTTP request object method opens/sends the request.&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt;        If we are simply doing a &amp;#39;GET&amp;#39; request, we can leave the parameter empty, but&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt;        if we are &amp;#39;POST&amp;#39;ing data, we can pass in a value formatted in either&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt;        query string, JSON, SOAP, etc.&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt;      */&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;httpRequest&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;send&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;

      &lt;span class=&quot;cm&quot;&gt;/*&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt;        NOTE:&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt;        If we want to POST data, we may need to set the MIME type of the request.&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt;        Ex: httpRequest.setRequestHeader(&amp;#39;Content-Type&amp;#39;, &amp;#39;application/x-www-form-urlencoded&amp;#39;);&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt;      */&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;cm&quot;&gt;/*&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt;      HANDLING THE SERVER RESPONSE&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt;    */&lt;/span&gt;
    &lt;span class=&quot;cm&quot;&gt;/*&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt;      this is the same function declaration we&amp;#39;ve assigned to &lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt;      &amp;#39;onreadystatechange&amp;#39; object property above.&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt;    */&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;alertContents&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;cm&quot;&gt;/*&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt;        this if statement checks for the state of the request.&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt;        if the &amp;#39;readyState&amp;#39; has a value of XMLHttpRequest.DONE (evaluating to 4),&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt;        it means the server response has been received and its OK for us to continue processing.&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt;        ref: https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest#Properties&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt;      */&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;httpRequest&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;readyState&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;XMLHttpRequest&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;DONE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;cm&quot;&gt;/*&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt;          Next, we&amp;#39;ll check for HTTP Status Code. Most common HTTP Status Codes I&amp;#39;ve&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt;          encountered are 200 OK, 403 Forbidden Error, and 500 Server Error.&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt;          There is a list of HTTP Status Code available online with description of code.&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt;          This if statement is just checking for which HTTP Status Code to respond to and&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt;          execute code for whatever we want to do with the data.&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt;        */&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;httpRequest&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;status&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;200&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
          &lt;span class=&quot;nx&quot;&gt;alert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;httpRequest&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;responseText&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
          &lt;span class=&quot;nx&quot;&gt;alert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;There was a problem with the request.&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

        &lt;span class=&quot;cm&quot;&gt;/*&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt;          There are 2 options to access data: httpRequest.responseText and httpRequest.responseXML&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt;          Step above is only valid if asynchronous is set to true, if not, we don&amp;#39;t need to specify&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt;          a function.&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt;        */&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;})();&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;hr /&gt;

&lt;h5 id=&quot;reference&quot;&gt;&lt;strong&gt;Reference:&lt;/strong&gt;&lt;/h5&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/AJAX/Getting_Started&quot;&gt;What’s AJAX? - Getting Started&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Fri, 22 Jan 2016 02:47:13 -0800</pubDate>
        <link>http://www.wandrr.io/JS-Interview-Question-Explain-AJAX-in-as-much-detail-as-possible</link>
        <guid isPermaLink="true">http://www.wandrr.io/JS-Interview-Question-Explain-AJAX-in-as-much-detail-as-possible</guid>
        
        <category>javascript</category>
        
        <category>interview question</category>
        
        
      </item>
    
      <item>
        <title>When would you use document.write()?</title>
        <description>&lt;h3 id=&quot;when-would-you-use-documentwrite&quot;&gt;When would you use document.write()?&lt;/h3&gt;

&lt;p&gt;When &lt;code&gt;document.write()&lt;/code&gt; is executed after page load, it replaces the entire header and body tag with the given parameter value in string. An invocation could look like this:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;write&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;&amp;lt;h1&amp;gt;hello world&amp;lt;/h1&amp;gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;When working with web application, it is uncommon task to overwrite an entire page, hence why using &lt;code&gt;document.write()&lt;/code&gt; is bad practice. It cannot inject string text into a given node point unlike jQuery library selectors and native JavaScript methods.
&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Document&quot;&gt;Ref: developer.mozilla.org&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Another reason not to use &lt;code&gt;document.write()&lt;/code&gt; is it doesn’t support XHTML, but its not an issue since most web development uses HTML. Since &lt;code&gt;document.write()&lt;/code&gt; fires after a page has finish loading, it causes performance issues and sometimes, may not even fire at all.&lt;/p&gt;

&lt;p&gt;The only seem appropriate usage for &lt;code&gt;document.write()&lt;/code&gt; is when working third parties like Google Analytics and such for including their scripts. This is because &lt;code&gt;document.write()&lt;/code&gt; is mostly available in any browser. Since third party companies have no control over the user’s browser dependencies (ex. jQuery), &lt;code&gt;document.write()&lt;/code&gt; can be used as a fallback or a default method.&lt;/p&gt;
</description>
        <pubDate>Wed, 20 Jan 2016 02:47:13 -0800</pubDate>
        <link>http://www.wandrr.io/JS-Interview-Question-When-would-you-use-document-write</link>
        <guid isPermaLink="true">http://www.wandrr.io/JS-Interview-Question-When-would-you-use-document-write</guid>
        
        <category>javascript</category>
        
        <category>interview question</category>
        
        
      </item>
    
      <item>
        <title>What’s the difference between feature detection, feature inference, and using the UA string?</title>
        <description>&lt;h3 id=&quot;whats-the-difference-between-feature-detection-feature-inference-and-using-the-ua-string&quot;&gt;What’s the difference between feature detection, feature inference, and using the UA string?&lt;/h3&gt;

&lt;p&gt;These 3 are just practices of determining if a certain web technology feature exists in a user’s browser or environment. Though features may vary with not just modern web technology but with programming languages as well.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;Feature Detection&lt;/strong&gt; &lt;br /&gt;
Feature detection is just a way of determining if a feature exists in certain browsers. A good example is a modern HTML5 feature ‘Location’.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;navigator&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;geolocation&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// detect users location here B-) and do something awesome&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;Feature Inference&lt;/strong&gt; &lt;br /&gt;
Feature Inference is when you have determined a feature exists and assumed the next web technology feature you are implementing unto your app exists as well. Its usually bad practice to assume, so its better to explicitly specify features you want to detect and plan a fallback action.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;UA String&lt;/strong&gt; &lt;br /&gt;
UA String or User Agent String is a string text of data that each browsers send and can be access via navigator.userAgent. These “string text of data” contains information of the browser environment you are targeting.&lt;/p&gt;

&lt;p&gt;If you open your console and run&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;nx&quot;&gt;navigator&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;userAgent&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;You’ll see it outputs a “string text of data” containing complete information of the environment you are currently using. Since this is an old way of doing detection, this method can be easily spoofed, thus, may not be the best route to take. &lt;a href=&quot;https://en.wikipedia.org/wiki/User_agent&quot;&gt;Ref: Wikipedia - User Agent&lt;/a&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;A JavaScript library I love using is Modernizr&lt;/strong&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Modernizr is a small piece of JavaScript code that automatically detects the availability of next-generation web technologies in your user’s browsers. Rather than blacklisting entire ranges of browsers based on “UA sniffing,” Modernizr uses feature detection to allow you to easily tailor your user’s experiences based on the actual capabilities of their browser.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href=&quot;https://modernizr.com/&quot;&gt;Modernizr: the feature detection library for HTML5/CSS3&lt;/a&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h5 id=&quot;references&quot;&gt;&lt;strong&gt;References:&lt;/strong&gt;&lt;/h5&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://stackoverflow.com/a/20105074/4538744&quot;&gt;What’s the difference between feature detection, feature inference, and using the UA string&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Wed, 20 Jan 2016 02:47:13 -0800</pubDate>
        <link>http://www.wandrr.io/JS-Interview-Question-Whats-difference-between-feature-detection-feature-inference-UA-string</link>
        <guid isPermaLink="true">http://www.wandrr.io/JS-Interview-Question-Whats-difference-between-feature-detection-feature-inference-UA-string</guid>
        
        <category>javascript</category>
        
        <category>interview question</category>
        
        
      </item>
    
      <item>
        <title>Explain Function.prototype.bind</title>
        <description>&lt;h3 id=&quot;explain-functionprototypebind&quot;&gt;Explain Function.prototype.bind&lt;/h3&gt;

&lt;p&gt;It took me awhile to understand how &lt;code&gt;this&lt;/code&gt; keyword works, but after reading about bind method, its starting to make sense regarding the context of an object set explicitly and being able to access with &lt;code&gt;this&lt;/code&gt; keyword.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;A common issue that arise when we use functions is dealing with a function’s scope and an object’s context.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;** it’s important to understand the difference between function scope and object context.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Every function has its own scope with visible and accessible variables, but when we define closures, these inner functions creates its own scope as well. If we were to access the outer function’s context from inner functions (closures), we will need to declare a variable specifying the outer function’s context.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;self&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;To avoid polluting an outer function’s scope, we can use bind method instead. Once we invoked a function with bind method, it bounds our closure or inner function with the outer function’s scope.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;foo&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// some content &lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;bind&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;We are also able to pass in 2nd arguments if needed.&lt;/p&gt;

&lt;p&gt;Though, IE8 and below doesn’t support &lt;code&gt;bind()&lt;/code&gt;, there is a polyfill available to fix this issue.
&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/bind&quot;&gt;Polyfill here and more info&lt;/a&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;There are other methods of setting the scope of a function.&lt;/strong&gt;
Other two are &lt;code&gt;apply() &amp;amp; call()&lt;/code&gt;. Difference between &lt;code&gt;apply() &amp;amp; call()&lt;/code&gt; and &lt;code&gt;bind()&lt;/code&gt; method is:&lt;/p&gt;

&lt;p&gt;Functions invoked with &lt;code&gt;apply() &amp;amp; call()&lt;/code&gt; methods gets executed first and of course, we also pass along the function’s scope as well&lt;/p&gt;

&lt;p&gt;… while …&lt;/p&gt;

&lt;p&gt;Functions invoked with &lt;code&gt;bind()&lt;/code&gt; method just sets the scope, but doesn’t get executed. Awesome! B-)&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;Now another issue is when we pass around functions.&lt;/strong&gt; Its function context actually changes as well depending on where the function is invoked. It doesn’t necessarily bound to a specific object as we expect it to be bound to, rather, it may also bound to a global object, other outer objects, or even an HTML element, depending on where we invoked the function.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;** Note, that invoking a function is different from creating a new instance of an object.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Below is an interesting (coz its new to me) Code sample with commented out explanation. It shows how &lt;code&gt;this&lt;/code&gt; keyword can be mistakenly bound to an HTML element and how &lt;code&gt;bind()&lt;/code&gt; can fix it.&lt;/p&gt;

&lt;iframe height=&quot;268&quot; scrolling=&quot;no&quot; src=&quot;//codepen.io/rlynjb/embed/qbpZVX/?height=268&amp;amp;theme-id=20698&amp;amp;default-tab=js&quot; frameborder=&quot;no&quot; allowtransparency=&quot;true&quot; allowfullscreen=&quot;true&quot; style=&quot;width: 100%;&quot;&gt;See the Pen &lt;a href=&quot;http://codepen.io/rlynjb/pen/qbpZVX/&quot;&gt;Learning Javascript's bind method&lt;/a&gt; by rlynjb (&lt;a href=&quot;http://codepen.io/rlynjb&quot;&gt;@rlynjb&lt;/a&gt;) on &lt;a href=&quot;http://codepen.io&quot;&gt;CodePen&lt;/a&gt;.
&lt;/iframe&gt;

&lt;hr /&gt;

&lt;h5 id=&quot;references&quot;&gt;&lt;strong&gt;References:&lt;/strong&gt;&lt;/h5&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://javascriptissexy.com/javascript-apply-call-and-bind-methods-are-essential-for-javascript-professionals&quot;&gt;JavaScript’s Apply, Call, and Bind Methods are Essential for JavaScript Professionals&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://krasimirtsonev.com/blog/article/JavaScript-bind-function-setting-a-scope&quot;&gt;JavaScript: bind function&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Wed, 20 Jan 2016 02:47:13 -0800</pubDate>
        <link>http://www.wandrr.io/JS-Interview-Question-Explain-bind</link>
        <guid isPermaLink="true">http://www.wandrr.io/JS-Interview-Question-Explain-bind</guid>
        
        <category>javascript</category>
        
        <category>interview question</category>
        
        
      </item>
    
      <item>
        <title>What’s the difference between .call and .apply?</title>
        <description>&lt;h3 id=&quot;whats-the-difference-between-call-and-apply&quot;&gt;What’s the difference between .call and .apply?&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Recalling the basics&lt;/strong&gt; &lt;br /&gt;
Remember, in JavaScript, everything are objects, even Functions, and every objects has their properties and methods. Both &lt;code&gt;.apply&lt;/code&gt; and &lt;code&gt;.call&lt;/code&gt; are methods of Function object.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;How do .apply or .call work?&lt;/strong&gt; &lt;br /&gt;
Invoking a function with &lt;code&gt;.apply&lt;/code&gt; and &lt;code&gt;.call&lt;/code&gt; allows us to point an object to the invoked function by passing in the object as first argument and second argument (and so on) as its values.&lt;/p&gt;

&lt;p&gt;The function’s &lt;code&gt;this&lt;/code&gt; keyword will be manipulated when invoked with &lt;code&gt;.apply&lt;/code&gt; or &lt;code&gt;.call&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;From what I understand, &lt;code&gt;.apply&lt;/code&gt; and &lt;code&gt;.call&lt;/code&gt; are methods we use to assign the &lt;code&gt;this&lt;/code&gt; keyword from the invoked function to reference to an object for the duration of the method invocation.&lt;/p&gt;

&lt;p&gt;Below is a code example with commented explanation.&lt;/p&gt;

&lt;iframe height=&quot;268&quot; scrolling=&quot;no&quot; src=&quot;//codepen.io/rlynjb/embed/JGOmwp/?height=268&amp;amp;theme-id=20698&amp;amp;default-tab=js&quot; frameborder=&quot;no&quot; allowtransparency=&quot;true&quot; allowfullscreen=&quot;true&quot; style=&quot;width: 100%;&quot;&gt;See the Pen &lt;a href=&quot;http://codepen.io/rlynjb/pen/JGOmwp/&quot;&gt;learning JavaScript's .apply and .call&lt;/a&gt; by rlynjb (&lt;a href=&quot;http://codepen.io/rlynjb&quot;&gt;@rlynjb&lt;/a&gt;) on &lt;a href=&quot;http://codepen.io&quot;&gt;CodePen&lt;/a&gt;.
&lt;/iframe&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;So what’s the difference between .apply and .call?&lt;/strong&gt; &lt;br /&gt;
Besides passing in an argument to a &lt;code&gt;.call&lt;/code&gt; or &lt;code&gt;.apply&lt;/code&gt; methods that references to the &lt;code&gt;this&lt;/code&gt; keyword of an invoked function, we can also pass in a 2nd argument or more. A good mnemonic to explain their differences are:&lt;/p&gt;

&lt;p&gt;&lt;em&gt;&lt;code&gt;.call&lt;/code&gt; Counts the number of arguments separated by Comma&lt;/em&gt; &lt;br /&gt;
.call method accepts one or more arguments as objects and requires to be listed explicitly, means, it is a fixed number of arguments.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;nx&quot;&gt;foo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;call&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;object&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;“&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;other&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;argument&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;”&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;“&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;another&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;one&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;”&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;em&gt;… while …&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;&lt;code&gt;.apply&lt;/code&gt; uses Array as an Argument&lt;/em&gt; &lt;br /&gt;
.apply method requires an array as its 2nd argument. This method is used if you don’t know the number of arguments to be passed or the arguments is already in an array.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;nx&quot;&gt;foo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;apply&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;object&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;“&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;argument1&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;”&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;“&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;argument2&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;”&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;“&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;argument3&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;”&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;** &lt;em&gt;Open CodePen above for Code sample&lt;/em&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h5 id=&quot;references&quot;&gt;&lt;strong&gt;References:&lt;/strong&gt;&lt;/h5&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://stackoverflow.com/questions/1986896/what-is-the-difference-between-call-and-apply/1987244&quot;&gt;What is the difference between call and apply?&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://odetocode.com/blogs/scott/archive/2007/07/04/function-apply-and-function-call-in-javascript.aspx&quot;&gt;Function.apply and Function.call in JavaScript&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Tue, 19 Jan 2016 02:47:13 -0800</pubDate>
        <link>http://www.wandrr.io/JS-Interview-Question-Whats-difference-between-call-and-apply</link>
        <guid isPermaLink="true">http://www.wandrr.io/JS-Interview-Question-Whats-difference-between-call-and-apply</guid>
        
        <category>javascript</category>
        
        <category>interview question</category>
        
        
      </item>
    
      <item>
        <title>Difference between: function Person(){}, var person = Person(), and var person = new Person()?</title>
        <description>&lt;h3 id=&quot;js-interview-question-difference-between-function-person-var-person--person-and-var-person--new-person&quot;&gt;JS Interview Question: Difference between: function Person(){}, var person = Person(), and var person = new Person()?&lt;/h3&gt;

&lt;p&gt;There are different ways (not to be exact) we can use functions in JavaScript, but with the given code below highlights important differences on how functions work.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Person&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// code here&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Function Declaration&lt;/strong&gt; &lt;br /&gt;
Code above declares a function statement (statements perform an action) but does not execute, however, it does get registered into the global namespace.&lt;/p&gt;

&lt;hr /&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;person&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Person&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Function Expression&lt;/strong&gt; &lt;br /&gt;
A variable ‘var person’ has been defined and contains a value reference to a Person function. Any JavaScript Expressions (including Function Expressions) always returns a value. This may also be an Anonymous function if no name has been assign to a function but wrapped in parenthesis to be interpreted as an expression.&lt;/p&gt;

&lt;hr /&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;person&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Person&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Function Constructor&lt;/strong&gt; &lt;br /&gt;
By adding the keyword &lt;code&gt;new&lt;/code&gt;. We are instantiating a new object of the Person class constructor. A function declaration is just a regular function unless it has been instantiated, it then becomes a class constructor.&lt;/p&gt;

&lt;hr /&gt;

&lt;h5 id=&quot;references&quot;&gt;&lt;strong&gt;References:&lt;/strong&gt;&lt;/h5&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.2ality.com/2012/09/expressions-vs-statements.html&quot;&gt;Expressions versus statements in JavaScript&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Thu, 14 Jan 2016 02:47:13 -0800</pubDate>
        <link>http://www.wandrr.io/JS-Interview-Question-Difference-between-function-Person-var-person-Person-and-var-person-new-Person</link>
        <guid isPermaLink="true">http://www.wandrr.io/JS-Interview-Question-Difference-between-function-Person-var-person-Person-and-var-person-new-Person</guid>
        
        <category>javascript</category>
        
        <category>interview question</category>
        
        
      </item>
    
      <item>
        <title>What’s the difference between host objects and native objects?</title>
        <description>&lt;h3 id=&quot;whats-the-difference-between-host-objects-and-native-objects&quot;&gt;What’s the difference between host objects and native objects?&lt;/h3&gt;

&lt;p&gt;From what I understand, objects are divided from which environment and language they are supplied: &lt;strong&gt;Host Objects&lt;/strong&gt; and &lt;strong&gt;Native Objects&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Host Objects&lt;/strong&gt; are objects supplied by a certain environment. They are not always the same because each environment differs and contains host objects that accommodates execution of ECMAScript. Example, browser environment supplies objects such as window. While a node.js/server environment supplies objects such as NodeList.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Native Objects&lt;/strong&gt; or Built-in Objects are standard built-in objects provided by Javascript. Native objects is sometimes referred to as ‘Global Objects’ since they are objects Javascript has provided natively available for use.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;There are various articles categorizing these native global objects but its number differs, so for accuracy (I believe), I recommend the official Mozilla Doc as reference.
&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects&quot;&gt;Ref: developer.mozilla.org - Global Objects&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Javascript is mainly constructed by these categorized native global objects. These objects can be used either as Constructor (String(), Number(), Boolean()) or as Primitive Value, like literally as a value :-D (‘string’, 123, true).&lt;/p&gt;

&lt;hr /&gt;

&lt;h5 id=&quot;references&quot;&gt;&lt;strong&gt;References:&lt;/strong&gt;&lt;/h5&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://programmerinnervoice.wordpress.com/2013/07/22/host-objects-vs-native-objects/&quot;&gt;Host objects Vs Native objects In JavaScript&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects&quot;&gt;Standard built-in objects&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Wed, 13 Jan 2016 02:47:13 -0800</pubDate>
        <link>http://www.wandrr.io/JS-Interview-Question-Whats-difference-between-host-objects-native-objects</link>
        <guid isPermaLink="true">http://www.wandrr.io/JS-Interview-Question-Whats-difference-between-host-objects-native-objects</guid>
        
        <category>javascript</category>
        
        <category>interview question</category>
        
        
      </item>
    
      <item>
        <title>How do you organize your code? (module pattern, classical inheritance?)</title>
        <description>&lt;h3 id=&quot;how-do-you-organize-your-code-module-pattern-classical-inheritance&quot;&gt;How do you organize your code? (module pattern, classical inheritance?)&lt;/h3&gt;

&lt;p&gt;There are several options in implementing Module Pattern. An option I mostly use is Object Literal Notation for encapsulating and organizing my code, but upon further readings, Module Pattern using Anonymous Closures, Global Import, and Module Export have sparked my interest as it provides more features for private and public var/methods. It still uses object literal but as to return values from the scoping function.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;In JavaScript, the Module pattern is used to further emulate the concept of classes in such a way that we’re able to include both public/private methods and variables inside a single object, thus shielding particular parts from the global scope.&lt;/p&gt;

  &lt;p&gt;– Addy Osmani, Learning Javascript Design Patterns&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;There are popular javascript module framework that specifically implemented Module Pattern such as Dojo, ExtJS, YUI, and jQuery. Good to know if your new to learning Javascript concepts and have heard of these technologies before those popular MVC frameworks (Angular.js, Ember.js, Backbone.js) emerged.&lt;/p&gt;

&lt;p&gt;Another implementation of module pattern popularized Christian Heilmann (which I think is pretty clean and neat) is The Revealing Module Pattern. It’s pretty much the same with the standard Module Pattern except it uses the return object literal properties as references to variables and functions from the scoping function to export variables and methods.&lt;/p&gt;

&lt;hr /&gt;

&lt;h5 id=&quot;references&quot;&gt;&lt;strong&gt;References:&lt;/strong&gt;&lt;/h5&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://addyosmani.com/resources/essentialjsdesignpatterns/book/#modulepatternjavascript&quot;&gt;Learning JavaScript Design Patterns&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.adequatelygood.com/JavaScript-Module-Pattern-In-Depth.html&quot;&gt;JavaScript Module Pattern: In-Depth&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Wed, 13 Jan 2016 02:47:13 -0800</pubDate>
        <link>http://www.wandrr.io/JS-Interview-Question-How-do-you-organize-your-code-module-pattern-classical-inheritance</link>
        <guid isPermaLink="true">http://www.wandrr.io/JS-Interview-Question-How-do-you-organize-your-code-module-pattern-classical-inheritance</guid>
        
        <category>javascript</category>
        
        <category>interview question</category>
        
        
      </item>
    
      <item>
        <title>What’s a typical use case for anonymous functions?</title>
        <description>&lt;h3 id=&quot;whats-a-typical-use-case-for-anonymous-functions&quot;&gt;What’s a typical use case for anonymous functions?&lt;/h3&gt;

&lt;p&gt;Since Anonymous Functions are function expressions rather than the regular function declaration which are statements. Function expressions are more flexible. We can assign functions to variables, object properties, pass them as arguments to other functions, and even write a simple one line code enclosed in an anonymous functions.&lt;/p&gt;

&lt;p&gt;Example:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;squaredArray&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;inputArray&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;With ES6 syntax this becomes even more concise.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;squaredArray&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;inputArray&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Another typical example would be an anonymous function used by popular frameworks used as IIFE (Immediate Invoked Function Expression).&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  
&lt;span class=&quot;p&quot;&gt;})();&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

</description>
        <pubDate>Tue, 12 Jan 2016 02:47:13 -0800</pubDate>
        <link>http://www.wandrr.io/JS-Interview-Question-Whats-typical-use-case-for-anonymous-functions</link>
        <guid isPermaLink="true">http://www.wandrr.io/JS-Interview-Question-Whats-typical-use-case-for-anonymous-functions</guid>
        
        <category>javascript</category>
        
        <category>interview question</category>
        
        
      </item>
    
  </channel>
</rss>
