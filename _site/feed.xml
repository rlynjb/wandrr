<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>wandrr</title>
    <description>This is a blog about travel and tech.
</description>
    <link>http://www.wandrr.io/</link>
    <atom:link href="http://www.wandrr.io/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Mon, 27 Jun 2016 12:02:04 -0700</pubDate>
    <lastBuildDate>Mon, 27 Jun 2016 12:02:04 -0700</lastBuildDate>
    <generator>Jekyll v3.1.6</generator>
    
      <item>
        <title>Getting started with Grav on MAMP</title>
        <description>&lt;h3 id=&quot;install-brew&quot;&gt;1. Install Brew&lt;/h3&gt;

&lt;p&gt;This is to install &lt;strong&gt;git&lt;/strong&gt; and &lt;strong&gt;other development goodies&lt;/strong&gt; if you are a fan of commandline.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://brew.sh/&quot;&gt;http://brew.sh/&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://commandlinepoweruser.com/&quot;&gt;http://commandlinepoweruser.com/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;install-mamp&quot;&gt;2. Install MAMP&lt;/h3&gt;

&lt;p&gt;You can use any webserver but I’ve used &lt;strong&gt;MAMP&lt;/strong&gt; because it was the quickest way I can install a webserver and setup a &lt;strong&gt;local Apache&lt;/strong&gt; eventhough we are not using MySql database.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.mamp.info/en/&quot;&gt;https://www.mamp.info/en/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;install-grav&quot;&gt;3. Install Grav&lt;/h3&gt;

&lt;ol&gt;
  &lt;li&gt;Download &lt;strong&gt;Grav core + admin plugins&lt;/strong&gt; files from &lt;a href=&quot;https://getgrav.org/downloads&quot;&gt;https://getgrav.org/downloads&lt;/a&gt; and place into &lt;code class=&quot;highlighter-rouge&quot;&gt;htdocs&lt;/code&gt; directory.
    &lt;ul&gt;
      &lt;li&gt;You can choose either &lt;strong&gt;Grav core&lt;/strong&gt; or &lt;strong&gt;Grav core + admin plugins&lt;/strong&gt;&lt;/li&gt;
      &lt;li&gt;If &lt;strong&gt;Grav core&lt;/strong&gt; only, you have the option to install &lt;strong&gt;Grav admin&lt;/strong&gt; later by running &lt;code class=&quot;highlighter-rouge&quot;&gt;bin/gpm install admin&lt;/code&gt; on the root directory of your &lt;strong&gt;Grav core&lt;/strong&gt; files.&lt;br /&gt;
 More info: &lt;a href=&quot;https://learn.getgrav.org/admin-panel/introduction&quot;&gt;https://learn.getgrav.org/admin-panel/introduction&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Unzip the &lt;code class=&quot;highlighter-rouge&quot;&gt;grav-admin-v*.*.**.zip&lt;/code&gt; file on the &lt;code class=&quot;highlighter-rouge&quot;&gt;htdocs&lt;/code&gt; directory.&lt;/li&gt;
  &lt;li&gt;You can rename the &lt;strong&gt;Grav&lt;/strong&gt; directory to whatever project name you want.
    &lt;ul&gt;
      &lt;li&gt;You can also move the &lt;strong&gt;Grav core files&lt;/strong&gt; to an empty &lt;strong&gt;Github Repo directory&lt;/strong&gt;.&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;Tip:&lt;/strong&gt; Make sure to move &lt;code class=&quot;highlighter-rouge&quot;&gt;.htaccess&lt;/code&gt; file as well to avoid &lt;strong&gt;404 Not Found&lt;/strong&gt; error when visiting subpages.&lt;/li&gt;
      &lt;li&gt;For more info, check &lt;a href=&quot;https://learn.getgrav.org/troubleshooting&quot;&gt;https://learn.getgrav.org/troubleshooting&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://getgrav.org/&quot;&gt;https://getgrav.org/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;method-for-setting-up-a-pre-made-html5-template-to-grav-theme&quot;&gt;4. Method for setting up a pre-made HTML5 template to Grav theme&lt;/h3&gt;

&lt;ol&gt;
  &lt;li&gt;Unzip the &lt;strong&gt;HTML5 theme&lt;/strong&gt; zip file unto the &lt;code class=&quot;highlighter-rouge&quot;&gt;user/themes/&lt;/code&gt; directory.&lt;/li&gt;
  &lt;li&gt;Register your theme by following &lt;strong&gt;Step 1 - Base Theme Setup&lt;/strong&gt; on &lt;a href=&quot;https://learn.getgrav.org/themes/theme-tutorial&quot;&gt;https://learn.getgrav.org/themes/theme-tutorial&lt;/a&gt;.
    &lt;ul&gt;
      &lt;li&gt;For &lt;strong&gt;Step 1 - Base Theme Setup&lt;/strong&gt; - #2&lt;br /&gt;
 &lt;em&gt;Tip:&lt;/em&gt; You can use the same HTML5 theme directory name or you can clean up directory name by renaming and practicing proper naming convention.&lt;br /&gt;
 &lt;em&gt;Ex:&lt;/em&gt; Avoid whitespace, avoid special characters except &lt;code class=&quot;highlighter-rouge&quot;&gt;_&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;-&lt;/code&gt; following &lt;em&gt;camel case or snake case&lt;/em&gt; naming convention.&lt;/li&gt;
      &lt;li&gt;For &lt;strong&gt;Step 1 - Base Theme Setup&lt;/strong&gt; - #3&lt;br /&gt;
 &lt;em&gt;Tip:&lt;/em&gt; I chose to follow &lt;strong&gt;Grav’s Theme directory structure&lt;/strong&gt; rather than to use the &lt;strong&gt;HTML5 theme&lt;/strong&gt; default directory structure to avoid nested directory level, plus, Grav runs a &lt;em&gt;gpm&lt;/em&gt; engine which goes through each directories and yaml files to read data.&lt;/li&gt;
      &lt;li&gt;For &lt;strong&gt;Step 1 - Base Theme Setup&lt;/strong&gt; - #4&lt;br /&gt;
 &lt;em&gt;Tip:&lt;/em&gt; I believe this basically tells Grav that we are extending a Grav Theme class and our custom theme gets registered unto Grav core files.&lt;/li&gt;
      &lt;li&gt;For &lt;strong&gt;Step 1 - Base Theme Setup&lt;/strong&gt; - #5&lt;br /&gt;
 &lt;em&gt;Tip:&lt;/em&gt; This file just enables our theme, but later on, there are more theme configuration that uses this file.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;method-for-loading-assets-and-partial-out-the-main-indexhtml-file&quot;&gt;5. Method for loading assets and partial out the main index.html file&lt;/h3&gt;

&lt;p&gt;Now that we have setup our theme directory structures and registered our theme to Grav core files. We will continue on by:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Load assets (css, js, images) in Head and Body tags.&lt;/li&gt;
  &lt;li&gt;Introduction to using Twig templating engine.&lt;/li&gt;
  &lt;li&gt;Organize our code in &lt;code class=&quot;highlighter-rouge&quot;&gt;index.html&lt;/code&gt; file by using Grav’s &lt;code class=&quot;highlighter-rouge&quot;&gt;/templates/partials&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;ol&gt;
  &lt;li&gt;Now, we load our assets by moving HTML5 theme assets to Grav theme’s asset directory structure. Ex: &lt;code class=&quot;highlighter-rouge&quot;&gt;/css&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;/fonts&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;/images&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;/js&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;/templates&lt;/code&gt;
    &lt;ul&gt;
      &lt;li&gt;This step is a replacement for &lt;strong&gt;Step 2 - Add Bootstrap&lt;/strong&gt;&lt;br /&gt;
 We are not using Boostrap, instead we are using the HTML5’s assets.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Next is to just follow the remaining steps, &lt;strong&gt;Step 3 - Base Template&lt;/strong&gt; to &lt;strong&gt;Step 8 - Testing&lt;/strong&gt;.
    &lt;ul&gt;
      &lt;li&gt;This step pretty much explains:&lt;br /&gt;
 &lt;strong&gt;Loading assets.&lt;/strong&gt; When to use &lt;code class=&quot;highlighter-rouge&quot;&gt;theme_url&lt;/code&gt; twig variable and &lt;code class=&quot;highlighter-rouge&quot;&gt;do assets.add(&#39;&#39;)&lt;/code&gt; twig function and how it relates with &lt;strong&gt;Grav’s Asset Manager&lt;/strong&gt;.&lt;br /&gt;
 &lt;strong&gt;Introduction to basic Twig syntax.&lt;/strong&gt;&lt;br /&gt; Also, exploring some of Grav’s global twig variables.
 &lt;strong&gt;Partial out&lt;/strong&gt; the theme’s header section, footer section, and main content section to maintain a cleaner &lt;code class=&quot;highlighter-rouge&quot;&gt;base.html.twig&lt;/code&gt; file.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;breaking-our-home-page-template-file-further-by-using-modular-pages&quot;&gt;6. Breaking our home page template file further by using Modular Pages&lt;/h3&gt;

&lt;ol&gt;
  &lt;li&gt;convert static contents on template to &lt;strong&gt;Grav Content - Modular Pages&lt;/strong&gt; https://learn.getgrav.org/content
    &lt;ul&gt;
      &lt;li&gt;this is basically chopping the templates further and separating html markups from contents, taking advantage of Grav Content&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;creating-custom-fields-to-let-users-update-data-in-theme-by-using-blueprint-pages&quot;&gt;7. Creating custom fields to let users update data in theme by using Blueprint Pages&lt;/h3&gt;

&lt;ol&gt;
  &lt;li&gt;taking it further, we will install &lt;strong&gt;Grav Admin&lt;/strong&gt; plugin https://learn.getgrav.org/admin-panel/introduction&lt;/li&gt;
  &lt;li&gt;after getting around admin, we will table &lt;strong&gt;forms&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;
</description>
        <pubDate>Mon, 20 Jun 2016 13:37:35 -0700</pubDate>
        <link>http://www.wandrr.io/Getting-started-with-Grav-in-MAMP</link>
        <guid isPermaLink="true">http://www.wandrr.io/Getting-started-with-Grav-in-MAMP</guid>
        
        <category>static site</category>
        
        
      </item>
    
      <item>
        <title>Getting started with Grav on DigitalOcean</title>
        <description>&lt;h3 id=&quot;create-a-droplet&quot;&gt;create a droplet&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://learn.getgrav.org/hosting/vps/digitalocean&quot;&gt;https://learn.getgrav.org/hosting/vps/digitalocean&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;debugging-nginx-with-php5-fpm&quot;&gt;debugging nginx with php5-fpm&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;http://serverfault.com/questions/562062/nginx-with-php-fpm-got-502-bad-gateway-on-ubuntu-server-12-04&lt;/li&gt;
  &lt;li&gt;http://stackoverflow.com/questions/1706111/where-can-i-find-the-error-logs-of-nginx-using-fastcgi-and-django&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;fixing-php-502-gateway-page&quot;&gt;fixing php 502 gateway page&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;https://github.com/owncloud/core/issues/14187&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;tips-on-using-configuration-files-yaml&quot;&gt;tips on using configuration files, yaml:&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;do not change configs in &lt;code class=&quot;highlighter-rouge&quot;&gt;/system/config/system.yaml&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;/system/config/site.yaml&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;do not change configs in &lt;code class=&quot;highlighter-rouge&quot;&gt;/user/plugins/&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;rather override them in &lt;code class=&quot;highlighter-rouge&quot;&gt;user/config/system.yaml&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;user/config/site.yaml&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;user/config/plugins/myplugin.yaml&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;note: all yaml files are contructed by name spacing. Grav picks it up in a hierarchy order.&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;method-for-custom-templating-in-grav&quot;&gt;method for custom templating in Grav&lt;/h3&gt;

&lt;ol&gt;
  &lt;li&gt;ff procedure on https://learn.getgrav.org/themes to setup foundation of a website. ex. coding overall layout, header, footer, navigation.
    &lt;ul&gt;
      &lt;li&gt;this is converting psd/design comps to interactive Grav theme&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;convert static contents on template to &lt;strong&gt;Grav Content - Modular Pages&lt;/strong&gt; https://learn.getgrav.org/content
    &lt;ul&gt;
      &lt;li&gt;this is basically chopping the templates further and separating html markups from contents, taking advantage of Grav Content&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;taking it further, we will install &lt;strong&gt;Grav Admin&lt;/strong&gt; plugin https://learn.getgrav.org/admin-panel/introduction&lt;/li&gt;
  &lt;li&gt;after getting around admin, we will table &lt;strong&gt;forms&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;
</description>
        <pubDate>Fri, 27 May 2016 07:37:01 -0700</pubDate>
        <link>http://www.wandrr.io/Getting-started-with-Grav-in-Digitalocean</link>
        <guid isPermaLink="true">http://www.wandrr.io/Getting-started-with-Grav-in-Digitalocean</guid>
        
        <category>static site</category>
        
        
      </item>
    
      <item>
        <title>A Trick to Custom Post Type subpages</title>
        <description>&lt;p&gt;create a custom post type
 now to create a template for this..&lt;/p&gt;

&lt;p&gt;create a page and a subpage&lt;/p&gt;

&lt;p&gt;follow wordpress templating hierarchy
 make sure to refresh settings &amp;gt; permalinks&lt;/p&gt;
</description>
        <pubDate>Thu, 26 May 2016 04:45:17 -0700</pubDate>
        <link>http://www.wandrr.io/A-Trick-to-custom-post-type-subpages</link>
        <guid isPermaLink="true">http://www.wandrr.io/A-Trick-to-custom-post-type-subpages</guid>
        
        <category>wordpress</category>
        
        
      </item>
    
      <item>
        <title>Why is it, in general, a good idea to leave the global scope of a website as-is and never touch it?</title>
        <description>&lt;p&gt;There are various reasons why Global Variables are bad. This can include performance, name collision, or bad code readability/organization.&lt;/p&gt;

&lt;p&gt;Pointers below are from &lt;a href=&quot;http://c2.com/cgi/wiki?GlobalVariablesAreBad&quot;&gt;Global Variables Are Bad&lt;/a&gt; that were paraphrased in layman’s term.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Non-locality&lt;/strong&gt; - Code is easier to understand when parts of an app is limited to its own scope. Its easy to forget what a variable is intended for, but setting local variables in its own scope can help alleviate bad code readability/organization.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;No Access Control or Constraint Checking&lt;/strong&gt; - Any part of an app can easily get or set a global variable and this can cause an app to easily break.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Namespace pollution&lt;/strong&gt; - When setting a variable globally, they will be available in any parts of your code, thus, causing variable name collision and polluting the global namespace with unnecessary variables for certain parts of an app when executed.&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h5 id=&quot;references&quot;&gt;&lt;strong&gt;References:&lt;/strong&gt;&lt;/h5&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://c2.com/cgi/wiki?GlobalVariablesAreBad&quot;&gt;Global Variables Are Bad&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Mon, 16 May 2016 04:03:37 -0700</pubDate>
        <link>http://www.wandrr.io/Why-is-it-in-general-a-good-idea-to-leave-the-global-scope-of-a-website-as-is-and-never-touch-it</link>
        <guid isPermaLink="true">http://www.wandrr.io/Why-is-it-in-general-a-good-idea-to-leave-the-global-scope-of-a-website-as-is-and-never-touch-it</guid>
        
        <category>javascript interview questions</category>
        
        
      </item>
    
      <item>
        <title>What is &quot;use strict&quot;;? what are the advantages and disadvantages to using it?</title>
        <description>&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;&quot;use strict;&quot;&lt;/code&gt; is applied to an entire script file or to individual functions by implementing at the beginning of a file or at the beginning of &lt;em&gt;inside a function&lt;/em&gt; before anything else.&lt;/p&gt;

&lt;p&gt;Main purpose of using &lt;strong&gt;strict mode&lt;/strong&gt; is to be able to evaluate your JavaScript code and throw more errors in an effort to make your code more robust, readable, accurate and fixes compatibility issues that may arise for future JavaScript releases.&lt;/p&gt;

&lt;hr /&gt;

&lt;h5 id=&quot;references&quot;&gt;&lt;strong&gt;References:&lt;/strong&gt;&lt;/h5&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.2ality.com/2011/01/javascripts-strict-mode-summary.html&quot;&gt;JavaScript’s strict mode: a summary&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://stackoverflow.com/questions/8651415/what-is-strict-mode-and-how-is-it-used&quot;&gt;what is “strict mode” and how is it used?&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Strict_mode&quot;&gt;MDN - Strict mode&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Mon, 16 May 2016 03:57:29 -0700</pubDate>
        <link>http://www.wandrr.io/JS-Interview-Question-What-is-use-strict-what-are-the-advantages-and-disadvantages-to-using-it</link>
        <guid isPermaLink="true">http://www.wandrr.io/JS-Interview-Question-What-is-use-strict-what-are-the-advantages-and-disadvantages-to-using-it</guid>
        
        <category>javascript interview questions</category>
        
        
      </item>
    
      <item>
        <title>Why is it called a Ternary expression, what does the word &quot;Ternary&quot; indicate?</title>
        <description>&lt;p&gt;Ternary &lt;code class=&quot;highlighter-rouge&quot;&gt;?:&lt;/code&gt; is an operator that takes 3 arguments and defines a conditional expression. It is a one-lined shorthand for an &lt;strong&gt;if-then statement&lt;/strong&gt; and is also called Ternary operator or Conditional operator.&lt;/p&gt;

&lt;p&gt;An example would be:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;fooTrue&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;bar&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;fuzz&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Above code can be shortened with &lt;code class=&quot;highlighter-rouge&quot;&gt;?:&lt;/code&gt;.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;nx&quot;&gt;fooTrue&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;bar&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;fuzz&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;In JavaScript, conditional operators can be evaluated to an &lt;strong&gt;Expression&lt;/strong&gt;, not just statement.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// assigned to a variable&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;isFoo&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;fooTrue&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;yes&quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;no&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// passed as an argument in a function&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;getFoo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;fooTrue&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;yes&quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;no&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;hr /&gt;

&lt;h5 id=&quot;references&quot;&gt;&lt;strong&gt;References:&lt;/strong&gt;&lt;/h5&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Ternary_operation&quot;&gt;Wiki - Ternary operation&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Expressions_and_Operators#Conditional_(ternary)_operator&quot;&gt;MDN - Expressions and Operators: Conditional (ternary) operator&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://stackoverflow.com/questions/6259982/how-to-use-the-ternary-operator-in-javascript&quot;&gt;How to use the ?: (ternary) operator in JavaScript&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Thu, 05 May 2016 09:22:31 -0700</pubDate>
        <link>http://www.wandrr.io/JS-Interview-Question-Why-is-it-called-a-Ternary-expression-what-does-the-word-Ternary-indicate</link>
        <guid isPermaLink="true">http://www.wandrr.io/JS-Interview-Question-Why-is-it-called-a-Ternary-expression-what-does-the-word-Ternary-indicate</guid>
        
        <category>javascript interview questions</category>
        
        
      </item>
    
      <item>
        <title>Explain the same-origin policy with regards to JavaScript</title>
        <description>&lt;p&gt;Same-origin policy restricts scripts from other websites to be executed on your website. It is an important security measure as it isolates known malicious attacks such as Cross Site Scripting.&lt;/p&gt;

&lt;p&gt;In two pages with url, an &lt;strong&gt;origin&lt;/strong&gt; is defined if its &lt;strong&gt;protocol&lt;/strong&gt;, &lt;strong&gt;host&lt;/strong&gt;, and &lt;strong&gt;port&lt;/strong&gt; are the same for both pages.&lt;/p&gt;

&lt;p&gt;An example via &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Security/Same-origin_policy&quot;&gt;MDN - Same-origin policy&lt;/a&gt;:
&lt;br /&gt;
Compare &lt;code class=&quot;highlighter-rouge&quot;&gt;http://store.company.com/dir/page.html&lt;/code&gt; to the table below.&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;URL&lt;/th&gt;
      &lt;th&gt;Outcome&lt;/th&gt;
      &lt;th&gt;Reason&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;http://store.company.com/dir2/other.html&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Success&lt;/td&gt;
      &lt;td&gt;-&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;http://store.company.com/dir/inner/another.html&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Success&lt;/td&gt;
      &lt;td&gt;-&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;https://store.company.com/secure.html&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Failure&lt;/td&gt;
      &lt;td&gt;Different protocol&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;http://store.company.com:81/dir/etc.html&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Failure&lt;/td&gt;
      &lt;td&gt;Different port&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;http://news.company.com/dir/other.html&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Failure&lt;/td&gt;
      &lt;td&gt;Different host&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;There is also a work around for subdomains. The last example above &lt;code class=&quot;highlighter-rouge&quot;&gt;http://news.company.com/dir/other.html&lt;/code&gt; can be a &lt;em&gt;Success&lt;/em&gt; by setting &lt;code class=&quot;highlighter-rouge&quot;&gt;document.domain&lt;/code&gt; to our parent domain &lt;code class=&quot;highlighter-rouge&quot;&gt;company.com&lt;/code&gt;.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;domain&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;company.com&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;For details on changing origin, refer to &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Security/Same-origin_policy#Changing_origin&quot;&gt;MDN - Same-origin policy: Changing origin&lt;/a&gt;.&lt;/p&gt;

&lt;hr /&gt;

&lt;h5 id=&quot;references&quot;&gt;&lt;strong&gt;References:&lt;/strong&gt;&lt;/h5&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Security/Same-origin_policy&quot;&gt;MDN - Same-origin policy&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://stackoverflow.com/questions/11474336/same-origin-policy-in-layman-terms&quot;&gt;Same-origin Policy in layman terms&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Thu, 05 May 2016 03:11:44 -0700</pubDate>
        <link>http://www.wandrr.io/JS-Interview-Question-Explain-the-same-origin-policy-with-regards-to-JavaScript</link>
        <guid isPermaLink="true">http://www.wandrr.io/JS-Interview-Question-Explain-the-same-origin-policy-with-regards-to-JavaScript</guid>
        
        <category>javascript interview questions</category>
        
        
      </item>
    
      <item>
        <title>What is the difference between == and ===?</title>
        <description>&lt;p&gt;JavaScript has two sets of &lt;strong&gt;&lt;em&gt;Equality operators&lt;/em&gt;&lt;/strong&gt; archived under &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Comparison_Operators&quot;&gt;Comparison operators&lt;/a&gt;:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;equality &lt;code class=&quot;highlighter-rouge&quot;&gt;==&lt;/code&gt; &amp;amp; inequality &lt;code class=&quot;highlighter-rouge&quot;&gt;!=&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;strict equality &lt;code class=&quot;highlighter-rouge&quot;&gt;===&lt;/code&gt; &amp;amp; strict inequality &lt;code class=&quot;highlighter-rouge&quot;&gt;!==&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;We use these operators when comparing 2 operands. They differ on what type of operands are being compared to against.&lt;/p&gt;

&lt;p&gt;For example, equality &lt;code class=&quot;highlighter-rouge&quot;&gt;==&lt;/code&gt; or inequality &lt;code class=&quot;highlighter-rouge&quot;&gt;!=&lt;/code&gt; signs compares 2 values without type conversion. 
&lt;br /&gt;
While strict equality &lt;code class=&quot;highlighter-rouge&quot;&gt;===&lt;/code&gt; or strict inequality &lt;code class=&quot;highlighter-rouge&quot;&gt;!==&lt;/code&gt; signs compares 2 values with type conversion.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;s1&quot;&gt;&#39;1&#39;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// true &amp;lt; all it matters is the value&lt;/span&gt;
&lt;span class=&quot;s1&quot;&gt;&#39;1&#39;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// false &amp;lt; they are not the same type&lt;/span&gt;

&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// true&lt;/span&gt;
&lt;span class=&quot;s1&quot;&gt;&#39;1&#39;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// true&lt;/span&gt;

&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// false&lt;/span&gt;
&lt;span class=&quot;s1&quot;&gt;&#39;1&#39;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// false&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;hr /&gt;

&lt;h5 id=&quot;references&quot;&gt;&lt;strong&gt;References:&lt;/strong&gt;&lt;/h5&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://stackoverflow.com/questions/359494/does-it-matter-which-equals-operator-vs-i-use-in-javascript-comparisons&quot;&gt;Does it matter which equals operator (== vs ===) I use in JavaScript comparisons?&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Comparison_Operators&quot;&gt;Comparison operators&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Tue, 03 May 2016 07:00:07 -0700</pubDate>
        <link>http://www.wandrr.io/JS-Interview-Question-Difference-between-double-and-triple-equals</link>
        <guid isPermaLink="true">http://www.wandrr.io/JS-Interview-Question-Difference-between-double-and-triple-equals</guid>
        
        <category>javascript interview questions</category>
        
        
      </item>
    
      <item>
        <title>A Parallax Encounter</title>
        <description>&lt;p&gt;I’ve always wanted to create a one-page website with an awesome Parallax Scrolling. Most of my recent blog posts are about JavaScript, App Development, CMS and rarely touched the topic of graphics and parallax. So for this post, I’ll be blogging my thought-process on exploring Parallax Scrolling.&lt;/p&gt;

&lt;p&gt;My initial thoughts when I looked at examples of websites with Parallax Scrolling is &lt;em&gt;‘its not just CSS and JS coding, its also about Graphics as well’&lt;/em&gt; and honestly, that first step is what hinders me from building Parallax Scrolling website, not unless I have a Graphic Designer to provide me assets and instructions.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;Before approaching a project, I usually read a couple of articles first or another approach would be, I start building a project and if I’d get stuck, I then start researching more about it. Since I’ve had experience with website layouts, for this project, the latter approach is what I used.&lt;/p&gt;

&lt;p&gt;I then started doing research on Parallax Scrolling and found this article:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.vandelaydesign.com/parallax-scrolling-best-practices-examples-and-tutorials/&quot;&gt;The Ultimate Guide to Parallax Scrolling: Best Practices and Tutorials&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;From the article above, I will only note applicable concepts that fits to my Parallax website project.&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;best-practices&quot;&gt;Best Practices&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;fallback&lt;/strong&gt;: I would suggest developing a fallback method which can work in all browsers even without animation effects. At the very least make sure visitors can still browse the static website.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;simplify&lt;/strong&gt;: Parallax scrolling can go from cute and fun to overly-complicated with just a few additions. Make the parallax animation(s) work for your content and not the other way around.&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;good-examples-of-parallax-design&quot;&gt;Good Examples of Parallax Design&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Generally speaking a great parallax layout should tell a story.&lt;/strong&gt;&lt;br /&gt;
I really like the example on Movement of Data which behaves like a parallax infographic. The site animates both up/down and left/right as you scroll through the content. It’s all very informative and the graphics help to tell the story rather than distract from it. While the effects are not extraordinary they do provide an efficacious storytelling method.&lt;/p&gt;

&lt;p&gt;Another great parallax design can be found on BAKE Agency. The homepage animates in a circular fashion rotating through different sections of content. It’s not an exact parallax effect but it does incorporate the illusion of depth as the user moves through a line of sight. The reason I’d mark this as a great example is because it’s usable yet still creative and unique with a stylish implementation.&lt;/p&gt;

&lt;p&gt;The goal of a parallax website design is to impress visitors while still maintaining all the customary statues of unofficial UX design law. Great parallax websites convey their message in an easily-consumed format while contributing to the digital art form. Motion is a big part of the design process so it’s important to think about how the page should animate, and if possible have a reason for that choice.&lt;/p&gt;

&lt;p&gt;The greatest parallax websites make me feel like I’m interacting with the work of a professional designer. Look through the many examples I’ve provided in this guide and find the sites that make you feel comfortable. These websites can offer the best prototypical solutions for whatever parallax effect you’re trying to create.&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;bad-examples-of-parallax-design&quot;&gt;Bad Examples of Parallax Design&lt;/h3&gt;

&lt;p&gt;My first frustrating example is on Make Your Money Matter which is an informational page about Credit Unions. Let me state that I love their message and graphic design. The page itself is actually very well crafted. However in regards to user experience the page is quite limiting and uncomfortable. You can only scroll with the mousewheel or by clicking &amp;amp; dragging the browser’s scrollbar.&lt;/p&gt;

&lt;p&gt;This means the arrow keys don’t work and the page up/down keys also don’t work. To make things more confusing there aren’t any clickable links to slide around the different page sections. The only way to navigate is by tediously scrolling with the scrollbar and perniciously feeding that arthritis. The whole experience feels imprisoning and while the design is fantastic it simply cannot subdue such an annoying UX problem.&lt;/p&gt;

&lt;p&gt;A polish website for the children network presents a side-scrolling parallax design with one glaring problem: the whole page is made up of images. Naturally you’ll ask “even the text?”. Yes the text itself, which could have been easily typed into HTML, was instead created with images. I was so terrified at this realization that evening I had to sleep with a nightlight.&lt;/p&gt;

&lt;p&gt;The website animation is actually quite nice and even though I’m not able to read anything because Google can’t translate images, I have a feeling this site would be in my great examples list if it weren’t so textually-impaired. When creating parallax designs stay away from Flash animation and be sure to use images only for images. Actually that advice carries over into every type of website, parallax or not. You’ll spare your visitors quite a few sleepless nights questioning their own design ethics and sanity.&lt;/p&gt;

&lt;p&gt;To finish up this section let’s go over just one more sample of difficult UX design. The website for South Australian Roadtrips has a quaint parallax slider with a few different pieces of content. While the text isn’t created using images you’ll still have a difficult time selecting or interacting with the text because it appears as part of the slideshow. This means you can’t easily copy/paste locations to search for them in Google.&lt;/p&gt;

&lt;p&gt;But really my problem with this layout is that it’s too confusing. There is a top navigation with some buttons that animate between slides but they don’t feel smooth. The animation is slow and it seems like the content would be presented better without animated effects. I’m sure not everyone will agree with me but it brings us back to the concept of simplicity. Make the parallax animation(s) work for your content and not the other way around.&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;techniques-for-parallax-design&quot;&gt;Techniques for Parallax Design&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Nice Single Page Parallax Design&lt;/li&gt;
  &lt;li&gt;Background Parallax Sliding&lt;/li&gt;
  &lt;li&gt;Horizontal Parallax Scrolling&lt;/li&gt;
  &lt;li&gt;Graphic Animation&lt;/li&gt;
  &lt;li&gt;Motion-Sensitive Animation&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;tools&quot;&gt;Tools&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;JS Parallax Plugins&lt;/li&gt;
  &lt;li&gt;Free Code Snippets&lt;/li&gt;
  &lt;li&gt;Parallax Scrolling Design Inspiration&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;implementing-parallax-scrolling&quot;&gt;Implementing Parallax Scrolling&lt;/h3&gt;

&lt;p&gt;The solution I came up with was to use &lt;a href=&quot;http://prinzhorn.github.io/skrollr/&quot;&gt;skrollr&lt;/a&gt;. This JS Parallax plugin seem to have alot of Stars on github.com&lt;/p&gt;
</description>
        <pubDate>Thu, 07 Apr 2016 08:52:13 -0700</pubDate>
        <link>http://www.wandrr.io/A-Parallax-Encounter</link>
        <guid isPermaLink="true">http://www.wandrr.io/A-Parallax-Encounter</guid>
        
        <category>parallax scrolling</category>
        
        
      </item>
    
      <item>
        <title>Simple instructions for Drupal Minor Updates</title>
        <description>&lt;p&gt;This blog post tackles implementing &lt;strong&gt;Minor Updates&lt;/strong&gt; on Drupal websites. Its a short, simple, and pretty straight-forward instructions.&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;references-and-tools&quot;&gt;References and Tools&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.drupal.org/node/1223018&quot;&gt;Update procedure (minor version change)&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://tylerfrankenstein.com/code/use-drush-export-import-drupal-mysql-database-dump-file&quot;&gt;Use Drush to Export/Import a Drupal MySQL Database Dump File&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://drushcommands.com&quot;&gt;Drush Commands&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;two-ways-to-check-for-drupal-update-status&quot;&gt;Two ways to check for Drupal Update Status&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;via Website GUI
    &lt;ul&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;http://www.website-name.com/admin/reports/updates&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Reports &amp;gt; Available Updates&lt;/code&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;via CLI
    &lt;ul&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;drush pm-updatestatus&lt;/code&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;preparation-before-updating-a-drupal-website&quot;&gt;Preparation before Updating a Drupal website&lt;/h3&gt;

&lt;ol&gt;
  &lt;li&gt;Backup database via Drush
    &lt;ul&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;drush sql-dump &amp;gt; name_of_site-date.sql&lt;/code&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Backup core files by compressing directory containing drupal core files
    &lt;ul&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;tar -czf site_name_date.tar.gz /path_to_site_directory/&lt;/code&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Show a report of available minor updates to Drupal core and contrib projects.
    &lt;ul&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;drush pm-updatestatus&lt;/code&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Backup &lt;code class=&quot;highlighter-rouge&quot;&gt;.htaccess&lt;/code&gt; by making a copy and dumping outside of drupal website directory
    &lt;ul&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;cp .htaccess ../&lt;/code&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;implementing-minor-updates-on-drupal-sites&quot;&gt;Implementing Minor Updates on Drupal sites&lt;/h3&gt;

&lt;p&gt;Only &lt;em&gt;Security Updates&lt;/em&gt; of core and modules will be performed. Updating Modules with &lt;code class=&quot;highlighter-rouge&quot;&gt;Update available&lt;/code&gt; message may conflict with other module or drupal core version.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;cd to drupal website directory and run &lt;code class=&quot;highlighter-rouge&quot;&gt;drush up drupal&lt;/code&gt; to update drupal core&lt;/li&gt;
  &lt;li&gt;run &lt;code class=&quot;highlighter-rouge&quot;&gt;drush pm-updatestatus&lt;/code&gt; again to check for other module updates&lt;/li&gt;
  &lt;li&gt;run &lt;code class=&quot;highlighter-rouge&quot;&gt;drush up &amp;lt;name of module&amp;gt;&lt;/code&gt; to update a module&lt;/li&gt;
&lt;/ol&gt;
</description>
        <pubDate>Fri, 01 Apr 2016 05:26:55 -0700</pubDate>
        <link>http://www.wandrr.io/Simple-Instructions-for-Drupal-Minor-Updates</link>
        <guid isPermaLink="true">http://www.wandrr.io/Simple-Instructions-for-Drupal-Minor-Updates</guid>
        
        <category>drupal</category>
        
        
      </item>
    
  </channel>
</rss>
