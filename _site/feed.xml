<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>wandrr.io</title>
    <description>This is a blog about travel and tech.
</description>
    <link>http://www.wandrr.io/</link>
    <atom:link href="http://www.wandrr.io/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Fri, 04 Mar 2016 13:14:46 -0800</pubDate>
    <lastBuildDate>Fri, 04 Mar 2016 13:14:46 -0800</lastBuildDate>
    <generator>Jekyll v2.5.3</generator>
    
      <item>
        <title>Beginning Small Web App Development with AngularJS</title>
        <description>&lt;p&gt;This is a continuation of my previous blog post &lt;a href=&quot;/Beginning-mobile-app-development-journey/&quot;&gt;Beginning Mobile App Development Journey&lt;/a&gt; as I further explore Hybrid (Mobile and Web) App Development. On my previous blog post, I have successfully installed PhoneGap and was able to run the default PhoneGap app on my Android phone.&lt;/p&gt;

&lt;p&gt;For this blog post, I am going to be using AngularJS as my go-to JS Framework for prototyping, developing small apps, and testing with a Front-end framework: &lt;a href=&quot;http://foundation.zurb.com/apps.html&quot;&gt;Zurb Foundation for Apps&lt;/a&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;why-use-zurb-foundation-for-apps-why-not-build-an-app-from-scratch&quot;&gt;Why use Zurb Foundation for Apps? Why not build an app from scratch?&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;To avoid spending time on developing the front-end architectural structure of directories and files.&lt;/li&gt;
  &lt;li&gt;To avoid re-coding common JS components, such as Carousel, Modal, etc.&lt;/li&gt;
  &lt;li&gt;To avoid re-coding CSS components, such as Grid system, consistent style of typography, buttons, utilities, etc.&lt;/li&gt;
  &lt;li&gt;To produce a quick prototype to showcase a prospect client.&lt;/li&gt;
  &lt;li&gt;To use prototype and further develop into a production app.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Above are reasons base on my personal opinion. There are different scenarios and situations why we use certain techonology and practice certain methodology. Each company comprise of their own development workflow that fits their business process and be able to produce product base on business requirements.&lt;/p&gt;

&lt;p&gt;Following link is a solid and comprehensive response to a Quora question regarding which JavaScript Framework should we spend time learning which, I think, it doesn’t just apply to JavaScript Frameworks but how we approach a project: &lt;a href=&quot;https://www.quora.com/Im-a-bit-lost-in-JavaScript-framework-hell-Should-I-spend-time-learning-backbone-js-or-ember-js-or-can-js-or-angular-js/answer/Michael-Mullany-1?srid=Mz0n&quot;&gt;I’m a bit lost in JavaScript framework hell. Should I spend time learning backbone.js or ember.js or can.js or angular.js?&lt;/a&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h5 id=&quot;further-reading&quot;&gt;&lt;strong&gt;Further reading&lt;/strong&gt;&lt;/h5&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.fromdev.com/2015/06/best-books-for-angularjs.html&quot;&gt;Best books for AngularJS&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://shop.oreilly.com/product/0636920040156.do&quot;&gt;Frontend Architecture for Design Systems By Micah Godbolt&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Fri, 04 Mar 2016 02:43:10 -0800</pubDate>
        <link>http://www.wandrr.io/Beginning-Small-Web-App-Development-with-AngularJS</link>
        <guid isPermaLink="true">http://www.wandrr.io/Beginning-Small-Web-App-Development-with-AngularJS</guid>
        
        <category>javascript</category>
        
        <category>App Development</category>
        
        
      </item>
    
      <item>
        <title>Vanilla JavaScript Router and Templating</title>
        <description>&lt;p&gt;I’m working on a simple app that requires a vanilla JavaScript routing system. Did some readings and it turns out there are various ways we can implement a vanilla JS routing system, but I will only mention 3 common methods:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Using &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Window.onhashchange&quot;&gt;onhashchange event&lt;/a&gt; and &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Window.onload&quot;&gt;onload event&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;I believe is the simplest method so far.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Using &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/History_API&quot;&gt;HTML5 History API&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;Still buggy for cross-browser compatibility&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Using small JS plugin called &lt;a href=&quot;https://github.com/browserstate/history.js&quot;&gt;History.js&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;This extends HTML5 History API and fixes cross-browser compatibility issues.&lt;/li&gt;
      &lt;li&gt;More info on their &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Window.onload&quot;&gt;Github Gist - Intelligent State Handling&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;For this app project, I will use the first method. Thanks to:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://joakim.beng.se/blog/posts/a-javascript-router-in-20-lines.html&quot;&gt;Joakim Carlstein’s - A JavaScript router in 20 lines&lt;/a&gt; and&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://ejohn.org/blog/javascript-micro-templating/&quot;&gt;John Resig’s - JavaScript Micro-Templating&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;why-go-this-route&quot;&gt;Why go this Route?&lt;/h3&gt;

&lt;p&gt;Both each scripts only contains 20 lines of code, overall, its about 40 lines of code compare to using a 3rd-party JS plugin. I wanted to keep my code simple and understanding these scripts source code is easy. Its also a good way to learn Routing and Templating system as well. At the moment, I am not concern about cross-browser compatibility and other issues that may arise.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;For complete example:&lt;/strong&gt;&lt;/p&gt;

&lt;p data-height=&quot;268&quot; data-theme-id=&quot;20698&quot; data-slug-hash=&quot;RaNGvZ&quot; data-default-tab=&quot;result&quot; data-user=&quot;rlynjb&quot; class=&quot;codepen&quot;&gt;See the Pen &lt;a href=&quot;http://codepen.io/rlynjb/pen/RaNGvZ/&quot;&gt;vanilla javascript routing&lt;/a&gt; by rlynjb (&lt;a href=&quot;http://codepen.io/rlynjb&quot;&gt;@rlynjb&lt;/a&gt;) on &lt;a href=&quot;http://codepen.io&quot;&gt;CodePen&lt;/a&gt;.&lt;/p&gt;
&lt;script async=&quot;&quot; src=&quot;//assets.codepen.io/assets/embed/ei.js&quot;&gt;&lt;/script&gt;

&lt;hr /&gt;

&lt;h5 id=&quot;update-03-04-2016&quot;&gt;&lt;strong&gt;Update: 03-04-2016&lt;/strong&gt;&lt;/h5&gt;

&lt;h3 id=&quot;delegated-events---click-event-doesnt-work-on-dynamically-generated-elements&quot;&gt;Delegated Events - Click event doesn’t work on dynamically generated elements&lt;/h3&gt;

&lt;p&gt;This was an issue I’ve come across while using this script. When binding a &lt;code&gt;click&lt;/code&gt; event unto a dynamically generated element, we need to delegate that certain element to its parent element that holds the dynamically generated chiild elements.&lt;/p&gt;

&lt;p&gt;Code would look as follows, using jQuery &lt;code&gt;on&lt;/code&gt; event:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;#view&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;on&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;click&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;button#shuffle&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;#view&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;html&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getData&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;bind&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h5 id=&quot;references&quot;&gt;&lt;strong&gt;References:&lt;/strong&gt;&lt;/h5&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://stackoverflow.com/questions/6658752/click-event-doesnt-work-on-dynamically-generated-elements&quot;&gt;Click event doesn’t work on dynamically generated elements&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://stackoverflow.com/questions/8827430/event-delegation-vs-direct-binding-when-adding-complex-elements-to-a-page&quot;&gt;event delegation vs direct binding when adding complex elements to a page&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Mon, 29 Feb 2016 04:42:24 -0800</pubDate>
        <link>http://www.wandrr.io/Vanilla-Javascript-Router-and-Templating</link>
        <guid isPermaLink="true">http://www.wandrr.io/Vanilla-Javascript-Router-and-Templating</guid>
        
        <category>javascript</category>
        
        
      </item>
    
      <item>
        <title>Beginning Mobile App Development Journey</title>
        <description>&lt;p&gt;Consider this blog post as my notes on learning how to setup PhoneGap/Cordova locally, build and test via PhoneGap Build.
If you want to know more about its history and detailed instructions, refer to this book:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.packtpub.com/application-development/phonegap-3x-mobile-application-development-hotshot&quot;&gt;Packtpub: PhoneGap Mobile Application Development Hotshot&lt;/a&gt;
&lt;br /&gt;
&lt;img src=&quot;https://d1ldz4te4covpm.cloudfront.net/sites/default/files/imagecache/ppv4_main_book_cover/7925OS.jpg&quot; /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;I’ve been searching for a Mobile App Framework on which I can use languages I’m comfortable with (HTML, CSS, JavaScript) and also will be able to deploy on various devices utilizing native device sensors and functionalities.&lt;/p&gt;

&lt;p&gt;I know performance will be an issue when using Mobile App Framework, but considering our project scope, it will not be an issue. Given the timeframe and number of developers, using Mobile App Framework sounds proper.&lt;/p&gt;

&lt;p&gt;Here are also some resources &lt;a href=&quot;http://mobile-frameworks-comparison-chart.com/&quot;&gt;Mobile Frameworks Comparison Chart&lt;/a&gt; and frameworks we’ve considered that I think worth noting: &lt;a href=&quot;http://appgyver.com&quot;&gt;Appgyver&lt;/a&gt;, &lt;a href=&quot;https://cordova.apache.org/&quot;&gt;Cordova&lt;/a&gt;, &lt;a href=&quot;http://phonegap.com/&quot;&gt;Phonegap&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;why-choose-phonegap&quot;&gt;Why choose PhoneGap?&lt;/h3&gt;

&lt;p&gt;It’s opensouce MIT license! and since Cordova powers PhoneGap, I might as well take advantage of the additional features that PhoneGap offers: PhoneGap Build! (this is to avoid installing and configuring any platform SDKs locally)&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;The following steps are a combination of instructions from mentioned book above and based off of my experience configuring my local development and using 3rd party cloud base services.&lt;/p&gt;

&lt;h3 id=&quot;requirements-and-important-initial-step&quot;&gt;Requirements and important initial step&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Installation&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Install node.js
    &lt;ul&gt;
      &lt;li&gt;From experience, node.js versions and path can get complicated, I recommended installing node.js via &lt;code&gt;nvm&lt;/code&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;install PhoneGap (includes PhoneGap CLI)
    &lt;ul&gt;
      &lt;li&gt;Adding the PhoneGap CLI enables the use of Adobe’s remote building capabilities, which means you don’t need to have the platform SDKs installed in order to build your app. (There are caveats here; it is best to refer to the PhoneGap Build website at http://build.phonegap.com for more information.) Installing PhoneGap CLI will also install Cordova CLI, since PhoneGap is powered by Cordova engine.&lt;/li&gt;
      &lt;li&gt;Install via npm: &lt;code&gt;sudo npm install -g phonegap&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;Check if installed: &lt;code&gt;phonegap --version&lt;/code&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Starting a project&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Create first project
    &lt;ul&gt;
      &lt;li&gt;Contains:
        &lt;ul&gt;
          &lt;li&gt;Our code&lt;/li&gt;
          &lt;li&gt;Other platform-specific code&lt;/li&gt;
          &lt;li&gt;Other assets required to generate an app ready for you to run on a simulator or device&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Manage project’s platforms&lt;/li&gt;
  &lt;li&gt;Manage project’s plugins&lt;/li&gt;
  &lt;li&gt;Build my project&lt;/li&gt;
  &lt;li&gt;Deploy project to the simulator/device&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Additional notes on Build and Deploy&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;When testing our app on a simulator, we either need to install platform SDKs if we where to test it locally.&lt;br /&gt;
To avoid installing and configuring such SDKs:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;We can rely on &lt;a href=&quot;http://app.phonegap.com/&quot;&gt;PhoneGap Build&lt;/a&gt; to build the project and&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://chrome.google.com/webstore/detail/ripple-emulator-beta/geelfhphabnejjhdalkjhgipohgpdnoc?hl=en&quot;&gt;Ripple Emulator&lt;/a&gt; or &lt;a href=&quot;http://app.phonegap.com/&quot;&gt;The PhoneGap Developer App&lt;/a&gt; for simulating on different OS (Android, iOS, Blackberry, Windows).&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;But a Mac is required to generate the certificates necessary for iOS app signing (even with PhoneGap Build) and is definitely required for deployment to the App Store. The same is true for Windows; you need to deploy to the App Store from Windows only.&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;create-first-project&quot;&gt;Create first project&lt;/h3&gt;

&lt;p&gt;To create a project with PhoneGap CLI, &lt;code&gt;cd&lt;/code&gt; to your projects directory (ex. &lt;code&gt;/www&lt;/code&gt; or &lt;code&gt;/home&lt;/code&gt;)&lt;/p&gt;

&lt;p&gt;Run: &lt;code&gt;phonegap create ./PGHelloWorld com.phonegaphotshot.pghelloworld PGHelloWorld&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;The first parameter indicates that a project should be created in a directory specified by the second parameter. The third parameter is the project ID, which must be unique and should be specified in reverse domain-name order. The final parameter is the name of the project.&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;manage-projects-platforms&quot;&gt;Manage project’s platforms&lt;/h3&gt;

&lt;p&gt;In this step, we will specify the platforms that the projects support. Besides adding platforms, we can also remove, update, and list out the supported platforms.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;To add platform:&lt;/strong&gt; &lt;code&gt;cordova platform add platform-name&lt;/code&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code&gt;ios&lt;/code&gt;: The iOS platform&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;android&lt;/code&gt;: The Android platform&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;blackberry10&lt;/code&gt;: The BlackBerry 10 OS platform&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;firefoxos&lt;/code&gt;: The Firefox OS platform&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;wp7&lt;/code&gt;: The Windows Phone 7 platform&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;wp8&lt;/code&gt;: The Windows Phone 8 platform&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;windows 8&lt;/code&gt;: The Windows 8 platform&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Listing the available platforms:&lt;/strong&gt; &lt;code&gt;cordova platform ls&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Removing platforms:&lt;/strong&gt; &lt;code&gt;cordova platform remove platform-name&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Updating platforms:&lt;/strong&gt; &lt;code&gt;cordova platform update platform-name&lt;/code&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;manage-projects-plugins&quot;&gt;Manage project’s plugins&lt;/h3&gt;

&lt;p&gt;Plugins are the mechanism Cordova uses to provide native functionality to your app. 
Plugins can be managed using either the Cordova CLI or the PhoneGap CLI (which ends up using the Cordova CLI in the background). The important detail to remember when you use the PhoneGap CLI is that plugins must be installed locally (not remotely).&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;To install plugins:&lt;/strong&gt; &lt;code&gt;phonegap local plugin add plugin-name&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://cordova.apache.org/docs/en/dev/cordova/plugins/pluginapis.html#Plugin%20APIsZ&quot;&gt;Official Documentation: Cordova - Plugin APIs&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;phonegap local plugin add org.apache.cordova.device&lt;/li&gt;
  &lt;li&gt;phonegap local plugin add org.apache.cordova.network-information&lt;/li&gt;
  &lt;li&gt;phonegap local plugin add org.apache.cordova.battery-status&lt;/li&gt;
  &lt;li&gt;phonegap local plugin add org.apache.cordova.device-motion&lt;/li&gt;
  &lt;li&gt;phonegap local plugin add org.apache.cordova.device-orientation&lt;/li&gt;
  &lt;li&gt;phonegap local plugin add org.apache.cordova.geolocation&lt;/li&gt;
  &lt;li&gt;phonegap local plugin add org.apache.cordova.camera&lt;/li&gt;
  &lt;li&gt;phonegap local plugin add org.apache.cordova.media&lt;/li&gt;
  &lt;li&gt;phonegap local plugin add org.apache.cordova.media-capture&lt;/li&gt;
  &lt;li&gt;phonegap local plugin add org.apache.cordova.file&lt;/li&gt;
  &lt;li&gt;phonegap local plugin add org.apache.cordova.file-transfer&lt;/li&gt;
  &lt;li&gt;phonegap local plugin add org.apache.cordova.dialogs&lt;/li&gt;
  &lt;li&gt;phonegap local plugin add org.apache.cordova.vibration&lt;/li&gt;
  &lt;li&gt;phonegap local plugin add org.apache.cordova.contacts&lt;/li&gt;
  &lt;li&gt;phonegap local plugin add org.apache.cordova.globalization&lt;/li&gt;
  &lt;li&gt;phonegap local plugin add org.apache.cordova.splashscreen&lt;/li&gt;
  &lt;li&gt;phonegap local plugin add org.apache.cordova.inappbrowser&lt;/li&gt;
  &lt;li&gt;phonegap local plugin add org.apache.cordova.console&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Listing plugins:&lt;/strong&gt; &lt;code&gt;phonegap local plugin list&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Removing plugins:&lt;/strong&gt; &lt;code&gt;phonegap local plugin remove plugin-name&lt;/code&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;building-our-project&quot;&gt;Building our project&lt;/h3&gt;

&lt;p&gt;Building involves compiling all the native code using the platform SDKs on your machine and then packaging your HTML, JavaScript, and CSS (and any assets) with this code so that it can be deployed to a simulator or device.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;To build project remotely via PhoneGap Build:&lt;/strong&gt;&lt;br /&gt;
&lt;code&gt;phonegap remote build platform-name&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Building remotely using PhoneGap Build is a little different from building locally since you may not see the results of the build instantly; the service will build the code as soon as it has a chance. The only way to verify that things went as expected is to log on to your account at &lt;a href=&quot;https://build.phonegap.com/&quot;&gt;https://build.phonegap.com/&lt;/a&gt; and verify the results.&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;deploy-project-to-a-simulatordevice&quot;&gt;Deploy project to a simulator/device&lt;/h3&gt;

&lt;p&gt;Once we built a project, next is to &lt;strong&gt;Test it&lt;/strong&gt;.
To do this, you can deploy the code to a simulator or deploy the code to a device. So far, I’ve only used &lt;a href=&quot;https://chrome.google.com/webstore/detail/ripple-emulator-beta/geelfhphabnejjhdalkjhgipohgpdnoc?hl=en&quot;&gt;Ripple Emulator&lt;/a&gt; to debug and simulate.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;To get started with Ripple Emulator&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Install Ripple Emulator&lt;/li&gt;
  &lt;li&gt;Enable it&lt;/li&gt;
  &lt;li&gt;Run &lt;code&gt;phonegap serve&lt;/code&gt; to retrieve address&lt;/li&gt;
  &lt;li&gt;Enter local address to Ripple Emulator&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Fri, 26 Feb 2016 05:14:59 -0800</pubDate>
        <link>http://www.wandrr.io/Beginning-mobile-app-development-journey</link>
        <guid isPermaLink="true">http://www.wandrr.io/Beginning-mobile-app-development-journey</guid>
        
        <category>mobile development</category>
        
        
      </item>
    
      <item>
        <title>What is the difference between == and ===?</title>
        <description>&lt;p&gt;JavaScript has two sets of &lt;strong&gt;&lt;em&gt;Equality operators&lt;/em&gt;&lt;/strong&gt; archived under &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Comparison_Operators&quot;&gt;Comparison operators&lt;/a&gt;:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;equality &lt;code&gt;==&lt;/code&gt; &amp;amp; inequality &lt;code&gt;!=&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;strict equality &lt;code&gt;===&lt;/code&gt; &amp;amp; strict inequality &lt;code&gt;!==&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;We use these operators when comparing 2 operands. They differ on what type of operands are being compared to against.&lt;/p&gt;

&lt;hr /&gt;

&lt;h5 id=&quot;references&quot;&gt;&lt;strong&gt;References:&lt;/strong&gt;&lt;/h5&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://stackoverflow.com/questions/359494/does-it-matter-which-equals-operator-vs-i-use-in-javascript-comparisons&quot;&gt;Does it matter which equals operator (== vs ===) I use in JavaScript comparisons?&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Comparison_Operators&quot;&gt;Comparison operators&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Tue, 23 Feb 2016 07:15:38 -0800</pubDate>
        <link>http://www.wandrr.io/Difference-between-double-and-triple-equals</link>
        <guid isPermaLink="true">http://www.wandrr.io/Difference-between-double-and-triple-equals</guid>
        
        <category>javascript</category>
        
        <category>interview question</category>
        
        
      </item>
    
      <item>
        <title>Difference between document load event and document ready event?</title>
        <description>&lt;p&gt;&lt;code&gt;window.onload&lt;/code&gt; event fires only when contents (images, css, scripts, other 3rd party sources), including the DOM has finished loading.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;$(document).ready()&lt;/code&gt; event fires when the HTML DOM has finished loading. It also fires earlier than &lt;code&gt;window.onload&lt;/code&gt;. It will not wait for contents to load.&lt;/p&gt;

&lt;hr /&gt;

&lt;h5 id=&quot;references&quot;&gt;&lt;strong&gt;References:&lt;/strong&gt;&lt;/h5&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://stackoverflow.com/questions/3698200/window-onload-vs-document-ready&quot;&gt;window.onload vs $(document).ready()&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Tue, 23 Feb 2016 07:08:26 -0800</pubDate>
        <link>http://www.wandrr.io/JS-Interview-Question-Difference-between-document-load-event-and-document-ready-event</link>
        <guid isPermaLink="true">http://www.wandrr.io/JS-Interview-Question-Difference-between-document-load-event-and-document-ready-event</guid>
        
        <category>javascript</category>
        
        <category>interview question</category>
        
        
      </item>
    
      <item>
        <title>Why is extending built-in JavaScript objects not a good idea?</title>
        <description>&lt;p&gt;From what I understand, extending built-in JavaScript objects is most likely an opinion-base rather than facts.
Before delving into its reasons why its not a good idea to extend built-in JS objects, I will tackle its purpose first to gain an understanding how it works and why its controversial.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;JS comes with essential built-in objects which we can utilize for text, numbers, boolean, data, dates, and much more. As we become familiar with these built-in objects, we’ll find ourselves wanting to do more than what JS provides, that’s where we create our custom built-in objects, hence, &lt;strong&gt;&lt;em&gt;“Extending built-in JS objects”&lt;/em&gt;&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;As an example, we can easily encapsulate our code using a function.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;regexIt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;input&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// do something with input and&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;input&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;and use it by invoking &lt;code&gt;regexIt&lt;/code&gt; function and passing in an argument, as shown below:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;result&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;Hello World&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;regexIt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Now, let’s say for instance, this function has become so useful that it should be part of JS String object methods. You know, how JS String has &lt;code&gt;replace()&lt;/code&gt;, &lt;code&gt;indexOf()&lt;/code&gt;, &lt;code&gt;slice()&lt;/code&gt;, &lt;code&gt;substring()&lt;/code&gt;, &lt;code&gt;toUpperCase()&lt;/code&gt;, &lt;code&gt;toLowerCase()&lt;/code&gt;, &lt;code&gt;split()&lt;/code&gt;, just to name a few popular ones. We use these methods as shown below:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;foo&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;Hello World, Foo Bar&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;foo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;split&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;,&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;If we want our &lt;code&gt;regexIt&lt;/code&gt; function to become a method of JS String object, meaning, to be able to use it like this, &lt;code&gt;foo.regexIt()&lt;/code&gt; instead of &lt;code&gt;regexIt(foo)&lt;/code&gt;, we’ll need to use &lt;strong&gt;prototype&lt;/strong&gt;.&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;prototype&quot;&gt;prototype&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;prototype&lt;/code&gt; let’s us insert our custom function to these JS Objects. All objects in JS contains a &lt;code&gt;prototype&lt;/code&gt; property, even the variables we declare. Since we don’t have access to the JS source code, thus, we cannot insert our custom functionality in &lt;code&gt;String&lt;/code&gt; object by fiddling with JS source code, we use the &lt;code&gt;String&lt;/code&gt; object’s &lt;code&gt;prototype&lt;/code&gt; as another approach to insert our functionality.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;nb&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;prototype&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;regexIt&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;cm&quot;&gt;/*&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt;    Since were attaching our custom function to String object,&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt;    we don&amp;#39;t need an argument instead, we use &amp;#39;this&amp;#39; to access our argument&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt;    as it points to the String value attached.&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt;  */&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;input&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

  &lt;span class=&quot;c1&quot;&gt;// do something with input and&lt;/span&gt;

  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;input&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Now, we can use our &lt;code&gt;regexIt&lt;/code&gt; method as shown below:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;result&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;Hello World&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;regexIt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;blockquote&gt;
  &lt;p&gt;This is because the prototype property provides you with direct access to your String’s insides.
Best of all, any new arrays you create will also have access to the shuffle functionality by default thanks to how prototype inheritance works.
- kirupa&lt;/p&gt;
&lt;/blockquote&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;controversials&quot;&gt;Controversials&lt;/h3&gt;

&lt;p&gt;We’ve seen how easy it is to extend a built-in object’s functionality by declaring properties and methods, but there are contradictions to this practice.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;JavaScript may implement their own version of your custom method in the future (using the same name) and this will override your custom method.&lt;/li&gt;
  &lt;li&gt;Modifying the behaviour of current built-in JS objects is not a good practice as it breaks its default functionality and it will break your code using that specific built-in JS object method or property.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;When it comes down to extending a built-in JS object, it seems like you just use your best judgement. With given scenarios above, its easy to spot what should be avoided and what are the best approach to fix an issue.&lt;/p&gt;

&lt;hr /&gt;

&lt;h5 id=&quot;references&quot;&gt;&lt;strong&gt;References:&lt;/strong&gt;&lt;/h5&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.kirupa.com/html5/extending_built_in_objects_javascript.htm&quot;&gt;Extending Built-In Objects in Javascript&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Tue, 23 Feb 2016 05:04:54 -0800</pubDate>
        <link>http://www.wandrr.io/JS-Interview-Question-Why-is-extending-built-in-JavaScript-objects-not-a-good-idea</link>
        <guid isPermaLink="true">http://www.wandrr.io/JS-Interview-Question-Why-is-extending-built-in-JavaScript-objects-not-a-good-idea</guid>
        
        <category>javascript</category>
        
        <category>interview question</category>
        
        
      </item>
    
      <item>
        <title>What's the difference between an 'attribute' and a 'property'?</title>
        <description>&lt;h3 id=&quot;recalling-basics-of-javascript&quot;&gt;recalling basics of JavaScript&lt;/h3&gt;

&lt;p&gt;Everything in JavaScript is an object. These objects are categorized in different types (functions, boolean, string, number, etc) and can also contain properties and methods.
Objects doesn’t just exist in the language itself (JavaScript), but in Browser Object Model (BOM) and Document Object Model (DOM) as well. &lt;a href=&quot;http://javascript.info/tutorial/browser-environment&quot;&gt;More info on browser environment&lt;/a&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;objects-in-dom&quot;&gt;objects in DOM&lt;/h3&gt;

&lt;p&gt;Every element in the DOM is an object and these objects have properties as well. These properties are mapped to a set of attributes from an &lt;code&gt;html&lt;/code&gt; markups. An attribute is just a string in an element (usually, &lt;code&gt;label='value'&lt;/code&gt; pair).&lt;/p&gt;

&lt;p&gt;Some of the element’s properties get their initial values from attributes with the same or similar names. Some examples below:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;href&lt;/strong&gt; property gets its initial value from the &lt;code&gt;href&lt;/code&gt; attribute, but there is an interpretation involved.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;className&lt;/strong&gt; property gets its value from &lt;code&gt;class&lt;/code&gt; attribute.&lt;/li&gt;
  &lt;li&gt;other properties get their initial values in other ways.&lt;/li&gt;
  &lt;li&gt;an element always has a &lt;strong&gt;style&lt;/strong&gt; property, whether it has a &lt;code&gt;style&lt;/code&gt; attribute or not.&lt;/li&gt;
  &lt;li&gt;a number of properties write back to the attribute they derived from if you set them, but some may have an interpretation involved. Example: &lt;code&gt;href&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Consider example below for points above.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// html element markup&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;href&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;foo.html&amp;#39;&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;test one&amp;#39;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;fooAnchor&amp;#39;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;fooAnchor&amp;#39;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Hi&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;/a&amp;gt;&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// element object&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;+-------------------------------------------+&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt;                                         &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;+-------------------------------------------+&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;href&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;      &lt;span class=&quot;s2&quot;&gt;&amp;quot;http://example.com/foo.html&amp;quot;&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;      &lt;span class=&quot;s2&quot;&gt;&amp;quot;fooAnchor&amp;quot;&lt;/span&gt;                    &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;        &lt;span class=&quot;s2&quot;&gt;&amp;quot;fooAnchor&amp;quot;&lt;/span&gt;                    &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;className&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;test one&amp;quot;&lt;/span&gt;                     &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;attributes&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;                               &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;    &lt;span class=&quot;nx&quot;&gt;href&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;  &lt;span class=&quot;s2&quot;&gt;&amp;quot;foo.html&amp;quot;&lt;/span&gt;                      &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;    &lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;  &lt;span class=&quot;s2&quot;&gt;&amp;quot;fooAnchor&amp;quot;&lt;/span&gt;                     &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;    &lt;span class=&quot;nx&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;    &lt;span class=&quot;s2&quot;&gt;&amp;quot;fooAnchor&amp;quot;&lt;/span&gt;                     &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;    &lt;span class=&quot;kr&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;test one&amp;quot;&lt;/span&gt;                      &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;+-------------------------------------------+&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Most of the time, its better to work with properties. Their values and names tend to be consistent across browsers.
We’ll only work with attributes when there is no properties set, example is custom attributes &lt;code&gt;data-foobar&lt;/code&gt;.&lt;/p&gt;

&lt;hr /&gt;

&lt;h5 id=&quot;references&quot;&gt;&lt;strong&gt;References:&lt;/strong&gt;&lt;/h5&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://javascript.info/tutorial/browser-environment&quot;&gt;Browser environment&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://stackoverflow.com/questions/5874652/prop-vs-attr/5884994#5884994&quot;&gt;.prop() vs .attr()&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://jquery-howto.blogspot.com/2011/06/html-difference-between-attribute-and.html&quot;&gt;HTML: The difference between attribute and property&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Wed, 03 Feb 2016 04:41:57 -0800</pubDate>
        <link>http://www.wandrr.io/JS-Interview-Question-Whats-the-difference-between-an-attribute-and-a-property</link>
        <guid isPermaLink="true">http://www.wandrr.io/JS-Interview-Question-Whats-the-difference-between-an-attribute-and-a-property</guid>
        
        <category>javascript</category>
        
        <category>interview question</category>
        
        
      </item>
    
      <item>
        <title>Describe event bubbling</title>
        <description>&lt;p&gt;Event bubbling is when handlers on a nested DOM are triggered starting from the child element up to its parent element.&lt;/p&gt;

&lt;p&gt;This means, eventhough we clicked on a child element, its parent element which contains a handler, will be triggered as well. That’s why it’s called &lt;strong&gt;Event bubbling&lt;/strong&gt;, it is triggered from innermost child element that has been clicked up through topmost parent element.&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;this-and-eventtarget&quot;&gt;this and event.target&lt;/h3&gt;

&lt;p&gt;When the innermost child element has been triggered, the event is called &lt;em&gt;‘the target’&lt;/em&gt;, &lt;em&gt;‘the originating element’&lt;/em&gt;, or &lt;code&gt;event.target&lt;/code&gt;. Internet Explorer uses &lt;code&gt;event.srcElement&lt;/code&gt; while all W3C-compliant browsers use &lt;code&gt;event.target&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Cross-browser code usually looks like this:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;target&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;event&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;target&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;event&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;srcElement&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;When handlers on its topmost parent elements are triggered, the event is called &lt;code&gt;this&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;So when a Event Bubble occurs, &lt;code&gt;this&lt;/code&gt; object changes its value going from innermost triggered child element to its topmost parent element, while &lt;code&gt;event.target&lt;/code&gt; contains the same value as it holds &lt;em&gt;‘the originating element’&lt;/em&gt;.&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;stop-the-event-bubbling&quot;&gt;stop the event bubbling&lt;/h3&gt;

&lt;p&gt;An event bubble will occur as long as its topmost element contains a handler, even in &lt;code&gt;&amp;lt;html&amp;gt;&lt;/code&gt; element.
We can stop the event bubbling in a certain handler by invoking the following method:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// For W3C-compliant browsers&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;event&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;stopPropagation&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// For IE&amp;lt;9&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;event&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;cancelBubble&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// Cross-browser code:&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;element&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;onclick&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;event&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;event&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;event&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;window&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;event&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// cross-browser event;&lt;/span&gt;

  &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;event&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;stopPropagation&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// W3C standard variant&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;event&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;stopPropagation&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// IE variant&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;event&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;cancelBubble&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Here is a one-line variant:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;nx&quot;&gt;event&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;stopPropagation&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;event&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;stopPropagation&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;event&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;cancelBubble&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;em&gt;* Multiple handlers, initiated in the same element, will get executed.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;There is a reverse version of Event Bubbling called ‘Capturing’, but I will not go further into it. You can click on the link below for more info.&lt;/p&gt;

&lt;hr /&gt;

&lt;h5 id=&quot;references&quot;&gt;&lt;strong&gt;References:&lt;/strong&gt;&lt;/h5&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://javascript.info/tutorial/bubbling-and-capturing&quot;&gt;Bubbling and capturing&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Tue, 02 Feb 2016 04:08:15 -0800</pubDate>
        <link>http://www.wandrr.io/JS-Interview-Question-Describe-event-bubbling</link>
        <guid isPermaLink="true">http://www.wandrr.io/JS-Interview-Question-Describe-event-bubbling</guid>
        
        <category>javascript</category>
        
        <category>interview question</category>
        
        
      </item>
    
      <item>
        <title>Front-End Workflow with Wordpress</title>
        <description>&lt;p&gt;Prototyping and delivering an end product is one of the things I’ve been contemplating lately.
Being the only designer at work and yet, the one responsible for optimization and performance of Wordpress theme used, I have to find a way to satisfy both design and development.&lt;/p&gt;

&lt;p&gt;Below are my usual workflow.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Gather requirements:&lt;/strong&gt;
    &lt;ul&gt;
      &lt;li&gt;What kind of website would it be?&lt;/li&gt;
      &lt;li&gt;Is there a sitemap or diagram provided?&lt;/li&gt;
      &lt;li&gt;How many regular pages will it contain?&lt;/li&gt;
      &lt;li&gt;What are their brand color scheme?&lt;/li&gt;
      &lt;li&gt;What’s their choice of font/s?&lt;/li&gt;
      &lt;li&gt;Where can I access their existing assets, images, etc.&lt;/li&gt;
      &lt;li&gt;Are there sample websites they like?&lt;/li&gt;
      &lt;li&gt;Do they have an existing website?&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;These are atleast the initial questions that come to mind when gathering requirements.
Another one would be &lt;strong&gt;planning it out&lt;/strong&gt;. At this phase, I will have to satisfy both our:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;em&gt;Project Manager&lt;/em&gt;
    &lt;ul&gt;
      &lt;li&gt;Making sure I can deliver prototypes or layout design base from the gathered requirements.&lt;/li&gt;
      &lt;li&gt;Meet deadline.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;em&gt;Senior Backend Developer/Engineer&lt;/em&gt;
    &lt;ul&gt;
      &lt;li&gt;Making sure I use modern technology, prefer opensource (MIT License).
        &lt;ul&gt;
          &lt;li&gt;Github.com will be your bestfriend on this :)&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;Use a theme that makes minimal http requests. This is usually up to me on how I build the dependencies/assets.&lt;/li&gt;
      &lt;li&gt;Convert some pages of wordpress to serve static page.
        &lt;ul&gt;
          &lt;li&gt;Example would be 404 page, convert it to static page so it doesn’t need to make a request to DB often.&lt;/li&gt;
          &lt;li&gt;Wordpress has its way of doing alot of DB queries. Consider minimizing DB queries.&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;Use minimal plugins as possible. If there is a way to use default Wordpress features, take advantage of it.&lt;/li&gt;
      &lt;li&gt;When deploying, make sure to set Wordpress securities
        &lt;ul&gt;
          &lt;li&gt;Wordpress Hardening documentation&lt;/li&gt;
          &lt;li&gt;Wordpress Editing wp-config.php documentation&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;em&gt;Also, consider other developers&lt;/em&gt;
    &lt;ul&gt;
      &lt;li&gt;Make sure I use a documented theme so other developers can jump on the project as well.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Now with these rules in set. I have come to a conclusion to use &lt;a href=&quot;https://foundationpress.olefredrik.com/&quot;&gt;&lt;strong&gt;FoundationPress&lt;/strong&gt;&lt;/a&gt;.
We have used paid themes in the past, but the extra features included requires frequent update, no control over assets (HTTP requests) of theme, and in the long run, may not be performant. Also some themes, eventhough configurations was made easy for non-techie users, it makes alot of cpu processes and  database queries. Unnecessary features in theme and plugin dependencies may also become vulnerable to security attacks, bots injecting scripts unto Wordpress directories.
Rather than configuring themes and some plugins in wordpress admin dashboard, its recommended to do so in wordpress source files instead.&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;why-choose-foundationpress&quot;&gt;Why choose FoundationPress?&lt;/h3&gt;

&lt;p&gt;FoundationPress is basically Zurb Foundation framework, but created specifically to work with Wordpress as a theme.
I’ve been using Zurb Foundation for quite sometime, and with the recent upgrade they made on their framework, its more flexible on how we can include or exclude certain features of what builds a Responsive Website or Web Application, thus, customization of dependencies/assets and small filesize. Also, this framework is well-documented and support from its community is pretty responsive, I would file issues on their github repo and they are very helpful to resolve issues.&lt;/p&gt;

&lt;p&gt;With regards to CSS Animations (yes, I’ve see trends lately where when you scroll a webpage, it would have those nifty animations), Foundation has released &lt;strong&gt;Motion-UI&lt;/strong&gt; which is also included on FoundationPress.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://foundation.zurb.com/&quot;&gt;Foundation Zurb&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/olefredrik/foundationpress&quot;&gt;FoundationPress&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;With the type of projects we received and working with only a few developers while meeting design approval and deadline, using a CSS framework is just proper.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;I don’t need to re-code CSS styles. Good for rapid prototyping and optimize later.&lt;/li&gt;
  &lt;li&gt;There are also pre-made JavaScript components. Again, good for rapid prototyping and optimize later.&lt;/li&gt;
  &lt;li&gt;Documentation is on Zurb Foundation website, except custom documentation.&lt;/li&gt;
  &lt;li&gt;FoundationPress handles the theme’s architecture.
    &lt;ul&gt;
      &lt;li&gt;Just by looking at &lt;strong&gt;package.json&lt;/strong&gt;, &lt;strong&gt;bower.json&lt;/strong&gt;, and &lt;strong&gt;gulp.js&lt;/strong&gt;, I can tell how the theme is architectured.&lt;/li&gt;
      &lt;li&gt;Except for SASS files. Its modules, settings, and dependencies are imported different than JavaScript files.&lt;/li&gt;
      &lt;li&gt;Motion-UI is still early in development and a bit tricky to implement, but I filed an issue related to setup. &lt;a href=&quot;https://github.com/zurb/motion-ui/issues/56&quot;&gt;Visit filed issue here&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;wordpress-templating&quot;&gt;Wordpress Templating&lt;/h3&gt;

&lt;p&gt;To differentiate the files in FoundationPress, its good to get acquainted with &lt;a href=&quot;https://developer.wordpress.org/themes/basics/template-files/&quot;&gt;Wordpress Template Files&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Prototyping&lt;/strong&gt; is easy as adding a page on wordpress admin dashboard and create an instance of a &lt;code&gt;page.tpl&lt;/code&gt; file and renaming with a given extension of the name of the page you added on wordpress admin dashboard &lt;code&gt;page-{slug}.php&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Another technique is if you were to use an &lt;strong&gt;approved design prototype&lt;/strong&gt; to multiple pages, you can just convert that &lt;code&gt;page-{slug}.php&lt;/code&gt; file into a template &lt;code&gt;/FoundationPress/templates/template-name-here.php&lt;/code&gt;, then disseminate it by setting it as a Template under &lt;code&gt;Name of page you added &amp;gt; Page Attributes &amp;gt; Template&lt;/code&gt; at wp admin dashboard.&lt;/p&gt;

&lt;p&gt;There are many ways you can fully customized a CMS like functionality with wordpress without the need of plugin. All you have to do is enable these features in &lt;code&gt;functions.php&lt;/code&gt;.
Some features that are worth noting are:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Custom Post Type&lt;/li&gt;
  &lt;li&gt;Custom Category and Tags&lt;/li&gt;
  &lt;li&gt;Custom Fields&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;You can also create a template or prototype for these Custom Post Types. Enable Custom Fields if required for users to input pieces of data and enable Custom Category if you want to sort or filter these items in theme or in wordpress admin custom post type dashboard.&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;wp-rest-api&quot;&gt;WP Rest API&lt;/h3&gt;

&lt;p&gt;When building an application in certain pages of wordpress using JavaScript, we can also take advantage of this plugin &lt;a href=&quot;http://v2.wp-api.org/&quot;&gt;WP Rest API&lt;/a&gt;.&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;managing-wordpress-with-wp-cli&quot;&gt;Managing wordpress with WP-CLI&lt;/h3&gt;

&lt;p&gt;This has been really helpful especially with checking the status of your wordpress core, plugins, and themes. To avoid cpu usage on wordpress admin dashboard, you can manage your wordpress via cli! &lt;a href=&quot;http://wp-cli.org/&quot;&gt;WP-CLI&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Fri, 29 Jan 2016 04:07:09 -0800</pubDate>
        <link>http://www.wandrr.io/Front-End-workflow-with-Wordpress</link>
        <guid isPermaLink="true">http://www.wandrr.io/Front-End-workflow-with-Wordpress</guid>
        
        <category>wordpress</category>
        
        <category>prototyping</category>
        
        <category>workflow</category>
        
        
      </item>
    
      <item>
        <title>Explain 'hoisting'</title>
        <description>&lt;p&gt;As defined in dictionary.com, Hoisting means to lift or raise. &lt;strong&gt;In JavaScript&lt;/strong&gt;, Hoisting is when we declare variables and are hoisted to the top of a function scope or to the top of the global scope depending on where it is declared. Remember, JavaScript have a &lt;strong&gt;function-level scope&lt;/strong&gt; as oppose to &lt;strong&gt;block-level scope&lt;/strong&gt; in other languages.&lt;/p&gt;

&lt;p&gt;** &lt;em&gt;Note, we must first understand the concept of JavaScript Variable Scope as this is the basis of Hoisting&lt;/em&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;variable-hoisting&quot;&gt;Variable Hoisting&lt;/h3&gt;

&lt;p&gt;Only &lt;strong&gt;variable declarations&lt;/strong&gt; are hoisted to the top and not &lt;strong&gt;variable initializations&lt;/strong&gt; (variable assignments or variables with assigned values).&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;First example,&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;cm&quot;&gt;/*&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt;  just a simple function declaration.&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt;  this function declaration has its own scope.&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt;  we are not declaring variables on global scope (outside of function)&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt;*/&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;showBar&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;1st word &amp;#39;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;foo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// output: undefined&lt;/span&gt;
  &lt;span class=&quot;cm&quot;&gt;/*&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt;    Reason why its &amp;#39;undefined&amp;#39; is we did not declare&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt;    a variable called &amp;#39;foo&amp;#39; before we called it.&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt;    It cannot find variable foo.&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt;  */&lt;/span&gt;

  &lt;span class=&quot;c1&quot;&gt;// yey, we finally declared it&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;foo&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;bar&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

  &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;2nd word &amp;#39;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;foo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// output: bar&lt;/span&gt;
  &lt;span class=&quot;cm&quot;&gt;/*&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt;    Since we declared variable &amp;#39;foo&amp;#39; after we called it.&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt;    It now finds variable foo.&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt;  */&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;showBar&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt;/*&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt;  console output:&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt;  1st word undefined&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt;  2nd word bar&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt;*/&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;Second example,&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;cm&quot;&gt;/*&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt;  same function declaration, but different Hoisting example&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt;*/&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;showBar&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;cm&quot;&gt;/*&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt;    here, we declared variable &amp;#39;foo&amp;#39; first, and is&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt;    located at the very top of function (Hoisting)&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt;  */&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;foo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

  &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;1st word &amp;#39;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;foo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// output: undefined&lt;/span&gt;
  &lt;span class=&quot;cm&quot;&gt;/*&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt;    still outputs &amp;#39;undefined&amp;#39;, why?&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt;    eventhough we declared variable foo after we called it,&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt;    variable foo doesn&amp;#39;t hold any value.&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt;    its just a variable declaration without a value.&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt;  */&lt;/span&gt;

  &lt;span class=&quot;nx&quot;&gt;foo&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;bar&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;cm&quot;&gt;/*&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt;    here, we are now assigning variable &amp;#39;foo&amp;#39; with a string value.&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt;    though, variable assignments aren&amp;#39;t hosted. that is why&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt;    our 1st word display is outputting undefined.&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt;  */&lt;/span&gt;

  &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;2nd word &amp;#39;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;foo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// output: bar&lt;/span&gt;
  &lt;span class=&quot;cm&quot;&gt;/*&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt;    since we assigned a value to variable foo.&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt;    it now has a value to display&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt;  */&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;showBar&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt;/*&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt;  console output:&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt;  1st word undefined&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt;  2nd word bar&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt;*/&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;function-declarations-overrides-variables-declaration-when-hoisted&quot;&gt;Function Declarations Overrides Variables Declaration When Hoisted&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Function declarations&lt;/strong&gt; and &lt;strong&gt;variables declarations&lt;/strong&gt; will always be hoisted at the top of scope.&lt;br /&gt;
&lt;strong&gt;Function declarations&lt;/strong&gt; will always override &lt;strong&gt;variable declarations&lt;/strong&gt;.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;foo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;foo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;bar&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;typeof&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;foo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// output: function&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;although, &lt;strong&gt;variable declarations&lt;/strong&gt; will override &lt;strong&gt;function declarations&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;foo&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;buzz&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;foo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;bar&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;typeof&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;foo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// output: string&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Function expressions&lt;/strong&gt; (function assignments) as well as &lt;strong&gt;variable initialization&lt;/strong&gt; (variable assignments) are not hoisted.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;bar&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;qux&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;foo&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;buzz&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Also good to note that,&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;In strict mode, an error will occur if you assign a variable a value without first declaring the variable. Always declare your variables.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;hr /&gt;

&lt;h5 id=&quot;references&quot;&gt;&lt;strong&gt;References:&lt;/strong&gt;&lt;/h5&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://javascriptissexy.com/javascript-variable-scope-and-hoisting-explained/&quot;&gt;JavaScript Variable Scope and Hosting Explained&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Thu, 28 Jan 2016 05:27:00 -0800</pubDate>
        <link>http://www.wandrr.io/JS-Interview-Explain-hoisting</link>
        <guid isPermaLink="true">http://www.wandrr.io/JS-Interview-Explain-hoisting</guid>
        
        <category>javascript</category>
        
        <category>interview question</category>
        
        
      </item>
    
  </channel>
</rss>
