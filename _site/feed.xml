<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>wandrr</title>
    <description>This is a blog about travel and tech.
</description>
    <link>http://www.wandrr.io/</link>
    <atom:link href="http://www.wandrr.io/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Wed, 14 Sep 2016 16:09:04 -0700</pubDate>
    <lastBuildDate>Wed, 14 Sep 2016 16:09:04 -0700</lastBuildDate>
    <generator>Jekyll v3.1.6</generator>
    
      <item>
        <title>Learning Keystonejs</title>
        <description>&lt;p&gt;created a docker compose setup for Nodejs + MongoDB with Keystonejs install.&lt;/p&gt;

&lt;p&gt;my experience with starting with keystone.js was somewhat a love and hate thing.&lt;/p&gt;

&lt;p&gt;coming from a front-end development, i dont know much about database concepts.&lt;/p&gt;

&lt;p&gt;keystone.js is a good framework to dabble and start a journey with fullstack development.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;it is also use for large-scale websites.&lt;/li&gt;
  &lt;li&gt;it is flexible enough to create custom fields and post type.&lt;/li&gt;
  &lt;li&gt;it is still on going development with some aspect of defining fields.&lt;/li&gt;
  &lt;li&gt;it is well supported by the community and rarely read negative feedbacks&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;useful reading references for beginners:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://leanpub.com/keystonejs/read&quot;&gt;Practical Keystone.js&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://keystonejs.com/docs/&quot;&gt;Keystone.js Documentation&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Sat, 20 Aug 2016 04:12:26 -0700</pubDate>
        <link>http://www.wandrr.io/Learning-Keystonejs</link>
        <guid isPermaLink="true">http://www.wandrr.io/Learning-Keystonejs</guid>
        
        <category>javascript</category>
        
        
      </item>
    
      <item>
        <title>Getting Started with Magento Theming</title>
        <description>&lt;p&gt;Installing manually was tedious so I’ve decided to use install Magento 2 via Docker and Docker Compose.&lt;/p&gt;

&lt;p&gt;To get a glimpse of how Docker and Docker Compose works, I’ved jotted down notes here: &lt;a href=&quot;Notes-on-creating-a-convenient-local-development-workflow-with-Docker&quot;&gt;Notes on creating a convenient Local Development Workflow with Docker&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Here is a sample &lt;code class=&quot;highlighter-rouge&quot;&gt;docker-compose.yml&lt;/code&gt; file that installs Magento 2 &lt;a href=&quot;https://github.com/mageinferno/magento2-docker-compose&quot;&gt;maginferno - magento2-docker-compose&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Grab a copy of Magento 2 files as well &lt;a href=&quot;https://github.com/magento/magento2.git&quot;&gt;Github - Magento&lt;/a&gt; and place it on your &lt;strong&gt;host&lt;/strong&gt; and mount the necessary directories and files unto your &lt;strong&gt;docker container&lt;/strong&gt;.&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;issues-i-came-across&quot;&gt;Issues I came across:&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/magento/magento2/issues/2309&quot;&gt;Admin Page 404 After Install Magento2 RC #2309&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;During the installation you entered unique admin URI (it generates automatically for you) eg. /admin_cr8w74 To get info about your URI use CLI command:&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;/var/www/html/magento2$ php bin/magento info:adminuri&lt;/code&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Admin username and password can be found in &lt;code class=&quot;highlighter-rouge&quot;&gt;docker-compose.yml&lt;/code&gt; file&lt;/li&gt;
  &lt;li&gt;resolving issue w/ Admin page
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;https://community.magento.com/t5/Technical-Issues/There-has-been-an-error-processing-your-request/td-p/4905&quot;&gt;There has been an error processing your request&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;see comment with &lt;code class=&quot;highlighter-rouge&quot;&gt;In local.xml file you need to update all database credential&lt;/code&gt;
        &lt;ul&gt;
          &lt;li&gt;this will display errors on &lt;code class=&quot;highlighter-rouge&quot;&gt;/admin_&amp;lt;unique hash&amp;gt;&lt;/code&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;install sample data:
    &lt;ul&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;php bin/magento sampledata:deploy&lt;/code&gt;, then &lt;code class=&quot;highlighter-rouge&quot;&gt;php bin/magento setup:upgrade&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;if error occurs: clear cache, &lt;a href=&quot;http://stackoverflow.com/questions/38668833/magento-2-cmd-fatal-error-uncaught-error-class-cli-not-found&quot;&gt;Fatal error: Uncaught Error: Class ‘Cli’ not found&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;retrieving your http://repo.magento.com credentials
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;http://devdocs.magento.com/guides/v2.0/install-gde/prereq/connect-auth.html&quot;&gt;Get your authenticationn keys&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;useful-commands-and-info&quot;&gt;Useful commands and info&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;clear cache via cli:
    &lt;ul&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;php bin/magento cache:clean&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;php bin/magento cache:flush&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;ref: &lt;a href=&quot;https://www.mageplaza.com/kb/how-flush-enable-disable-cache.html&quot;&gt;How to Flush, Enable, Disable Cache Command Line in Magento 2&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;change to &lt;strong&gt;Developer Mode&lt;/strong&gt; or other modes
    &lt;ul&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;rm -rf &amp;lt;your Magento install dir&amp;gt;/var/di/* &amp;lt;your Magento install dir&amp;gt;/var/generation/*&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;magento deploy:mode:set developer&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;ref: &lt;a href=&quot;http://devdocs.magento.com/guides/v2.0/config-guide/cli/config-cli-subcommands-mode.html&quot;&gt;Overview of setting Magento modes&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;collections-of-tutorials&quot;&gt;Collections of Tutorials&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.sessiondigital.com/magento/magento-2-tutorials/&quot;&gt;Magento 2 tutorials from sessiondigital.com&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://devdocs.magento.com/guides/v2.0/frontend-dev-guide/bk-frontend-dev-guide.html&quot;&gt;Magento 2 - Frontend Developer Guide&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://devdocs.magento.com/guides/v2.0/frontend-dev-guide/themes/theme-create.html&quot;&gt;Getting Started - Hands on with Theme from scratch&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;This is to start building your theme from scratch, registering your theme and its directories&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://devdocs.magento.com/guides/v2.0/frontend-dev-guide/themes/theme-structure.html&quot;&gt;Magento theme structure&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;An indepth view of directory structure of a theme and what is required and optional&lt;/li&gt;
      &lt;li&gt;Discusses about CSS and JS assets, Static files is directly accessible from HTML link and script syntax while Dynamic files usage of CSS preprocessors&lt;/li&gt;
      &lt;li&gt;But my concern is more on &lt;strong&gt;Magento2 Layout &amp;amp; Templating&lt;/strong&gt; since I will be implementing my &lt;a href=&quot;https://github.com/rlynjb/frontendflow&quot;&gt;Front-End Flow&lt;/a&gt; project&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.sessiondigital.com/blog/magento-2-tutorial-how-to-use-the-new-front-end-templating-system/&quot;&gt;Indepth Magento 2 Templating system&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://magento.stackexchange.com/questions/118278/creating-a-custom-homepage-template-in-magento2&quot;&gt;Intro to Layouts&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://excellencemagentoblog.com/blog/2016/04/11/magento2-theme-layouts-templates/&quot;&gt;Magento2 Theme - Layouts &amp;amp; Templates - Part1&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://excellencemagentoblog.com/blog/2016/04/11/magento2-theme-layouts-templates-part2/&quot;&gt;Magento2 Theme - Layouts &amp;amp; Templates - Part2&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;starting-with-magento2-layouts-and-templating&quot;&gt;Starting with Magento2 Layouts and Templating&lt;/h3&gt;

&lt;p&gt;There is a steep learning curve with Magento2 Layout and Templating engine. Like any CMS, what builds a website display are mainly Layouts and Templates. Magento2 built their layout/templating engine with a strong emphasis of layout and content separation. So for the sake of learning and to simplify things, lets breakdown a Magento2 theme and start with Layout and Templates.&lt;/p&gt;

&lt;h3 id=&quot;files-and-directory-structure-inside-magentotheme-module&quot;&gt;Files and Directory structure inside Magento_Theme module&lt;/h3&gt;
&lt;p&gt;Files and Directory that we are concern are (this applies to other modules as well):&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;\theme_dir
  |-- \Magento_Theme
      |-- \layout
          |-- \override
              |-- \base
                  |-- default.xml
                  |-- default_header_blocks.xml
      |-- \page_layout
          |-- custom_home.xml
      |-- \templates
          |-- header.phtml
          |-- main-content.phtml
          |-- footer.phtml
      |-- layouts.xml
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;I’m overriding &lt;strong&gt;Magento_Theme&lt;/strong&gt;’s &lt;code class=&quot;highlighter-rouge&quot;&gt;\layout&lt;/code&gt; files and extending into &lt;strong&gt;Magento_Theme&lt;/strong&gt;’s &lt;code class=&quot;highlighter-rouge&quot;&gt;\page_layout &amp;gt; custom_home_layout.xml&lt;/code&gt; - &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;referenceContainer name=&quot;page.wrapper&quot;&amp;gt;&lt;/code&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;There’s a difference bet. Override and Extend&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;Start it off by:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;ref: &lt;a href=&quot;http://excellencemagentoblog.com/blog/2016/04/11/magento2-theme-layouts-templates/&quot;&gt;Magento2 Theme - Layouts &amp;amp; Templates - Part1&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Declare your layouts first on &lt;code class=&quot;highlighter-rouge&quot;&gt;layouts.xml&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;Create your page layout file inside &lt;code class=&quot;highlighter-rouge&quot;&gt;\page_layout&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;Then define your &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;container&amp;gt;&lt;/code&gt; along with name attr to hook it with Page Configuration files inside &lt;code class=&quot;highlighter-rouge&quot;&gt;\layout&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Recall:&lt;/strong&gt;&lt;/p&gt;

&lt;h4 id=&quot;page-layout-files&quot;&gt;Page Layout files&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;An &lt;code class=&quot;highlighter-rouge&quot;&gt;*.xml&lt;/code&gt; file where we define a page wireframe/structure.
    &lt;ul&gt;
      &lt;li&gt;Ex. Grid system&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Only uses Magento2’s &lt;strong&gt;containers&lt;/strong&gt; or &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;referenceContainer name=&quot;&quot; /&amp;gt;&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;Should be declared on &lt;code class=&quot;highlighter-rouge&quot;&gt;layouts.xml&lt;/code&gt; file for it to register.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;page-configuration-files&quot;&gt;Page Configuration files&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;Uses a declared &lt;strong&gt;Page Layout&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;Defines detailed structure, contents, meta info, etc (menu, nav, search box, widgets, links, contents, images) inside of header, main content, footer, columns.
    &lt;ul&gt;
      &lt;li&gt;Ex. Components&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;generic-page-layouts&quot;&gt;Generic Page Layouts&lt;/h4&gt;
&lt;p&gt;There is also another type of page layout that is not quite use often. For more info: &lt;a href=&quot;http://devdocs.magento.com/guides/v2.1/frontend-dev-guide/layouts/layout-types.html#layout-types-gen&quot;&gt;Magento2 Dev Doc - Generic layout&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;magento-2-templating&quot;&gt;Magento 2 Templating&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;It seems like templating is just a matter of copy and pasting pieces of code that Magento 2 Modules provide.&lt;/li&gt;
  &lt;li&gt;Use &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;block /&amp;gt;&lt;/code&gt; to define a component inside a &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;container /&amp;gt;&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;Define a component class like so, &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;block class=&quot;&quot; /&amp;gt;&lt;/code&gt; and extend by defining a template to tweak template/customize HTML structure &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;block class=&quot;&quot; template=&quot;&quot; /&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;further-templating-issues&quot;&gt;Further Templating Issues&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://magento.stackexchange.com/questions/108296/how-to-load-a-phtml-file-only-for-homepage-magento-2&quot;&gt;How to load a phtml file only for homepage? (Magento 2)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
        <pubDate>Thu, 11 Aug 2016 05:42:09 -0700</pubDate>
        <link>http://www.wandrr.io/Getting-started-with-Magento-Theming</link>
        <guid isPermaLink="true">http://www.wandrr.io/Getting-started-with-Magento-Theming</guid>
        
        <category>cms</category>
        
        
      </item>
    
      <item>
        <title>Notes on creating a convenient Local Development Workflow with Docker</title>
        <description>&lt;p&gt;While working on a project that requires a new install of PHP and MySql, I came into a halt. It took me a day to re-configure my local development environment.&lt;/p&gt;

&lt;p&gt;I then came across Docker. With this research and learning a new technology. My goal is to establish an efficient local development workflow with Docker as I did with creating &lt;a href=&quot;https://github.com/rlynjb/frontendflow&quot;&gt;Front-End Workflow Theme&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;This article &lt;a href=&quot;https://www.airpair.com/docker/posts/efficiant-development-workfow-using-git-submodules-and-docker-compose&quot;&gt;Efficient development workflow using Git submodules and Docker Compose&lt;/a&gt; gave me a brief overview of what Docker and Git is capable of when architecturing your preferred local development, though, I did have to do further reading on my own to grasp Docker Engine, Docker Compose, and Git submodule (I will not be tackling this topic as I’m focus on Dockerfile and Docker Compose).&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;so-far-what-i-know-about-docker-in-regards-of-hands-on-experience-is&quot;&gt;So far, what I know about Docker in regards of hands-on experience is&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;we edit or create our source code in a directory from our local machine.
    &lt;ul&gt;
      &lt;li&gt;to run the app
        &lt;ul&gt;
          &lt;li&gt;we use Docker to start images we define in &lt;strong&gt;Dockerfile&lt;/strong&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;docker-compose.yml&lt;/code&gt; file&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Docker automatically creates a &lt;code class=&quot;highlighter-rouge&quot;&gt;http://localhost&lt;/code&gt; or &lt;code class=&quot;highlighter-rouge&quot;&gt;http://0.0.0.0&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;Docker uses Port for each contained apps or websites&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;collections-of-tutorials&quot;&gt;Collections of tutorials&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;install &lt;strong&gt;Docker&lt;/strong&gt; via its official site &lt;a href=&quot;https://docs.docker.com/docker-for-mac/&quot;&gt;Getting Started with Docker for Mac&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;useful-commands-and-info&quot;&gt;Useful commands and info&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Look into &lt;strong&gt;Dockerfile&lt;/strong&gt; file references&lt;/li&gt;
  &lt;li&gt;Look into &lt;code class=&quot;highlighter-rouge&quot;&gt;docker-compose.yml&lt;/code&gt; file references and commandline references&lt;/li&gt;
  &lt;li&gt;To access a container via terminal:
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;http://askubuntu.com/questions/505506/how-to-get-bash-or-ssh-into-a-running-container-in-background-mode&quot;&gt;How to get bash or ssh into a running container in background mode?&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;sudo docker exec -i -t 665b4a1e17b6 /bin/bash #by ID&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;sudo docker exec -i -t loving_heisenberg /bin/bash #by Name&lt;/code&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;to start a containter &lt;code class=&quot;highlighter-rouge&quot;&gt;docker-compose up&lt;/code&gt; or &lt;code class=&quot;highlighter-rouge&quot;&gt;docker-compose up -d&lt;/code&gt; to detach from status&lt;/li&gt;
  &lt;li&gt;to see processes: &lt;code class=&quot;highlighter-rouge&quot;&gt;docker ps&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;run a command inside container from host
    &lt;ul&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;docker exec &amp;lt;container_id&amp;gt; &amp;lt;command&amp;gt;&lt;/code&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;for-app-sample-workflow&quot;&gt;For App sample workflow&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.docker.com/compose/gettingstarted&quot;&gt;Practice Workflow with Docker compose&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;for-cms-sample-workflow&quot;&gt;For CMS sample workflow&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://visible.vc/engineering/docker-environment-for-wordpress/&quot;&gt;Practice Workflow with CMS using Docker compose&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Tip:&lt;/strong&gt; you have to be familiar with CMS directory&lt;/li&gt;
  &lt;li&gt;We mount local directories from our machine to its Docker container/server with the use of &lt;strong&gt;volume&lt;/strong&gt; in its &lt;code class=&quot;highlighter-rouge&quot;&gt;docker-compose.yml&lt;/code&gt; file&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Tip:&lt;/strong&gt; we can have a copy of CMS install locally on out directory and mount it on Docker container/server&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Mon, 08 Aug 2016 06:31:20 -0700</pubDate>
        <link>http://www.wandrr.io/Notes-on-creating-a-convenient-local-development-workflow-with-Docker</link>
        <guid isPermaLink="true">http://www.wandrr.io/Notes-on-creating-a-convenient-local-development-workflow-with-Docker</guid>
        
        <category>workflow</category>
        
        
      </item>
    
      <item>
        <title>Breaking down Cross-Browser Testing</title>
        <description>&lt;p&gt;Below is my note on an article on smashing magazine. Article is mostly theory but I tried to take in the important info.&lt;/p&gt;

&lt;h1 id=&quot;two-main-objectives&quot;&gt;Two Main Objectives&lt;/h1&gt;

&lt;ol&gt;
  &lt;li&gt;Discovering bugs
    &lt;ul&gt;
      &lt;li&gt;Entails trying to break your app to find bugs to fix.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Sanity-checking
    &lt;ul&gt;
      &lt;li&gt;Involves verifying that majority of your audience receives the expected experience.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;hr /&gt;

&lt;h1 id=&quot;know-your-statistics&quot;&gt;Know your Statistics&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;Audience statistics&lt;/li&gt;
  &lt;li&gt;Browser usage statistics&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;simplify-your-browser-usage-statistics&quot;&gt;Simplify your browser usage statistics&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Desktop Browsers&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;we don’t care about:
    &lt;ul&gt;
      &lt;li&gt;versions except IE&lt;/li&gt;
      &lt;li&gt;OS&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;same argument applies with Portable Browsers&lt;/li&gt;
  &lt;li&gt;new wave of browsers called: In-App browsers - browsers in social media platforms&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Portable Browsers&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;whats important:
    &lt;ul&gt;
      &lt;li&gt;version of the native Android browser used&lt;/li&gt;
      &lt;li&gt;version of iOS a device is running
        &lt;ul&gt;
          &lt;li&gt;very relevant as Safari versions are intrinsically linked to iOS&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h1 id=&quot;three-phase-attack&quot;&gt;Three-Phase Attack&lt;/h1&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;strong&gt;Reconnaissance: Find Browser-Agnostic Bugs&lt;/strong&gt;
    &lt;ul&gt;
      &lt;li&gt;Try resizing to view responsiveness. Was there a funky breakpoint anywhere?&lt;/li&gt;
      &lt;li&gt;Zoom in and out. Have the background-positions of your image sprite been knocked askew?&lt;/li&gt;
      &lt;li&gt;See how the application behaves with Javascript turned off. Do you still get the core content?&lt;/li&gt;
      &lt;li&gt;See how the application looks with CSS turned off. Do the semantics of the markup still make sense?&lt;/li&gt;
      &lt;li&gt;Try turning both Javascript and CSS off. Are you getting an acceptable experience?&lt;/li&gt;
      &lt;li&gt;Try interacting with the application using only your keyboard. Is it possible to navigate and see all the content?&lt;/li&gt;
      &lt;li&gt;Try throttling your connection and see how quickly the application loads. How heavy is the page load?&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Raid: Test in High-Risk Browsers First&lt;/strong&gt;
    &lt;ul&gt;
      &lt;li&gt;Statistical Analysis of Bug Distribution&lt;/li&gt;
      &lt;li&gt;High-Risk are IE browsers&lt;/li&gt;
      &lt;li&gt;Medium-Rish are Safari, Opera&lt;/li&gt;
      &lt;li&gt;Low-Rish are Chrome, Firefox&lt;/li&gt;
      &lt;li&gt;Fixing bugs in bad browsers makes your code more resilient in good browsers&lt;/li&gt;
      &lt;li&gt;Identifying problematic browsers&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;http://caniuse.com&quot;&gt;CanIUse&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;VirtualBox&lt;/li&gt;
      &lt;li&gt;Check on actual device or browser&lt;/li&gt;
      &lt;li&gt;Tools to rectify major compatibility issues:&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;http://modernizr.com&quot;&gt;Modernizr&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Clearance: sanity checking&lt;/strong&gt;
    &lt;ul&gt;
      &lt;li&gt;By this stage, we should be 80:20&lt;/li&gt;
      &lt;li&gt;Figuratively, we’ve fixed 80% of the bugs after testing 20% of the browsers&lt;/li&gt;
      &lt;li&gt;Now, we verify the experience of 80% of audience through testing a different 20% of browsers&lt;/li&gt;
      &lt;li&gt;Prioritize the browsers&lt;/li&gt;
      &lt;li&gt;Use a 3rd-party service that checks on multiple browsers and device&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;hr /&gt;

&lt;h5 id=&quot;references&quot;&gt;&lt;strong&gt;References:&lt;/strong&gt;&lt;/h5&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.smashingmagazine.com/2016/02/high-impact-minimal-effort-cross-browser-testing/&quot;&gt;High Impact, Minimal-Effort Cross-Browser Testing&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Wed, 03 Aug 2016 05:57:02 -0700</pubDate>
        <link>http://www.wandrr.io/Breaking-down-cross-browser-testing</link>
        <guid isPermaLink="true">http://www.wandrr.io/Breaking-down-cross-browser-testing</guid>
        
        <category>testing</category>
        
        
      </item>
    
      <item>
        <title>Learning React</title>
        <description>&lt;p&gt;implementing react.js on gulp
- do a gulp task of react.js build&lt;/p&gt;

&lt;p&gt;*JSX makes us write HTML syntax in Javascript files&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;this does not run in browsers thats why we need a transpiler&lt;/li&gt;
  &lt;li&gt;since i am usin gulp, we are going to search for a gulp plugin that transpiles JSX files to plain js files&lt;/li&gt;
  &lt;li&gt;JSX to JS using babel&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;configuring gulp plugin babel was a bit tricky due to NPM dependency issues.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;learning react is quite overwhelming. I think with any new front-end is overwhelming due to the amount of dependencies or tools options that are available. Front-end development has indeed bloom.&lt;/p&gt;

&lt;p&gt;before digging further into random articles that suggests to use this or that tool. I’ve decided to learn plain React.js. Stripping other unknown tools and focusing on the foundation, then once comfortable with plain React.js, move on to another tool and implement. Learning indeed can also be a step-by-step process.&lt;/p&gt;

&lt;hr /&gt;

&lt;h5 id=&quot;references&quot;&gt;&lt;strong&gt;References:&lt;/strong&gt;&lt;/h5&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://jamesknelson.com/learn-raw-react-no-jsx-flux-es6-webpack/&quot;&gt;Learn Raw React — no JSX, no Flux, no ES6, no Webpack&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://blog.risingstack.com/the-react-way-getting-started-tutorial/&quot;&gt;The React.js Way: Getting Started Tutorial&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://buildwithreact.com/&quot;&gt;Build with React&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Thu, 28 Jul 2016 03:58:40 -0700</pubDate>
        <link>http://www.wandrr.io/Learning-React</link>
        <guid isPermaLink="true">http://www.wandrr.io/Learning-React</guid>
        
        <category>javascript</category>
        
        
      </item>
    
      <item>
        <title>Front-End Design Specs</title>
        <description>&lt;p&gt;determing a workflow is hard but its even harder when we go through a laborious iterative process with designers.&lt;/p&gt;

&lt;p&gt;since i have been using Zurb foundation, zurb foundation comes with a settings file that defines global variables for general design settings. This gave me the idea that responsive web design follows a certain pattern, same as Development.&lt;/p&gt;

&lt;p&gt;process to determing on refining the design and developer workflow are:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;list down general design css properties
    &lt;ul&gt;
      &lt;li&gt;layout
        &lt;ul&gt;
          &lt;li&gt;max-width&lt;/li&gt;
          &lt;li&gt;number of columns grid&lt;/li&gt;
          &lt;li&gt;gutter width
            &lt;ul&gt;
              &lt;li&gt;small breakpoint&lt;/li&gt;
              &lt;li&gt;medium breakpoint&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;typography - header
        &lt;ul&gt;
          &lt;li&gt;header font&lt;/li&gt;
          &lt;li&gt;header font sizes
            &lt;ul&gt;
              &lt;li&gt;small breakpoint&lt;/li&gt;
              &lt;li&gt;medium breakpoint&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
          &lt;li&gt;header color&lt;/li&gt;
          &lt;li&gt;header alignment, leading, kerning&lt;/li&gt;
          &lt;li&gt;header opacity, filter&lt;/li&gt;
          &lt;li&gt;header font weight&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;typography - body
        &lt;ul&gt;
          &lt;li&gt;body font size
            &lt;ul&gt;
              &lt;li&gt;small breakpoint&lt;/li&gt;
              &lt;li&gt;medium breakpoint&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
          &lt;li&gt;body font color&lt;/li&gt;
          &lt;li&gt;body font family&lt;/li&gt;
          &lt;li&gt;body line height, leading, kerning&lt;/li&gt;
          &lt;li&gt;body font weight&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;spacing measurement
        &lt;ul&gt;
          &lt;li&gt;width and height
            &lt;ul&gt;
              &lt;li&gt;small breakpoint&lt;/li&gt;
              &lt;li&gt;medium breakpopint&lt;/li&gt;
              &lt;li&gt;large breakpoint&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
          &lt;li&gt;spacing bet object and canvas&lt;/li&gt;
          &lt;li&gt;spacing bet multiple objects&lt;/li&gt;
          &lt;li&gt;spacing bet text and objects&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;objects
        &lt;ul&gt;
          &lt;li&gt;fill color&lt;/li&gt;
          &lt;li&gt;stroke, color, size, style&lt;/li&gt;
          &lt;li&gt;opacity/filter&lt;/li&gt;
          &lt;li&gt;corner radius&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;color palette
        &lt;ul&gt;
          &lt;li&gt;primary, secondary, tertiary, quaternary&lt;/li&gt;
          &lt;li&gt;monotone
            &lt;ul&gt;
              &lt;li&gt;gray - light, medium, dark&lt;/li&gt;
              &lt;li&gt;black&lt;/li&gt;
              &lt;li&gt;white&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;after analyzing above data and visually looking at a design comp, these properties are already set on the provided design comp but not documented.&lt;/p&gt;

&lt;p&gt;this is where PNG Express comes in, photoshop plugin tool.&lt;/p&gt;

&lt;p&gt;after testing on a design comp and implementing it on theme development, it is indeed an ease for us developers.&lt;/p&gt;

&lt;p&gt;so overview process would be:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;designer designs ui comp&lt;/li&gt;
  &lt;li&gt;after design is complete, designer sets Design Specs with PNG Express&lt;/li&gt;
  &lt;li&gt;pass the UI comp with design specs to front end developer&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;front end developer implements these measurements on css styles sheets&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;it does not need to be exact pixels, this is a good way to atleast get an estimate.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;with this in set, this also gives Front end developers to compile a Style Guide and or components that can be resuable.&lt;/p&gt;

&lt;hr /&gt;

&lt;h5 id=&quot;references&quot;&gt;&lt;strong&gt;References:&lt;/strong&gt;&lt;/h5&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.smashingmagazine.com/2014/10/front-end-development-ode-to-specifications/&quot;&gt;A Front-End Developer’s Ode To Specifications&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.pngexpress.com/&quot;&gt;PNG Express&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Thu, 28 Jul 2016 03:58:40 -0700</pubDate>
        <link>http://www.wandrr.io/Front-End-Design-Specs</link>
        <guid isPermaLink="true">http://www.wandrr.io/Front-End-Design-Specs</guid>
        
        <category>workflow</category>
        
        
      </item>
    
      <item>
        <title>Front-End Workflow with Grav theme</title>
        <description>&lt;p&gt;This blog post explains on how I have setup a custom basic Grav theme with modern front-end workflow.&lt;/p&gt;

&lt;p&gt;This idea have come into mind when I was assigned a project that requires the use of a CSS framework and other plugins for animations/transitions. Since I will be building websites with the same requirements, why not create a &lt;strong&gt;Grav Starter Theme with Front-End Workflow&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;I will be updating this theme with tested CSS animations/transitions plugins that I think will play well with Grav and meets client’s business requirements.&lt;/p&gt;

&lt;p&gt;For documentation and updates, refer to its github repo: &lt;a href=&quot;https://github.com/rlynjb/gravtheme-frontendflow&quot;&gt;Grav Theme - Front-End Flow&lt;/a&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;Contents&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;#before-starting&quot;&gt;Before starting&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#every-website-project-will-have&quot;&gt;Every website project will have&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#developing-starter-kit-theme&quot;&gt;Developing starter kit theme&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#gulpfilejs-setup&quot;&gt;gulpfile.js setup&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#importing-foundation-components-and-overriding-settings-file&quot;&gt;importing foundation components and overriding settings file&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;before-starting&quot;&gt;Before starting:&lt;/h3&gt;

&lt;p&gt;Install the following globally as it is required to run Bower and Gulp in your local dev.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Node&lt;/li&gt;
  &lt;li&gt;NPM or NVM if you deal with multiple node versions&lt;/li&gt;
  &lt;li&gt;After installing Grav
    &lt;ul&gt;
      &lt;li&gt;refer to ff. link for Getting Started with Grav: &lt;a href=&quot;&quot;&gt;&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;git clone&lt;/code&gt; this repo inside of &lt;code class=&quot;highlighter-rouge&quot;&gt;/user/themes/&lt;/code&gt; directory&lt;/li&gt;
  &lt;li&gt;inside of &lt;code class=&quot;highlighter-rouge&quot;&gt;/user/themes/gravtheme-frontendflow/&lt;/code&gt; directory, run:
    &lt;ul&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;npm install -g&lt;/code&gt;
        &lt;ul&gt;
          &lt;li&gt;required to run Bower and Gulp&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;bower install&lt;/code&gt;
        &lt;ul&gt;
          &lt;li&gt;installs 3rd-party plugins used on this theme&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;gulp &amp;amp;&amp;amp; gulp watch&lt;/code&gt;
        &lt;ul&gt;
          &lt;li&gt;builds our sass files. We’ve carefully chose each Foundation components to avoid CSS bloats and overriding of styles.&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;every-website-project-will-have&quot;&gt;Every website project will have:&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Grav + Admin core&lt;/strong&gt;
    &lt;ul&gt;
      &lt;li&gt;To get fresh install: &lt;a href=&quot;https://getgrav.org/&quot;&gt;Get Grav&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Basic Grav Theme setup&lt;/strong&gt;
    &lt;ul&gt;
      &lt;li&gt;Follow tutorial to get started: &lt;a href=&quot;https://learn.getgrav.org/themes/theme-tutorial&quot;&gt;Get Grav - Theme Tutorial&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;package.json&lt;/code&gt; file
    &lt;ul&gt;
      &lt;li&gt;installs &lt;strong&gt;Bower&lt;/strong&gt;, &lt;strong&gt;Gulp.js&lt;/strong&gt;, and other gulp dependencies for build system and front-end workflow aid&lt;/li&gt;
      &lt;li&gt;go to &lt;a href=&quot;https://www.npmjs.com/&quot;&gt;npmjs.com&lt;/a&gt; to search for more packages&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;bower.json&lt;/code&gt; file
    &lt;ul&gt;
      &lt;li&gt;installs required 3rd-party assets&lt;/li&gt;
      &lt;li&gt;go to &lt;a href=&quot;http://bower.io&quot;&gt;bower.io&lt;/a&gt; to search for more packages&lt;/li&gt;
      &lt;li&gt;or install packages via &lt;strong&gt;Github repos&lt;/strong&gt;
        &lt;ul&gt;
          &lt;li&gt;&lt;a href=&quot;https://bower.io/docs/api/&quot;&gt;bower.io - api&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;http://stackoverflow.com/questions/19348076/installing-a-dependency-with-bower-from-url-and-specify-version&quot;&gt;Installing a dependency with Bower from URL and specify version&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;setup &lt;code class=&quot;highlighter-rouge&quot;&gt;gulpfile.js&lt;/code&gt; file
    &lt;ul&gt;
      &lt;li&gt;Why use &lt;strong&gt;Gulp.js&lt;/strong&gt;?
        &lt;ul&gt;
          &lt;li&gt;&lt;strong&gt;Sass&lt;/strong&gt; seem to not support building multiple &lt;code class=&quot;highlighter-rouge&quot;&gt;scss&lt;/code&gt; files. It require either Compass, Grunt, or libsass (same Build system concept as Gulp.js)&lt;/li&gt;
          &lt;li&gt;&lt;strong&gt;Grav’s Asset Manager&lt;/strong&gt; lacks support for sass and its still quite buggy&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;Check this project’s github repo for &lt;strong&gt;package.json&lt;/strong&gt;, &lt;strong&gt;bower.json&lt;/strong&gt;, and &lt;strong&gt;gulp.js&lt;/strong&gt; updates.&lt;br /&gt;
&lt;a href=&quot;https://github.com/rlynjb/gravtheme-frontendflow&quot;&gt;Grav Theme - Front-End Flow&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;developing-starter-kit-theme&quot;&gt;Developing starter kit theme&lt;/h3&gt;

&lt;p&gt;During developing &lt;strong&gt;Grav Theme - Front-End Flow&lt;/strong&gt; starter kit theme, I have come across issues that I think worth noting.&lt;/p&gt;

&lt;h3 id=&quot;gulpfilejs-setup&quot;&gt;gulpfile.js setup&lt;/h3&gt;

&lt;p&gt;After installing &lt;strong&gt;foundation-sites&lt;/strong&gt; via bower. we will need to setup our &lt;code class=&quot;highlighter-rouge&quot;&gt;gulpfile.js&lt;/code&gt; file.&lt;/p&gt;

&lt;p&gt;Follow the youtube video tutorial to get started:&lt;/p&gt;

&lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;https://www.youtube.com/embed/De6H0eFrfvY&quot; frameborder=&quot;0&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;importing-foundation-components-and-overriding-settings-file&quot;&gt;importing foundation components and overriding settings file&lt;/h3&gt;

&lt;p&gt;While setting it up, I’ve come across an issue. The following link helped me solved the issue.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://stackoverflow.com/questions/34537431/foundation-6-does-not-generate-any-styles&quot;&gt;stackoverflow - Foundation 6 does not generate any styles&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Another issue i came across was overriding Foundation’s settings file. It took me awhile until I figured out why its not overriding the default settings file. Solution is on my github repo&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/rlynjb/gravtheme-frontendflow&quot;&gt;GravTheme - Front End Flow theme&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Wed, 13 Jul 2016 05:09:47 -0700</pubDate>
        <link>http://www.wandrr.io/Front-End-Workflow-with-Grav-theme</link>
        <guid isPermaLink="true">http://www.wandrr.io/Front-End-Workflow-with-Grav-theme</guid>
        
        <category>static site</category>
        
        
      </item>
    
      <item>
        <title>Getting started and basic theming with Grav</title>
        <description>&lt;p&gt;Hi all! I’ve created this blog post as my notes for learning and exploring Grav. If you haven’t heard, Grav is a full flat-file CMS, this means, it does not use any database. All data are saved as YAML files. It follows a certian naming convention and uses its directory page hierarchy structure to generate routes.&lt;/p&gt;

&lt;p&gt;Again, consider this blog post as notes rather than re-explaining informations that exists on Grav documentation or other blog sites.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;Contents&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;#getting-started-on-digital-ocean&quot;&gt;Getting Started on Digital Ocean&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;create a droplet&lt;/li&gt;
      &lt;li&gt;debugging nginx with php5-fpm&lt;/li&gt;
      &lt;li&gt;fixing php 502 gateway page&lt;/li&gt;
      &lt;li&gt;tips on using configuration files yaml&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#getting-started-on-mamp&quot;&gt;Getting Started on MAMP&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;Install Brew&lt;/li&gt;
      &lt;li&gt;Install MAMP&lt;/li&gt;
      &lt;li&gt;Install Grav&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#theming-in-grav&quot;&gt;Theming in Grav&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;Method for setting up a pre-made HTML5 template to Grav theme&lt;/li&gt;
      &lt;li&gt;Method for loadings assets and partial out the main index.html file&lt;/li&gt;
      &lt;li&gt;Breaking our home page template file further by using Modular Pages&lt;/li&gt;
      &lt;li&gt;Creating custom fields to let users update data in theme by using Blueprint Pages&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h1 id=&quot;getting-started-on-digital-ocean&quot;&gt;Getting Started on Digital Ocean&lt;/h1&gt;

&lt;h3 id=&quot;create-a-droplet&quot;&gt;create a droplet&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://learn.getgrav.org/hosting/vps/digitalocean&quot;&gt;https://learn.getgrav.org/hosting/vps/digitalocean&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;debugging-nginx-with-php5-fpm&quot;&gt;debugging nginx with php5-fpm&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://serverfault.com/questions/562062/nginx-with-php-fpm-got-502-bad-gateway-on-ubuntu-server-12-04&quot;&gt;resource 1&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://stackoverflow.com/questions/1706111/where-can-i-find-the-error-logs-of-nginx-using-fastcgi-and-django&quot;&gt;resource 2&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;fixing-php-502-gateway-page&quot;&gt;fixing php 502 gateway page&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/owncloud/core/issues/14187&quot;&gt;resource&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;tips-on-using-configuration-files-yaml&quot;&gt;tips on using configuration files, yaml:&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;do not change configs in &lt;code class=&quot;highlighter-rouge&quot;&gt;/system/config/system.yaml&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;/system/config/site.yaml&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;do not change configs in &lt;code class=&quot;highlighter-rouge&quot;&gt;/user/plugins/&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;rather override them in &lt;code class=&quot;highlighter-rouge&quot;&gt;user/config/system.yaml&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;user/config/site.yaml&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;user/config/plugins/myplugin.yaml&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;note: all yaml files are contructed by name spacing. Grav picks it up in a hierarchy order.&lt;/p&gt;

&lt;hr /&gt;

&lt;h1 id=&quot;getting-started-on-mamp&quot;&gt;Getting Started on MAMP&lt;/h1&gt;

&lt;h3 id=&quot;install-brew&quot;&gt;1. Install Brew&lt;/h3&gt;

&lt;p&gt;This is to install &lt;strong&gt;git&lt;/strong&gt; and &lt;strong&gt;other development goodies&lt;/strong&gt; if you are a fan of commandline.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://brew.sh/&quot;&gt;http://brew.sh/&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://commandlinepoweruser.com/&quot;&gt;http://commandlinepoweruser.com/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;install-mamp&quot;&gt;2. Install MAMP&lt;/h3&gt;

&lt;p&gt;You can use any webserver but I’ve used &lt;strong&gt;MAMP&lt;/strong&gt; because it was the quickest way I can install a webserver and setup a &lt;strong&gt;local Apache&lt;/strong&gt; eventhough we are not using MySql database.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.mamp.info/en/&quot;&gt;https://www.mamp.info/en/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;install-grav&quot;&gt;3. Install Grav&lt;/h3&gt;

&lt;ol&gt;
  &lt;li&gt;Download &lt;strong&gt;Grav core + admin plugins&lt;/strong&gt; files from &lt;a href=&quot;https://getgrav.org/downloads&quot;&gt;https://getgrav.org/downloads&lt;/a&gt; and place into &lt;code class=&quot;highlighter-rouge&quot;&gt;htdocs&lt;/code&gt; directory.
    &lt;ul&gt;
      &lt;li&gt;You can choose either &lt;strong&gt;Grav core&lt;/strong&gt; or &lt;strong&gt;Grav core + admin plugins&lt;/strong&gt;&lt;/li&gt;
      &lt;li&gt;If &lt;strong&gt;Grav core&lt;/strong&gt; only, you have the option to install &lt;strong&gt;Grav admin&lt;/strong&gt; later by running &lt;code class=&quot;highlighter-rouge&quot;&gt;bin/gpm install admin&lt;/code&gt; on the root directory of your &lt;strong&gt;Grav core&lt;/strong&gt; files.&lt;br /&gt;
 More info: &lt;a href=&quot;https://learn.getgrav.org/admin-panel/introduction&quot;&gt;https://learn.getgrav.org/admin-panel/introduction&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Unzip the &lt;code class=&quot;highlighter-rouge&quot;&gt;grav-admin-v*.*.**.zip&lt;/code&gt; file on the &lt;code class=&quot;highlighter-rouge&quot;&gt;htdocs&lt;/code&gt; directory.&lt;/li&gt;
  &lt;li&gt;You can rename the &lt;strong&gt;Grav&lt;/strong&gt; directory to whatever project name you want.
    &lt;ul&gt;
      &lt;li&gt;You can also move the &lt;strong&gt;Grav core files&lt;/strong&gt; to an empty &lt;strong&gt;Github Repo directory&lt;/strong&gt;.&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;Tip:&lt;/strong&gt; Make sure to move &lt;code class=&quot;highlighter-rouge&quot;&gt;.htaccess&lt;/code&gt; file as well to avoid &lt;strong&gt;404 Not Found&lt;/strong&gt; error when visiting subpages.&lt;/li&gt;
      &lt;li&gt;For more info, check &lt;a href=&quot;https://learn.getgrav.org/troubleshooting&quot;&gt;https://learn.getgrav.org/troubleshooting&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://getgrav.org/&quot;&gt;https://getgrav.org/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h1 id=&quot;theming-in-grav&quot;&gt;Theming in Grav&lt;/h1&gt;

&lt;h3 id=&quot;method-for-setting-up-a-pre-made-html5-template-to-grav-theme&quot;&gt;Method for setting up a pre-made HTML5 template to Grav theme&lt;/h3&gt;

&lt;ol&gt;
  &lt;li&gt;Unzip the &lt;strong&gt;HTML5 theme&lt;/strong&gt; zip file unto the &lt;code class=&quot;highlighter-rouge&quot;&gt;user/themes/&lt;/code&gt; directory.&lt;/li&gt;
  &lt;li&gt;Register your theme by following &lt;strong&gt;Step 1 - Base Theme Setup&lt;/strong&gt; on &lt;a href=&quot;https://learn.getgrav.org/themes/theme-tutorial&quot;&gt;https://learn.getgrav.org/themes/theme-tutorial&lt;/a&gt;.
    &lt;ul&gt;
      &lt;li&gt;For &lt;strong&gt;Step 1 - Base Theme Setup&lt;/strong&gt; - #2&lt;br /&gt;
 &lt;em&gt;Tip:&lt;/em&gt; You can use the same HTML5 theme directory name or you can clean up directory name by renaming and practicing proper naming convention.&lt;br /&gt;
 &lt;em&gt;Ex:&lt;/em&gt; Avoid whitespace, avoid special characters except &lt;code class=&quot;highlighter-rouge&quot;&gt;_&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;-&lt;/code&gt; following &lt;em&gt;camel case or snake case&lt;/em&gt; naming convention.&lt;/li&gt;
      &lt;li&gt;For &lt;strong&gt;Step 1 - Base Theme Setup&lt;/strong&gt; - #3&lt;br /&gt;
 &lt;em&gt;Tip:&lt;/em&gt; I chose to follow &lt;strong&gt;Grav’s Theme directory structure&lt;/strong&gt; rather than to use the &lt;strong&gt;HTML5 theme&lt;/strong&gt; default directory structure to avoid nested directory level, plus, Grav runs a &lt;em&gt;gpm&lt;/em&gt; engine which goes through each directories and yaml files to read data.&lt;/li&gt;
      &lt;li&gt;For &lt;strong&gt;Step 1 - Base Theme Setup&lt;/strong&gt; - #4&lt;br /&gt;
 &lt;em&gt;Tip:&lt;/em&gt; I believe this basically tells Grav that we are extending a Grav Theme class and our custom theme gets registered unto Grav core files.&lt;/li&gt;
      &lt;li&gt;For &lt;strong&gt;Step 1 - Base Theme Setup&lt;/strong&gt; - #5&lt;br /&gt;
 &lt;em&gt;Tip:&lt;/em&gt; This file just enables our theme, but later on, there are more theme configuration that uses this file.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;method-for-loading-assets-and-partial-out-the-main-indexhtml-file&quot;&gt;Method for loading assets and partial out the main index.html file&lt;/h3&gt;

&lt;p&gt;Now that we have setup our theme directory structures and registered our theme to Grav core files. We will continue on by:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Load assets (css, js, images) in Head and Body tags.&lt;/li&gt;
  &lt;li&gt;Introduction to using Twig templating engine.&lt;/li&gt;
  &lt;li&gt;Organize our code in &lt;code class=&quot;highlighter-rouge&quot;&gt;index.html&lt;/code&gt; file by using Grav’s &lt;code class=&quot;highlighter-rouge&quot;&gt;/templates/partials&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;ol&gt;
  &lt;li&gt;Now, we load our assets by moving HTML5 theme assets to Grav theme’s asset directory structure. Ex: &lt;code class=&quot;highlighter-rouge&quot;&gt;/css&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;/fonts&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;/images&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;/js&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;/templates&lt;/code&gt;
    &lt;ul&gt;
      &lt;li&gt;This step is a replacement for &lt;strong&gt;Step 2 - Add Bootstrap&lt;/strong&gt;&lt;br /&gt;
 We are not using Boostrap, instead we are using the HTML5’s assets.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Next is to just follow the remaining steps, &lt;strong&gt;Step 3 - Base Template&lt;/strong&gt; to &lt;strong&gt;Step 8 - Testing&lt;/strong&gt;.
    &lt;ul&gt;
      &lt;li&gt;This step pretty much explains:&lt;br /&gt;
 &lt;strong&gt;Loading assets.&lt;/strong&gt; When to use &lt;code class=&quot;highlighter-rouge&quot;&gt;theme_url&lt;/code&gt; twig variable and &lt;code class=&quot;highlighter-rouge&quot;&gt;do assets.add(&#39;&#39;)&lt;/code&gt; twig function and how it relates with &lt;strong&gt;Grav’s Asset Manager&lt;/strong&gt;.&lt;br /&gt;
 &lt;strong&gt;Introduction to basic Twig syntax.&lt;/strong&gt;&lt;br /&gt; Also, exploring some of Grav’s global twig variables.
 &lt;strong&gt;Partial out&lt;/strong&gt; the theme’s header section, footer section, and main content section to maintain a cleaner &lt;code class=&quot;highlighter-rouge&quot;&gt;base.html.twig&lt;/code&gt; file.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;breaking-our-home-page-template-file-further-by-using-modular-pages&quot;&gt;Breaking our home page template file further by using Modular Pages&lt;/h3&gt;

&lt;p&gt;Most HTML5 themes comes with a home page designed similar to one-page website designs. For this step, we are going to breakdown this one-page website design into sections and use &lt;strong&gt;Grav’s Modular Pages&lt;/strong&gt; templating to separate and organize these sections.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Open &lt;code class=&quot;highlighter-rouge&quot;&gt;base.html.twig&lt;/code&gt; template and analyze what HTML tag is used to contain contents of each sections.
    &lt;ul&gt;
      &lt;li&gt;&lt;em&gt;Tip:&lt;/em&gt; Usual container tags are &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;section&amp;gt;&amp;lt;/section&amp;gt;&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;div id=&quot;&quot;&amp;gt;&amp;lt;/div&amp;gt;&lt;/code&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;After determining the HTML tag container, convert these sections into &lt;strong&gt;Grav’s Modular Pages&lt;/strong&gt;.
    &lt;ul&gt;
      &lt;li&gt;Learn more about Modular Pages on the ff. link and ff. instructions: &lt;a href=&quot;https://learn.getgrav.org/content/modular&quot;&gt;https://learn.getgrav.org/content/modular&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;It is also a good idea to scheme through &lt;strong&gt;Grav’s Content&lt;/strong&gt; documentation page &lt;a href=&quot;https://learn.getgrav.org/content&quot;&gt;https://learn.getgrav.org/content&lt;/a&gt; to get a glimpse of the parts of a page.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;creating-custom-fields-to-let-users-update-data-in-theme-by-using-blueprint-pages&quot;&gt;Creating custom fields to let users update data in theme by using Blueprint Pages&lt;/h3&gt;

&lt;p&gt;Now that we’ve broken our template further by each sections using &lt;strong&gt;Modular Pages&lt;/strong&gt;. What if we wanted users to update contents or bits pieces of data in each section using &lt;strong&gt;Grav’s Administration Panel&lt;/strong&gt;?&lt;/p&gt;

&lt;p&gt;In this step, we will use Grav’s Forms called Blueprints &lt;a href=&quot;https://learn.getgrav.org/forms/blueprints&quot;&gt;https://learn.getgrav.org/forms/blueprints&lt;/a&gt; to convert &lt;strong&gt;static data&lt;/strong&gt; into editable ones using Grav’s &lt;code class=&quot;highlighter-rouge&quot;&gt;Admin dashboard &amp;gt; Pages&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;For an overview and how to setup a &lt;strong&gt;Themes and Plugins Blueprints&lt;/strong&gt; or &lt;strong&gt;Pages Blueprints&lt;/strong&gt;, go to this link &lt;a href=&quot;https://learn.getgrav.org/forms/blueprints&quot;&gt;https://learn.getgrav.org/forms/blueprints&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;My experience with setting up Blueprints for &lt;strong&gt;Theme&lt;/strong&gt; configuration page and for each &lt;strong&gt;Modular Pages&lt;/strong&gt; was quite challenging. Grav’s documentation doesn’t seem to provide detailed information on &lt;strong&gt;how to define a field and which directory its information is stored&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Although for &lt;strong&gt;Theme Blueprint&lt;/strong&gt; it was pretty straight forward.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Create a &lt;code class=&quot;highlighter-rouge&quot;&gt;blueprints.yaml&lt;/code&gt; file in the root directory of theme.&lt;/li&gt;
  &lt;li&gt;Follow the &lt;strong&gt;Components of a Blueprint&lt;/strong&gt; in &lt;a href=&quot;https://learn.getgrav.org/forms/blueprints&quot;&gt;https://learn.getgrav.org/forms/blueprints&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;strong&gt;Tip:&lt;/strong&gt; a YAML file will be generated for Theme configuration page in &lt;code class=&quot;highlighter-rouge&quot;&gt;user/config&lt;/code&gt; directory.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;It was trial and error for &lt;strong&gt;Modular Page Blueprints&lt;/strong&gt; because its documentation seem to lack information on &lt;strong&gt;how to define a field and which directory its information is stored&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;An overview method I find when working with Modular Page Blueprints are:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Create a &lt;code class=&quot;highlighter-rouge&quot;&gt;blueprints&lt;/code&gt; directory under root template directory &lt;code class=&quot;highlighter-rouge&quot;&gt;yourtheme &amp;gt; blueprints&lt;/code&gt;.
    &lt;ul&gt;
      &lt;li&gt;Since we are creating a blueprint for modular pages, we are going to store our blueprints (&lt;code class=&quot;highlighter-rouge&quot;&gt;*.yaml&lt;/code&gt; files) under modular directory.&lt;/li&gt;
      &lt;li&gt;So with this, create a modular directory under &lt;code class=&quot;highlighter-rouge&quot;&gt;yourtheme &amp;gt; blueprints &amp;gt; modular&lt;/code&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Create a &lt;code class=&quot;highlighter-rouge&quot;&gt;some-modular-template-name.yaml&lt;/code&gt; file that pertains to a modular template.
    &lt;ul&gt;
      &lt;li&gt;&lt;strong&gt;Tip:&lt;/strong&gt; Make sure your &lt;code class=&quot;highlighter-rouge&quot;&gt;.yaml&lt;/code&gt; file name matches a Modular template name you want to create Admin custom fields for.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;When defining &lt;code class=&quot;highlighter-rouge&quot;&gt;*.yaml&lt;/code&gt; file form, a good example would be the default &lt;strong&gt;Grav antimatter theme&lt;/strong&gt;, &lt;a href=&quot;https://github.com/getgrav/grav-theme-antimatter/blob/develop/blueprints/modular/showcase.yaml&quot;&gt;https://github.com/getgrav/grav-theme-antimatter/blob/develop/blueprints/modular/showcase.yaml&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;Also, an additional note to keep in mind when working with Page Blueprints&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Grav reads data in &lt;code class=&quot;highlighter-rouge&quot;&gt;*.yaml&lt;/code&gt; files in sequence of how directories and files are structured, So when defining a field, it needs to be under a parent &lt;code class=&quot;highlighter-rouge&quot;&gt;header.&lt;/code&gt; because blueprint pages store its data in pages headers. Also when uploading media files, Grav stores these media files under its page direcotory.&lt;/p&gt;
</description>
        <pubDate>Wed, 13 Jul 2016 03:52:08 -0700</pubDate>
        <link>http://www.wandrr.io/Getting-started-and-basic-theming-with-Grav</link>
        <guid isPermaLink="true">http://www.wandrr.io/Getting-started-and-basic-theming-with-Grav</guid>
        
        <category>static site</category>
        
        
      </item>
    
      <item>
        <title>Why is it, in general, a good idea to leave the global scope of a website as-is and never touch it?</title>
        <description>&lt;p&gt;There are various reasons why Global Variables are bad. This can include performance, name collision, or bad code readability/organization.&lt;/p&gt;

&lt;p&gt;Pointers below are from &lt;a href=&quot;http://c2.com/cgi/wiki?GlobalVariablesAreBad&quot;&gt;Global Variables Are Bad&lt;/a&gt; that were paraphrased in layman’s term.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Non-locality&lt;/strong&gt; - Code is easier to understand when parts of an app is limited to its own scope. Its easy to forget what a variable is intended for, but setting local variables in its own scope can help alleviate bad code readability/organization.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;No Access Control or Constraint Checking&lt;/strong&gt; - Any part of an app can easily get or set a global variable and this can cause an app to easily break.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Namespace pollution&lt;/strong&gt; - When setting a variable globally, they will be available in any parts of your code, thus, causing variable name collision and polluting the global namespace with unnecessary variables for certain parts of an app when executed.&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h5 id=&quot;references&quot;&gt;&lt;strong&gt;References:&lt;/strong&gt;&lt;/h5&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://c2.com/cgi/wiki?GlobalVariablesAreBad&quot;&gt;Global Variables Are Bad&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Mon, 16 May 2016 04:03:37 -0700</pubDate>
        <link>http://www.wandrr.io/Why-is-it-in-general-a-good-idea-to-leave-the-global-scope-of-a-website-as-is-and-never-touch-it</link>
        <guid isPermaLink="true">http://www.wandrr.io/Why-is-it-in-general-a-good-idea-to-leave-the-global-scope-of-a-website-as-is-and-never-touch-it</guid>
        
        <category>javascript interview questions</category>
        
        
      </item>
    
      <item>
        <title>What is &quot;use strict&quot;;? what are the advantages and disadvantages to using it?</title>
        <description>&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;&quot;use strict;&quot;&lt;/code&gt; is applied to an entire script file or to individual functions by implementing at the beginning of a file or at the beginning of &lt;em&gt;inside a function&lt;/em&gt; before anything else.&lt;/p&gt;

&lt;p&gt;Main purpose of using &lt;strong&gt;strict mode&lt;/strong&gt; is to be able to evaluate your JavaScript code and throw more errors in an effort to make your code more robust, readable, accurate and fixes compatibility issues that may arise for future JavaScript releases.&lt;/p&gt;

&lt;hr /&gt;

&lt;h5 id=&quot;references&quot;&gt;&lt;strong&gt;References:&lt;/strong&gt;&lt;/h5&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.2ality.com/2011/01/javascripts-strict-mode-summary.html&quot;&gt;JavaScript’s strict mode: a summary&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://stackoverflow.com/questions/8651415/what-is-strict-mode-and-how-is-it-used&quot;&gt;what is “strict mode” and how is it used?&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Strict_mode&quot;&gt;MDN - Strict mode&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Mon, 16 May 2016 03:57:29 -0700</pubDate>
        <link>http://www.wandrr.io/JS-Interview-Question-What-is-use-strict-what-are-the-advantages-and-disadvantages-to-using-it</link>
        <guid isPermaLink="true">http://www.wandrr.io/JS-Interview-Question-What-is-use-strict-what-are-the-advantages-and-disadvantages-to-using-it</guid>
        
        <category>javascript interview questions</category>
        
        
      </item>
    
  </channel>
</rss>
